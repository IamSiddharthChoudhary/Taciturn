{"id":"1f4bf613abbca5d95a073a6e7f22b7f9","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/convertToERC721.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"./InewBasicNft.sol\";\n\ncontract ConvertToERC721 is INewBasicNFT, ERC721{\n\n    uint256 public tokenCounter;\n    mapping(uint256=>string) private tokenIDtoURI;\n\n    constructor(string memory str1, string memory str2) ERC721(str1,str2){\n        tokenCounter = 0;\n    }\n\n    function tokenURI(uint256 tokenID) public override view returns(string memory){\n        return tokenIDtoURI[tokenID];\n    }\n\n    function mintNft(string memory uri) public override {\n        tokenIDtoURI[tokenCounter] = uri;\n        tokenCounter++;\n    } \n}"},"contracts/ImarketPlace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ninterface INftMarketPlace {\n    function withdrawProceeds(\n        uint[2] calldata _pA,\n        uint[2][2] calldata _pB, \n        uint[2] calldata _pC, \n        uint nullHash,\n        uint256 com) external;\n}"},"contracts/InewBasicNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ninterface INewBasicNFT{\n    function mintNft(string memory uri) external;\n}"},"contracts/Iverifier.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ninterface IVerifier {\n    function verifyProof(uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[3] memory input) external returns(bool);\n}"},"contracts/Izknft.sol":{"content":"//SPDX-License-Indentifier: MIT\npragma solidity ^0.8.7;\n\ninterface IZkNFT {\n    \n    function approve(uint256 _tokenID, address op) external;\n    function getApprovedAdd(uint256 _tokenID) external view returns(address);    \n    function ownerOf(uint256 _tokenID) external view returns (uint256);\n    function transferNFT(uint256 _tokenID, uint256 nullifierHash, address buyer) external;\n    function transferFrom(uint256 ownerNul, uint256 buyerNul, address buyer, uint256 _tokenID) external;\n    function getTokenURI(uint256 _tokenID) external view returns(string memory);\n    function name() external view  returns (string memory);\n    function symbol() external view  returns (string memory);\n    function deleteZkNft(uint256 tokenID, address owner) external;\n}"},"contracts/MIMCSponge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ncontract Hasher {\n    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n    uint256[20] c = [\n        0,\n        25823191961023811529686723375255045606187170120624741056268890390838310270028,\n        71153255768872006974285801937521995907343848376936063113800887806988124358800,\n        51253176922899201987938365653129780755804051536550826601168630951148399005246,\n        66651710483985382365580181188706173532487386392003341306307921015066514594406,\n        45887003413921204775397977044284378920236104620216194900669591190628189327887,\n        14399999722617037892747232478295923748665564430258345135947757381904956977453,\n        29376176727758177809204424209125257629638239807319618360680345079470240949145,\n        13768859312518298840937540532277016512087005174650120937309279832230513110846,\n        54749662990362840569021981534456448557155682756506853240029023635346061661615,\n        25161436470718351277017231215227846535148280460947816286575563945185127975034,\n        90370030464179443930112165274275271350651484239155016554738639197417116558730,\n        92014788260850167582827910417652439562305280453223492851660096740204889381255,\n        40376490640073034398204558905403523738912091909516510156577526370637723469243,\n        903792244391531377123276432892896247924738784402045372115602887103675299839,\n        112203415202699791888928570309186854585561656615192232544262649073999791317171,\n        114801681136748880679062548782792743842998635558909635247841799223004802934045,\n        111440818948676816539978930514468038603327388809824089593328295503672011604028,\n        64965960071752809090438003157362764845283225351402746675238539375404528707397,\n        98428510787134995495896453413714864789970336245473413374424598985988309743097\n    ];\n\n    function MiMC5Feistel(uint256 _iL, uint256 _iR, uint256 _k) internal view returns(uint256 oL, uint256 oR) {\n        uint8 nRounds = 20;\n\n        uint256 lastL = _iL;\n        uint256 lastR = _iR;\n\n        uint256 mask;\n        uint256 mask2;\n        uint256 mask4;\n        uint256 temp;\n\n        for(uint8 i = 0; i < nRounds; i++){\n            mask = addmod(lastR, _k, p);\n            mask = addmod(mask, c[i], p);\n            mask2 = mulmod(mask, mask, p);\n            mask4 = mulmod(mask2, mask2, p);\n            mask = mulmod(mask4, mask, p);\n\n            temp = lastR;\n            lastR = addmod(lastL, mask, p);\n            lastL = temp;\n        }\n\n        return (lastL, lastR);\n    }\n    function MiMC5Sponge(uint256[2] memory _ins, uint256 _k) external view returns(uint256 h) {\n        uint256 lastR = 0;\n        uint256 lastC = 0;\n\n        for(uint8 i = 0; i < _ins.length; i++){\n            lastR = addmod(lastR, _ins[i], p);\n            (lastR, lastC) = MiMC5Feistel(lastR, lastC, _k);\n        }\n\n        h = lastR;\n    }\n}"},"contracts/nftMarketPlace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./Izknft.sol\";\nimport \"./ImarketPlace.sol\";\nimport \"./InewBasicNft.sol\";\nimport \"./MIMCSponge.sol\";\n\ninterface IVerifier {\n    function verifyProof(uint[2] calldata _pA, uint[2][2] calldata _pB, uint[2] calldata _pC, uint[2] calldata _pubSignals) external returns (bool);\n}\n\ncontract NftMarketplace is ReentrancyGuard, INftMarketPlace{\n    error PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\n    error ItemNotForSale(address nftAddress, uint256 tokenId);\n    error NotListed(address nftAddress, uint256 tokenId);\n    error AlreadyListed(address nftAddress, uint256 tokenId);\n    error NoProceeds();\n    error NotOwner();\n    error NotApprovedForMarketplace();\n    error PriceMustBeAboveZero();\n    error TransactionFailed();\n    error NullifierAlreadyUsed();\n    error CommitmentAlreadyUsed();\n    error InvalidProof();\n    error NotAuthority();\n\n    struct Listing {\n        uint256 price;\n        uint256 seller;\n    }\n\n    event ItemListed(\n        uint256 seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n\n    event ItemCanceled(\n        uint256 seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId\n    );\n\n    event ItemBought(\n        uint256 buyer,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n\n    event ItemConverted(\n        address zkNftAddress,\n        uint256 indexed tokenID,\n        address ercNftAddress\n    );\n\n    Hasher hasher;\n    uint256 creationFee = 0;\n    uint256 marketFee = 0;\n    uint256 conversionFee = 0;\n    address verifier;\n    address private authority;\n    mapping(address => mapping(uint256 => Listing)) private s_listings;\n    mapping(uint256 => uint256) private s_proceeds;\n    mapping(uint256 => bool) private nullifierHashes;\n    mapping(uint256 => bool) private commitments;\n\n    constructor(address _hasher, address _verifier) public {\n        hasher = Hasher(_hasher);\n        verifier = _verifier;\n        authority = msg.sender;\n    }\n\n    modifier notListed(\n        address nftAddress,\n        uint256 tokenId\n    ) {\n        Listing memory listing = s_listings[nftAddress][tokenId];\n        if (listing.price > 0) {\n            revert AlreadyListed(nftAddress, tokenId);\n        }\n        _;\n    }\n\n    modifier isListed(address nftAddress, uint256 tokenId) {\n        Listing memory listing = s_listings[nftAddress][tokenId];\n        if (listing.price <= 0) {\n            revert NotListed(nftAddress, tokenId);\n        }\n        _;\n    }\n\n    modifier isOwner(\n        address nftAddress,\n        uint256 tokenId,\n        uint256 spenderCom\n    ) {\n        IZkNFT nft = IZkNFT(nftAddress);\n        uint256 ownerCom = nft.ownerOf(tokenId);\n        if (spenderCom==ownerCom) {\n            revert NotOwner();\n        } \n        _;\n    }\n\n    function listItem(\n        address nftAddress,\n        uint256 tokenId,\n        uint256 price,\n        uint256 com\n    )\n        external\n        notListed(nftAddress, tokenId)\n        isOwner(nftAddress, tokenId, com)\n    {\n        if(commitments[com]){\n            revert CommitmentAlreadyUsed();\n        }\n\n        if (price <= 0) {\n            revert PriceMustBeAboveZero();\n        }\n        IZkNFT nft = IZkNFT(nftAddress);\n        if (nft.getApprovedAdd(tokenId) != address(this)) {\n            revert NotApprovedForMarketplace();\n        }\n        s_listings[nftAddress][tokenId] = Listing(price, com);\n        emit ItemListed(com, nftAddress, tokenId, price);\n\n        commitments[com] = true;\n    }\n\n    function cancelListing(address nftAddress, uint256 tokenId, uint256 com)\n        external\n        isOwner(nftAddress, tokenId, com)\n        isListed(nftAddress, tokenId)\n    {\n        delete (s_listings[nftAddress][tokenId]);\n        emit ItemCanceled(com, nftAddress, tokenId);\n    }\n\n    function buyItem(address nftAddress, uint256 tokenId, uint256 com)\n        external\n        payable\n        isListed(nftAddress, tokenId)\n        nonReentrant\n    {\n        Listing memory listedItem = s_listings[nftAddress][tokenId];\n        if (msg.value < (listedItem.price + marketFee)) {\n            revert PriceNotMet(nftAddress, tokenId, listedItem.price);\n        }\n        s_proceeds[listedItem.seller] += msg.value;\n        delete (s_listings[nftAddress][tokenId]);\n        IZkNFT(nftAddress).transferNFT(tokenId,com,msg.sender);\n        emit ItemBought(com, nftAddress, tokenId, listedItem.price);\n    }\n\n    function updateListing(\n        address nftAddress,\n        uint256 tokenId,\n        uint256 newPrice,\n        uint256 com\n    )\n        external\n        isListed(nftAddress, tokenId)\n        nonReentrant\n        isOwner(nftAddress, tokenId, com)\n    {\n        if (newPrice <= 0) {\n            revert PriceMustBeAboveZero();\n        }\n        s_listings[nftAddress][tokenId].price = newPrice;\n        emit ItemListed(com, nftAddress, tokenId, newPrice);\n    }\n\n    function withdrawProceeds(\n        uint[2] calldata _pA,\n        uint[2][2] calldata _pB, \n        uint[2] calldata _pC, \n        uint nullHash,\n        uint256 com\n    ) \n        override external \n    {\n\n        if(!nullifierHashes[nullHash]){\n            revert NullifierAlreadyUsed();\n        }\n\n        uint256 _addr = uint256(uint160(msg.sender));\n\n        (bool verifyOK, ) = verifier.call(abi.encodeCall(IVerifier.verifyProof, (_pA, _pB, _pC, [nullHash, _addr])));\n\n        if(!verifyOK){\n            revert InvalidProof();\n        }\n\n        nullifierHashes[nullHash] = true;\n\n        uint256 proceeds = s_proceeds[com];\n        if (proceeds <= 0) {\n            revert NoProceeds();\n        }\n        s_proceeds[com] = 0;\n        (bool success, ) = payable(msg.sender).call{value: (proceeds - creationFee)}(\"\");\n        \n        if(!success){\n            revert TransactionFailed();\n        }\n    }\n\n    function setCreationFee(uint256 _fee) public {\n        if(msg.sender == authority){\n            revert NotAuthority();\n        }\n        creationFee = _fee;\n    }\n\n    function setBuyerFee(uint256 _fee) public {\n        if(msg.sender == authority){\n            revert NotAuthority();\n        }\n        marketFee = _fee;\n    }\n\n    function setConversionFee(uint256 _fee) public {\n        if(msg.sender == authority){\n            revert NotAuthority();\n        }\n        conversionFee = _fee;\n    }\n\n    function convertToERC721(address zkNftAddress, address convertableNft,uint256 tokenId) public payable {\n\n        (bool success, ) = payable(msg.sender).call{value: conversionFee}(\"\");\n        if(!success){\n            revert TransactionFailed();\n        }\n        string memory tokenURI = IZkNFT(zkNftAddress).getTokenURI(tokenId);\n        IZkNFT(zkNftAddress).deleteZkNft(tokenId,msg.sender);\n        INewBasicNFT(convertableNft).mintNft(tokenURI);\n\n        emit ItemConverted(zkNftAddress,tokenId,convertableNft);\n    }\n\n    function getListing(address nftAddress, uint256 tokenId)\n        external\n        view\n        returns (Listing memory)\n    {\n        return s_listings[nftAddress][tokenId];\n    }\n\n    function getProceeds(uint256 sellerCom) external view returns (uint256) {\n        return s_proceeds[sellerCom];\n    }\n}"},"contracts/verifier.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n/*\n    Copyright 2021 0KIMS association.\n\n    This file is generated with [snarkJS](https://github.com/iden3/snarkjs).\n\n    snarkJS is a free software: you can redistribute it and/or modify it\n    under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    snarkJS is distributed in the hope that it will be useful, but WITHOUT\n    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public\n    License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with snarkJS. If not, see <https://www.gnu.org/licenses/>.\n*/\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Groth16Verifier {\n    // Scalar field size\n    uint256 constant r    = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\n    // Base field size\n    uint256 constant q   = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n\n    // Verification Key data\n    uint256 constant alphax  = 7620273905133455123923188699501120573688059407543408093221814931786692355161;\n    uint256 constant alphay  = 13857441225875067601898474760724102506099012550535652825584149312692884633029;\n    uint256 constant betax1  = 20897713325791917749152979592608001826377651498226262868218962092957695452499;\n    uint256 constant betax2  = 19772298543080390696675496260463308972299381250046108538257960605389088562787;\n    uint256 constant betay1  = 7101202506321775967447212738930159242589068036862951607439995588485388122033;\n    uint256 constant betay2  = 6595858493288377996593226572718813908774170626004437745431995466988623628820;\n    uint256 constant gammax1 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;\n    uint256 constant gammax2 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;\n    uint256 constant gammay1 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;\n    uint256 constant gammay2 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;\n    uint256 constant deltax1 = 20558270115397936369807699592728941676595831640268483057758244987274363210140;\n    uint256 constant deltax2 = 3616539739901815211129489455227491940188071316798615060833396830000309628038;\n    uint256 constant deltay1 = 15807232927198773835089609773558528117044556871644866466059032161302308860271;\n    uint256 constant deltay2 = 17811712783796344117685869905298346681245374243878172914065402128937490183575;\n\n    \n    uint256 constant IC0x = 18683206396108297281768026122712053156557057023847304752001085986434851231563;\n    uint256 constant IC0y = 15292891358690313625524458286710737641994471158378654608038730687629138459114;\n    \n    uint256 constant IC1x = 20928373112189291242176934432236227890765702946212614242714929771218375549193;\n    uint256 constant IC1y = 17262692661960089926838107560686625362169539002876994268180104156182217772089;\n    \n    uint256 constant IC2x = 3783044405279299285640680055786914311095578968193533986153465386793559007738;\n    uint256 constant IC2y = 19434748421699528219555872959149036745768512038761704896854072249116844504602;\n    \n \n    // Memory data\n    uint16 constant pVk = 0;\n    uint16 constant pPairing = 128;\n\n    uint16 constant pLastMem = 896;\n\n    function verifyProof(uint[2] calldata _pA, uint[2][2] calldata _pB, uint[2] calldata _pC, uint[2] calldata _pubSignals) public view returns (bool) {\n        assembly {\n            function checkField(v) {\n                if iszero(lt(v, r)) {\n                    mstore(0, 0)\n                    return(0, 0x20)\n                }\n            }\n            \n            // G1 function to multiply a G1 value(x,y) to value in an address\n            function g1_mulAccC(pR, x, y, s) {\n                let success\n                let mIn := mload(0x40)\n                mstore(mIn, x)\n                mstore(add(mIn, 32), y)\n                mstore(add(mIn, 64), s)\n\n                success := staticcall(sub(gas(), 2000), 7, mIn, 96, mIn, 64)\n\n                if iszero(success) {\n                    mstore(0, 0)\n                    return(0, 0x20)\n                }\n\n                mstore(add(mIn, 64), mload(pR))\n                mstore(add(mIn, 96), mload(add(pR, 32)))\n\n                success := staticcall(sub(gas(), 2000), 6, mIn, 128, pR, 64)\n\n                if iszero(success) {\n                    mstore(0, 0)\n                    return(0, 0x20)\n                }\n            }\n\n            function checkPairing(pA, pB, pC, pubSignals, pMem) -> isOk {\n                let _pPairing := add(pMem, pPairing)\n                let _pVk := add(pMem, pVk)\n\n                mstore(_pVk, IC0x)\n                mstore(add(_pVk, 32), IC0y)\n\n                // Compute the linear combination vk_x\n                \n                g1_mulAccC(_pVk, IC1x, IC1y, calldataload(add(pubSignals, 0)))\n                \n                g1_mulAccC(_pVk, IC2x, IC2y, calldataload(add(pubSignals, 32)))\n                \n\n                // -A\n                mstore(_pPairing, calldataload(pA))\n                mstore(add(_pPairing, 32), mod(sub(q, calldataload(add(pA, 32))), q))\n\n                // B\n                mstore(add(_pPairing, 64), calldataload(pB))\n                mstore(add(_pPairing, 96), calldataload(add(pB, 32)))\n                mstore(add(_pPairing, 128), calldataload(add(pB, 64)))\n                mstore(add(_pPairing, 160), calldataload(add(pB, 96)))\n\n                // alpha1\n                mstore(add(_pPairing, 192), alphax)\n                mstore(add(_pPairing, 224), alphay)\n\n                // beta2\n                mstore(add(_pPairing, 256), betax1)\n                mstore(add(_pPairing, 288), betax2)\n                mstore(add(_pPairing, 320), betay1)\n                mstore(add(_pPairing, 352), betay2)\n\n                // vk_x\n                mstore(add(_pPairing, 384), mload(add(pMem, pVk)))\n                mstore(add(_pPairing, 416), mload(add(pMem, add(pVk, 32))))\n\n\n                // gamma2\n                mstore(add(_pPairing, 448), gammax1)\n                mstore(add(_pPairing, 480), gammax2)\n                mstore(add(_pPairing, 512), gammay1)\n                mstore(add(_pPairing, 544), gammay2)\n\n                // C\n                mstore(add(_pPairing, 576), calldataload(pC))\n                mstore(add(_pPairing, 608), calldataload(add(pC, 32)))\n\n                // delta2\n                mstore(add(_pPairing, 640), deltax1)\n                mstore(add(_pPairing, 672), deltax2)\n                mstore(add(_pPairing, 704), deltay1)\n                mstore(add(_pPairing, 736), deltay2)\n\n\n                let success := staticcall(sub(gas(), 2000), 8, _pPairing, 768, _pPairing, 0x20)\n\n                isOk := and(success, mload(_pPairing))\n            }\n\n            let pMem := mload(0x40)\n            mstore(0x40, add(pMem, pLastMem))\n\n            // Validate that all evaluations ∈ F\n            \n            checkField(calldataload(add(_pubSignals, 0)))\n            \n            checkField(calldataload(add(_pubSignals, 32)))\n            \n            checkField(calldataload(add(_pubSignals, 64)))\n            \n\n            // Validate all evaluations\n            let isValid := checkPairing(_pA, _pB, _pC, _pubSignals, pMem)\n\n            mstore(0, isValid)\n             return(0, 0x20)\n         }\n     }\n }\n"},"contracts/zkContract.sol":{"content":"//SPDX-License-Identifier:MIT\n\npragma solidity ^0.8.7;\n\nimport \"./MIMCSponge.sol\";\n\ncontract ZkContract{\n\n    event Check(address to, uint256 nullifierHash);\n\n    address verifier;\n    Hasher hasher;\n    mapping(string=>bool) private nullExists;\n    mapping(uint256=>bool) private comExists;\n\n    function minting(uint256 _commitment) public {\n        require(!comExists[_commitment],\"Duplicate commitment hash.\");\n\n        uint256 currentHash = _commitment;\n\n        uint256[2] memory ins;\n    \n\n        comExists[_commitment] = true;\n    }\n\n    function null_exists(string memory str) view public returns(bool){\n        return nullExists[str];\n    }\n\n    function registerNull(string memory str) public {\n        nullExists[str] = true;\n    }\n\n    function com_exists(uint256 com) view public returns(bool){\n        return comExists[com];\n    }\n\n    function regiterCom(uint256 com) public {\n        comExists[com] = true;\n    }\n}"},"contracts/zkNFT.sol":{"content":"// SPDX-License-Identifier:MIT\npragma solidity ^0.8.7;\n\nimport \"./Izknft.sol\";\n\n// function approve(uint256 _tokenID, address op) external;\n//     function getApprovedAdd(uint256 _tokenID) external view returns(address);    \n//     function ownerOf(uint256 _tokenID) external view returns (uint256);\n//     function transferNFT(uint256 _tokenID, uint256 nullifierHash, address buyer) external;\n//     function transferFrom(uint256 ownerNul, uint256 buyerNul, address buyer, uint256 _tokenID) external;\n//     function getTokenURI(uint256 _tokenID) external view returns(string memory);\n//     function name() external view  returns (string memory);\n//     function symbol() external view  returns (string memory);\n//     function deleteZkNft(uint256 tokenID, address owner) external;\n\n\ncontract zkNFT is IZkNFT{\n\n    event NFTTransfered(uint256 indexed from ,uint256 indexed to ,uint256 indexed tokenID);\n    event MetadataUpdate(uint256 indexed tokenID);\n\n    mapping(address => mapping (uint256=> uint256)) private addToCom;\n    mapping(uint256 => address) private comToAdd;\n    mapping(address => uint256) private noOfComs; \n    mapping(uint256 => uint256) private owners;\n    mapping(uint256 => string) private tokenURIs;\n    mapping (uint256 => address) tokenIDToAdd;\n\n    string _name = \"zkMP\";\n    string _symbol = \"Z\";\n    uint256 private tokenID;\n    \n    constructor(){\n        tokenID = 0;\n    }\n\n    function createNFT(uint256 commitment, string memory tokenURI) public {\n        address creator = msg.sender;\n\n        setAddAndCom(creator,commitment);\n        mintNFT(commitment,tokenURI);\n        tokenID++;\n    }\n\n    function deleteZkNft(uint256 tokenID, address owner) override public{\n\n    }\n\n    function getTokenURI(uint256 _tokenID) override public view returns(string memory){\n\n    }\n\n    function mintNFT(uint256 commitment,string memory _tokenURI) internal {\n        owners[tokenID] = commitment;\n        setTokenURI(tokenID,_tokenURI);\n\n        emit NFTTransfered(0, commitment, tokenID);\n    }\n\n    function setTokenURI(uint256 tokenId, string memory _tokenURI) internal {\n        tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    function transferFrom(uint256 ownerCom, uint256 buyerCom, address buyer, uint256 _tokenID) public override{\n\n        require(getApprovedAdd(_tokenID) == msg.sender, \"No approved to make this call\");\n        require(keccak256(abi.encodePacked(ownerOf(_tokenID))) == keccak256(abi.encodePacked(ownerCom)), \"Invalid comifier hash\");\n\n        transferNFT(_tokenID, buyerCom, buyer);\n    }\n\n    function transferNFT(uint256 _tokenID, uint256 commitment, address buyer) public override{\n        // owner losing nft\n        uint256 crtrCom = owners[_tokenID];\n        address owner = comToAdd[crtrCom]; \n        delete owners[_tokenID];\n        uint256 n = noOfComs[owner] - 1;\n        delete addToCom[owner][n];\n        noOfComs[owner] -= 1 ;\n\n        // Buyer getting nft\n        setAddAndCom(buyer,commitment);\n        owners[_tokenID] = commitment; \n    }   \n\n    function ownerOf(uint256 _tokenID) public override view returns (uint256){\n        return owners[_tokenID];\n    }\n\n    function exists(uint256 _tokenID) internal view returns (bool) {\n       return !(owners[_tokenID] == 0);\n    }\n\n    function setAddAndCom(address add, uint256 com) internal{\n        comToAdd[com] = add;\n        uint256 n = noOfComs[add];\n        addToCom[add][n] = com;\n        noOfComs[add] += 1;\n    }\n\n\n    function approve(uint256 _tokenID, address op) public override{\n        uint256 ownerCom = owners[_tokenID];\n        address owner = comToAdd[ownerCom];\n\n        require(op != owner,\"Invalid operator address\");\n        tokenIDToAdd[_tokenID] = op;\n    }\n\n\n    function getApprovedAdd(uint256 _tokenID) public override view returns(address){\n        return tokenIDToAdd[_tokenID];\n    }\n\n    function getNumberOfTokens() public view returns(uint256) {\n        return tokenID;\n    }\n\n    function name() public override view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public override view returns (string memory) {\n        return _symbol;\n    }\n} "}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Izknft.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Izknft.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/zkNFT.sol:45:26:\n   |\n45 |     function deleteZkNft(uint256 tokenID, address owner) override public{\n   |                          ^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/zkNFT.sol:31:5:\n   |\n31 |     uint256 private tokenID;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1354,"file":"contracts/zkNFT.sol","message":"The shadowed declaration is here:","start":1331}],"severity":"warning","sourceLocation":{"end":1669,"file":"contracts/zkNFT.sol","start":1654},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/nftMarketPlace.sol:71:5:\n   |\n71 |     constructor(address _hasher, address _verifier) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":2158,"file":"contracts/nftMarketPlace.sol","start":2000},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/zkContract.sol:19:9:\n   |\n19 |         uint256 currentHash = _commitment;\n   |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":443,"file":"contracts/zkContract.sol","start":424},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/zkContract.sol:21:9:\n   |\n21 |         uint256[2] memory ins;\n   |         ^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":489,"file":"contracts/zkContract.sol","start":468},"type":"Warning"}],"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[64]},"id":65,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":64,"linearizedBaseContracts":[64],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":64,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":64,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":64,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":64,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":64,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":62,"nodeType":"Block","src":"3081:43:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"3098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":59,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3109:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":57,"id":61,"nodeType":"Return","src":"3091:26:0"}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2844:168:0","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"3049:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"3075:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:0"},"scope":64,"src":"3017:107:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":65,"src":"888:2238:0","usedErrors":[]}],"src":"112:3015:0"},"id":0},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1482],"Context":[1504],"ERC165":[1757],"ERC721":[991],"IERC165":[1769],"IERC721":[1107],"IERC721Metadata":[1152],"IERC721Receiver":[1125],"Math":[2635],"SignedMath":[2740],"Strings":[1733]},"id":992,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":67,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1108,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":68,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1126,"src":"156:31:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":69,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1153,"src":"188:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":70,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1483,"src":"231:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":71,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1505,"src":"265:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":72,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1734,"src":"299:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":73,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1758,"src":"333:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":75,"name":"Context","nameLocations":["647:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1504,"src":"647:7:1"},"id":76,"nodeType":"InheritanceSpecifier","src":"647:7:1"},{"baseName":{"id":77,"name":"ERC165","nameLocations":["656:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1757,"src":"656:6:1"},"id":78,"nodeType":"InheritanceSpecifier","src":"656:6:1"},{"baseName":{"id":79,"name":"IERC721","nameLocations":["664:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1107,"src":"664:7:1"},"id":80,"nodeType":"InheritanceSpecifier","src":"664:7:1"},{"baseName":{"id":81,"name":"IERC721Metadata","nameLocations":["673:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"673:15:1"},"id":82,"nodeType":"InheritanceSpecifier","src":"673:15:1"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"381:246:1","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":991,"linearizedBaseContracts":[991,1152,1107,1757,1769,1504],"name":"ERC721","nameLocation":"637:6:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":85,"libraryName":{"id":83,"name":"Address","nameLocations":["701:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1482,"src":"701:7:1"},"nodeType":"UsingForDirective","src":"695:26:1","typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":88,"libraryName":{"id":86,"name":"Strings","nameLocations":["732:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1733,"src":"732:7:1"},"nodeType":"UsingForDirective","src":"726:26:1","typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":90,"mutability":"mutable","name":"_name","nameLocation":"791:5:1","nodeType":"VariableDeclaration","scope":991,"src":"776:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":89,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":92,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:1","nodeType":"VariableDeclaration","scope":991,"src":"823:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":96,"mutability":"mutable","name":"_owners","nameLocation":"934:7:1","nodeType":"VariableDeclaration","scope":991,"src":"898:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":95,"keyType":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":100,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:1","nodeType":"VariableDeclaration","scope":991,"src":"992:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":99,"keyType":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":104,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:1","nodeType":"VariableDeclaration","scope":991,"src":"1093:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":103,"keyType":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":110,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:1","nodeType":"VariableDeclaration","scope":991,"src":"1199:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":109,"keyType":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":108,"keyType":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":107,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":126,"nodeType":"Block","src":"1446:57:1","statements":[{"expression":{"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":118,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"1456:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":119,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1464:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":121,"nodeType":"ExpressionStatement","src":"1456:13:1"},{"expression":{"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":122,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1479:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":123,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":125,"nodeType":"ExpressionStatement","src":"1479:17:1"}]},"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"1277:108:1","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":127,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"name_","nameLocation":"1416:5:1","nodeType":"VariableDeclaration","scope":127,"src":"1402:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":112,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:1","nodeType":"VariableDeclaration","scope":127,"src":"1423:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":114,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:1"},"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"1446:0:1"},"scope":991,"src":"1390:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1756,1768],"body":{"id":157,"nodeType":"Block","src":"1678:192:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1707:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":140,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1727:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1107_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1107_$","typeString":"type(contract IERC721)"}],"id":139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1107","typeString":"type(contract IERC721)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1763:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":146,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1783:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1152_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1152_$","typeString":"type(contract IERC721Metadata)"}],"id":145,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1152","typeString":"type(contract IERC721Metadata)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":153,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1851:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":151,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$991_$","typeString":"type(contract super ERC721)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1756,"src":"1827:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":137,"id":156,"nodeType":"Return","src":"1688:175:1"}]},"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"1509:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":158,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:1","nodeType":"FunctionDefinition","overrides":{"id":134,"nodeType":"OverrideSpecifier","overrides":[{"id":132,"name":"ERC165","nameLocations":["1646:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1757,"src":"1646:6:1"},{"id":133,"name":"IERC165","nameLocations":["1654:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"1654:7:1"}],"src":"1637:25:1"},"parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:1","nodeType":"VariableDeclaration","scope":158,"src":"1597:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":129,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:1"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"1672:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":135,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:1"},"scope":991,"src":"1570:300:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1032],"body":{"id":181,"nodeType":"Block","src":"2010:123:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2028:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{}}},"id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":176,"nodeType":"ExpressionStatement","src":"2020:73:1"},{"expression":{"baseExpression":{"id":177,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2110:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":179,"indexExpression":{"id":178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2120:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":166,"id":180,"nodeType":"Return","src":"2103:23:1"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1876:48:1","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":182,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:1","nodeType":"FunctionDefinition","overrides":{"id":163,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:1"},"parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"owner","nameLocation":"1956:5:1","nodeType":"VariableDeclaration","scope":182,"src":"1948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"2001:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:1"},"scope":991,"src":"1929:204:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1040],"body":{"id":209,"nodeType":"Block","src":"2271:138:1","statements":[{"assignments":[192],"declarations":[{"constant":false,"id":192,"mutability":"mutable","name":"owner","nameLocation":"2289:5:1","nodeType":"VariableDeclaration","scope":209,"src":"2281:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":196,"initialValue":{"arguments":[{"id":194,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2306:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":193,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2297:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":198,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2332:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:1","typeDescriptions":{}}},"id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"2324:56:1"},{"expression":{"id":207,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2397:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":190,"id":208,"nodeType":"Return","src":"2390:12:1"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"2139:46:1","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":210,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:1","nodeType":"FunctionDefinition","overrides":{"id":187,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:1"},"parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:1","nodeType":"VariableDeclaration","scope":210,"src":"2207:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"2262:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:1"},"scope":991,"src":"2190:219:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1137],"body":{"id":219,"nodeType":"Block","src":"2540:29:1","statements":[{"expression":{"id":217,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2557:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":216,"id":218,"nodeType":"Return","src":"2550:12:1"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2415:51:1","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":220,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:1","nodeType":"FunctionDefinition","overrides":{"id":213,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:1"},"parameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2484:2:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"2525:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":214,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:1"},"scope":991,"src":"2471:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":229,"nodeType":"Block","src":"2704:31:1","statements":[{"expression":{"id":227,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":226,"id":228,"nodeType":"Return","src":"2714:14:1"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2575:53:1","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":230,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:1","nodeType":"FunctionDefinition","overrides":{"id":223,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:1"},"parameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"2648:2:1"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"2689:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":224,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:1"},"scope":991,"src":"2633:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1151],"body":{"id":268,"nodeType":"Block","src":"2889:188:1","statements":[{"expression":{"arguments":[{"id":240,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2914:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":239,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2899:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"2899:23:1"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:1","nodeType":"VariableDeclaration","scope":268,"src":"2933:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":243,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":247,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2957:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":250,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2990:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:1","typeDescriptions":{}}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2999:6:1","memberName":"length","nodeType":"MemberAccess","src":"2984:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:1","trueExpression":{"arguments":[{"arguments":[{"id":259,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"3036:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:8:1","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"3045:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":257,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3023:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":255,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:1","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":238,"id":267,"nodeType":"Return","src":"2977:93:1"}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"2741:55:1","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:1","nodeType":"FunctionDefinition","overrides":{"id":235,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:1"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:1","nodeType":"VariableDeclaration","scope":269,"src":"2819:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:1"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"2874:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":236,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:1"},"scope":991,"src":"2801:276:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":277,"nodeType":"Block","src":"3385:26:1","statements":[{"expression":{"hexValue":"","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":274,"id":276,"nodeType":"Return","src":"3395:9:1"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"3083:231:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:1","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"3336:2:1"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3370:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:1"},"scope":991,"src":"3319:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1080],"body":{"id":320,"nodeType":"Block","src":"3538:336:1","statements":[{"assignments":[288],"declarations":[{"constant":false,"id":288,"mutability":"mutable","name":"owner","nameLocation":"3556:5:1","nodeType":"VariableDeclaration","scope":320,"src":"3548:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":293,"initialValue":{"arguments":[{"id":291,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":289,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3564:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3571:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"3564:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3605:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3611:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"ExpressionStatement","src":"3597:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3686:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":304,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3702:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":307,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3728:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":308,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3735:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":306,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3711:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:170:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"3665:170:1"},{"expression":{"arguments":[{"id":316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3855:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":317,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3859:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":315,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3846:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":319,"nodeType":"ExpressionStatement","src":"3846:21:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3417:46:1","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":321,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:1","nodeType":"FunctionDefinition","overrides":{"id":285,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:1"},"parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"to","nameLocation":"3493:2:1","nodeType":"VariableDeclaration","scope":321,"src":"3485:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:1","nodeType":"VariableDeclaration","scope":321,"src":"3497:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"3538:0:1"},"scope":991,"src":"3468:406:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1096],"body":{"id":338,"nodeType":"Block","src":"4020:82:1","statements":[{"expression":{"arguments":[{"id":331,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":330,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4030:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4030:23:1"},{"expression":{"baseExpression":{"id":334,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"4071:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":336,"indexExpression":{"id":335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":329,"id":337,"nodeType":"Return","src":"4064:31:1"}]},"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"3880:50:1","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":339,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:1","nodeType":"FunctionDefinition","overrides":{"id":326,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:1"},"parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:1","nodeType":"VariableDeclaration","scope":339,"src":"3956:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:1"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"4011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:1"},"scope":991,"src":"3935:167:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1088],"body":{"id":355,"nodeType":"Block","src":"4253:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4282:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"4296:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":352,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4306:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":348,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"4263:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"4263:52:1"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"4108:56:1","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":356,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:1","nodeType":"FunctionDefinition","overrides":{"id":346,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:1"},"parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"operator","nameLocation":"4204:8:1","nodeType":"VariableDeclaration","scope":356,"src":"4196:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"approved","nameLocation":"4219:8:1","nodeType":"VariableDeclaration","scope":356,"src":"4214:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:1"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"4253:0:1"},"scope":991,"src":"4169:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1106],"body":{"id":373,"nodeType":"Block","src":"4491:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":367,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4508:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":369,"indexExpression":{"id":368,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4527:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":371,"indexExpression":{"id":370,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4534:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":366,"id":372,"nodeType":"Return","src":"4501:42:1"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"4328:55:1","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":374,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:1","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:1"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"owner","nameLocation":"4422:5:1","nodeType":"VariableDeclaration","scope":374,"src":"4414:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"operator","nameLocation":"4437:8:1","nodeType":"VariableDeclaration","scope":374,"src":"4429:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":374,"src":"4485:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":364,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:1"},"scope":991,"src":"4388:162:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1072],"body":{"id":400,"nodeType":"Block","src":"4701:207:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":387,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4790:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4804:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":386,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4771:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"4763:99:1"},{"expression":{"arguments":[{"id":395,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4883:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":396,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4889:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":394,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"4873:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"4873:28:1"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"4556:51:1","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":401,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:1","nodeType":"FunctionDefinition","overrides":{"id":383,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:1"},"parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"from","nameLocation":"4642:4:1","nodeType":"VariableDeclaration","scope":401,"src":"4634:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"to","nameLocation":"4656:2:1","nodeType":"VariableDeclaration","scope":401,"src":"4648:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:1","nodeType":"VariableDeclaration","scope":401,"src":"4660:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:1"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"4701:0:1"},"scope":991,"src":"4612:296:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1062],"body":{"id":419,"nodeType":"Block","src":"5067:56:1","statements":[{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5094:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5100:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5104:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":412,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[420,450],"referencedDeclaration":450,"src":"5077:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5077:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"ExpressionStatement","src":"5077:39:1"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"4914:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":420,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:1","nodeType":"FunctionDefinition","overrides":{"id":410,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:1"},"parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"from","nameLocation":"5008:4:1","nodeType":"VariableDeclaration","scope":420,"src":"5000:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"to","nameLocation":"5022:2:1","nodeType":"VariableDeclaration","scope":420,"src":"5014:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:1","nodeType":"VariableDeclaration","scope":420,"src":"5026:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:1"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"5067:0:1"},"scope":991,"src":"4974:149:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1052],"body":{"id":449,"nodeType":"Block","src":"5301:164:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"5338:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"5352:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":434,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5319:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5311:99:1"},{"expression":{"arguments":[{"id":443,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5434:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5440:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"5444:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":446,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5453:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":442,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"5420:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"5420:38:1"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"5129:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:1","nodeType":"FunctionDefinition","overrides":{"id":431,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:1"},"parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"from","nameLocation":"5223:4:1","nodeType":"VariableDeclaration","scope":450,"src":"5215:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"to","nameLocation":"5237:2:1","nodeType":"VariableDeclaration","scope":450,"src":"5229:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:1","nodeType":"VariableDeclaration","scope":450,"src":"5241:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"data","nameLocation":"5271:4:1","nodeType":"VariableDeclaration","scope":450,"src":"5258:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":428,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"5301:0:1"},"scope":991,"src":"5189:276:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":478,"nodeType":"Block","src":"6428:165:1","statements":[{"expression":{"arguments":[{"id":463,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6448:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":464,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6454:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6458:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":462,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"6438:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"6438:28:1"},{"expression":{"arguments":[{"arguments":[{"id":470,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6507:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6513:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6517:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":473,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6526:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":469,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"6484:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":477,"nodeType":"ExpressionStatement","src":"6476:110:1"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"5471:850:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":479,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:1","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"6357:4:1","nodeType":"VariableDeclaration","scope":479,"src":"6349:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"6371:2:1","nodeType":"VariableDeclaration","scope":479,"src":"6363:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:1","nodeType":"VariableDeclaration","scope":479,"src":"6375:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"data","nameLocation":"6405:4:1","nodeType":"VariableDeclaration","scope":479,"src":"6392:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":458,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:1"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"6428:0:1"},"scope":991,"src":"6326:267:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"6777:40:1","statements":[{"expression":{"baseExpression":{"id":487,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"6794:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":489,"indexExpression":{"id":488,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"6802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":486,"id":490,"nodeType":"Return","src":"6787:23:1"}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"6599:98:1","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":492,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:1","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:1","nodeType":"VariableDeclaration","scope":492,"src":"6720:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:1"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"6768:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:1"},"scope":991,"src":"6702:115:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"7191:55:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":501,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7217:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":500,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"7208:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7208:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:1","typeDescriptions":{}}},"id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":508,"nodeType":"Return","src":"7201:38:1"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"6823:292:1","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:1","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:1","nodeType":"VariableDeclaration","scope":510,"src":"7137:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:1"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":510,"src":"7185:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:1"},"scope":991,"src":"7120:126:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"7503:162:1","statements":[{"assignments":[521],"declarations":[{"constant":false,"id":521,"mutability":"mutable","name":"owner","nameLocation":"7521:5:1","nodeType":"VariableDeclaration","scope":543,"src":"7513:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":526,"initialValue":{"arguments":[{"id":524,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"7544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":522,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7529:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"7529:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:1"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":527,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7570:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":528,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"7581:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":531,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"7607:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7614:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7590:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"7638:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":535,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7626:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":538,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7650:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":519,"id":542,"nodeType":"Return","src":"7562:96:1"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"7252:147:1","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:1","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"spender","nameLocation":"7440:7:1","nodeType":"VariableDeclaration","scope":544,"src":"7432:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:1","nodeType":"VariableDeclaration","scope":544,"src":"7449:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:1"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":544,"src":"7497:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":517,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:1"},"scope":991,"src":"7404:261:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"8060:43:1","statements":[{"expression":{"arguments":[{"id":553,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8080:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":554,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"8084:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":552,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[559,588],"referencedDeclaration":588,"src":"8070:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"8070:26:1"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"7671:319:1","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:1","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"to","nameLocation":"8022:2:1","nodeType":"VariableDeclaration","scope":559,"src":"8014:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:1","nodeType":"VariableDeclaration","scope":559,"src":"8026:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:1"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"8060:0:1"},"scope":991,"src":"7995:108:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"8408:195:1","statements":[{"expression":{"arguments":[{"id":570,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8424:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"8418:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8418:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"ExpressionStatement","src":"8418:18:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8502:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"8506:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"8515:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":575,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8467:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8467:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8446:150:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"8446:150:1"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"8109:210:1","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:1","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"to","nameLocation":"8351:2:1","nodeType":"VariableDeclaration","scope":588,"src":"8343:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:1","nodeType":"VariableDeclaration","scope":588,"src":"8355:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"data","nameLocation":"8385:4:1","nodeType":"VariableDeclaration","scope":588,"src":"8372:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:1"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"8408:0:1"},"scope":991,"src":"8324:279:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"8986:859:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9004:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:1","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"8996:61:1"},{"expression":{"arguments":[{"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:1","subExpression":{"arguments":[{"id":608,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9084:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":607,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9076:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"9067:58:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:1","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9169:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9173:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":614,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"9136:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9136:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"9136:48:1"},{"expression":{"arguments":[{"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:1","subExpression":{"arguments":[{"id":626,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9288:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":625,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9280:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9271:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"9271:58:1"},{"id":638,"nodeType":"UncheckedBlock","src":"9340:360:1","statements":[{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":632,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"9671:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":634,"indexExpression":{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9681:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":637,"nodeType":"ExpressionStatement","src":"9671:18:1"}]},{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":639,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"9710:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":641,"indexExpression":{"id":640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9718:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9729:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":644,"nodeType":"ExpressionStatement","src":"9710:21:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:1","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9768:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9772:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":645,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"9747:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9747:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"EmitStatement","src":"9742:38:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:1","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9823:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":654,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"9791:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"9791:47:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"8609:311:1","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:1","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"to","nameLocation":"8948:2:1","nodeType":"VariableDeclaration","scope":665,"src":"8940:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:1","nodeType":"VariableDeclaration","scope":665,"src":"8952:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:1"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"8986:0:1"},"scope":991,"src":"8925:920:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"10220:713:1","statements":[{"assignments":[672],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"owner","nameLocation":"10238:5:1","nodeType":"VariableDeclaration","scope":731,"src":"10230:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":677,"initialValue":{"arguments":[{"id":675,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":673,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"10246:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10253:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"10246:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:1"},{"expression":{"arguments":[{"id":679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10301:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:1","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10308:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":678,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"10280:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10280:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"ExpressionStatement","src":"10280:51:1"},{"expression":{"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":688,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10433:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10456:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":689,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"10441:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10448:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"10441:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":694,"nodeType":"ExpressionStatement","src":"10433:31:1"},{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:1","subExpression":{"baseExpression":{"id":695,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"10509:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":697,"indexExpression":{"id":696,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10525:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"10502:31:1"},{"id":706,"nodeType":"UncheckedBlock","src":"10544:237:1","statements":[{"expression":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"10749:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":702,"indexExpression":{"id":701,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":705,"nodeType":"ExpressionStatement","src":"10749:21:1"}]},{"expression":{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:1","subExpression":{"baseExpression":{"id":707,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"10797:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":709,"indexExpression":{"id":708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10805:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"10790:23:1"},{"eventCall":{"arguments":[{"id":713,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10838:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:1","typeDescriptions":{}}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10857:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10829:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"EmitStatement","src":"10824:41:1"},{"expression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10896:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:1","typeDescriptions":{}}},"id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10903:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10915:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":721,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"10876:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"10876:50:1"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"9851:315:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:1","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:1","nodeType":"VariableDeclaration","scope":732,"src":"10186:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:1"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"10220:0:1"},"scope":991,"src":"10171:762:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":816,"nodeType":"Block","src":"11336:1124:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":745,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11369:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":743,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11354:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11361:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"11354:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11354:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":747,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11381:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11346:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"ExpressionStatement","src":"11346:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":753,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"11445:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:1","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11451:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"ExpressionStatement","src":"11437:65:1"},{"expression":{"arguments":[{"id":763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11534:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"11540:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":762,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"11513:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"11513:42:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":770,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11655:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11662:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"11655:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":774,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11682:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"11647:81:1"},{"expression":{"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:1","subExpression":{"baseExpression":{"id":779,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"11797:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":781,"indexExpression":{"id":780,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"11790:31:1"},{"id":796,"nodeType":"UncheckedBlock","src":"11832:496:1","statements":[{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":784,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"12265:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":786,"indexExpression":{"id":785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12275:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ExpressionStatement","src":"12265:20:1"},{"expression":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":790,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"12299:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":792,"indexExpression":{"id":791,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12309:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ExpressionStatement","src":"12299:18:1"}]},{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":797,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"12337:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":799,"indexExpression":{"id":798,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12356:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":802,"nodeType":"ExpressionStatement","src":"12337:21:1"},{"eventCall":{"arguments":[{"id":804,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12383:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12389:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12393:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":803,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12374:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"EmitStatement","src":"12369:32:1"},{"expression":{"arguments":[{"id":810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12432:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12438:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12442:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":809,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"12412:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12412:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"12412:41:1"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"10939:313:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:1","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"from","nameLocation":"11284:4:1","nodeType":"VariableDeclaration","scope":817,"src":"11276:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"11298:2:1","nodeType":"VariableDeclaration","scope":817,"src":"11290:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:1","nodeType":"VariableDeclaration","scope":817,"src":"11302:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:1"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"11336:0:1"},"scope":991,"src":"11257:1203:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"12636:107:1","statements":[{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":825,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"12646:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":827,"indexExpression":{"id":826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"12662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"12673:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":830,"nodeType":"ExpressionStatement","src":"12646:29:1"},{"eventCall":{"arguments":[{"arguments":[{"id":834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"12714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":832,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12699:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12706:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"12699:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"12724:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"12728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":831,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"12690:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"EmitStatement","src":"12685:51:1"}]},"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"12466:101:1","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:1","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"to","nameLocation":"12598:2:1","nodeType":"VariableDeclaration","scope":841,"src":"12590:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:1","nodeType":"VariableDeclaration","scope":841,"src":"12602:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:1"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"12636:0:1"},"scope":991,"src":"12572:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":872,"nodeType":"Block","src":"12972:184:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"12990:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":853,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"12999:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12982:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"12982:55:1"},{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":858,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"13047:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":861,"indexExpression":{"id":859,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"13066:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":862,"indexExpression":{"id":860,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"13073:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":863,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"13085:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"nodeType":"ExpressionStatement","src":"13047:46:1"},{"eventCall":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"13123:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"13130:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"13140:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":866,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"13108:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"EmitStatement","src":"13103:46:1"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"12749:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:1","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"owner","nameLocation":"12915:5:1","nodeType":"VariableDeclaration","scope":873,"src":"12907:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"operator","nameLocation":"12930:8:1","nodeType":"VariableDeclaration","scope":873,"src":"12922:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"approved","nameLocation":"12945:8:1","nodeType":"VariableDeclaration","scope":873,"src":"12940:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":847,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:1"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"12972:0:1"},"scope":991,"src":"12879:277:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":886,"nodeType":"Block","src":"13303:70:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"13329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":880,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"13321:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13321:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13313:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"13313:53:1"}]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"13162:73:1","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":887,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:1","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:1","nodeType":"VariableDeclaration","scope":887,"src":"13264:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:1"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"13303:0:1"},"scope":991,"src":"13240:133:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"14080:676:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"14094:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14097:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1170,"src":"14094:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14094:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":946,"nodeType":"Block","src":"14714:36:1","statements":[{"expression":{"hexValue":"74727565","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":900,"id":945,"nodeType":"Return","src":"14728:11:1"}]},"id":947,"nodeType":"IfStatement","src":"14090:660:1","trueBody":{"id":943,"nodeType":"Block","src":"14111:597:1","statements":[{"clauses":[{"block":{"id":923,"nodeType":"Block","src":"14225:91:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"14250:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":918,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"14260:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1125_$","typeString":"type(contract IERC721Receiver)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14276:16:1","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"14260:32:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14293:8:1","memberName":"selector","nodeType":"MemberAccess","src":"14260:41:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":900,"id":922,"nodeType":"Return","src":"14243:58:1"}]},"errorName":"","id":924,"nodeType":"TryCatchClause","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"retval","nameLocation":"14217:6:1","nodeType":"VariableDeclaration","scope":924,"src":"14210:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":914,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:1"},"src":"14201:115:1"},{"block":{"id":940,"nodeType":"Block","src":"14345:353:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":928,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"14367:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14374:6:1","memberName":"length","nodeType":"MemberAccess","src":"14367:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":938,"nodeType":"Block","src":"14494:190:1","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:1","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:1"},"nodeType":"YulFunctionCall","src":"14613:15:1"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:1"},"nodeType":"YulFunctionCall","src":"14630:13:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:1"},"nodeType":"YulFunctionCall","src":"14606:38:1"},"nodeType":"YulExpressionStatement","src":"14606:38:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":926,"isOffset":false,"isSlot":false,"src":"14621:6:1","valueSize":1},{"declaration":926,"isOffset":false,"isSlot":false,"src":"14636:6:1","valueSize":1}],"id":937,"nodeType":"InlineAssembly","src":"14571:95:1"}]},"id":939,"nodeType":"IfStatement","src":"14363:321:1","trueBody":{"id":936,"nodeType":"Block","src":"14387:101:1","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":932,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14409:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"14409:60:1"}]}}]},"errorName":"","id":941,"nodeType":"TryCatchClause","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"reason","nameLocation":"14337:6:1","nodeType":"VariableDeclaration","scope":941,"src":"14324:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:1"},"src":"14317:381:1"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":908,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"14166:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14166:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"14180:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"14186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":912,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"14195:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"14145:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":904,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"14129:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1125_$","typeString":"type(contract IERC721Receiver)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1125","typeString":"contract IERC721Receiver"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14149:16:1","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"14129:36:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:71:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":942,"nodeType":"TryStatement","src":"14125:573:1"}]}}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"13379:541:1","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:1","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"from","nameLocation":"13974:4:1","nodeType":"VariableDeclaration","scope":949,"src":"13966:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"to","nameLocation":"13996:2:1","nodeType":"VariableDeclaration","scope":949,"src":"13988:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:1","nodeType":"VariableDeclaration","scope":949,"src":"14008:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"data","nameLocation":"14046:4:1","nodeType":"VariableDeclaration","scope":949,"src":"14033:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":895,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:1"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"14074:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:1"},"scope":991,"src":"13925:831:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":961,"nodeType":"Block","src":"15586:2:1","statements":[]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"14762:705:1","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:1","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"from","nameLocation":"15510:4:1","nodeType":"VariableDeclaration","scope":962,"src":"15502:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"to","nameLocation":"15524:2:1","nodeType":"VariableDeclaration","scope":962,"src":"15516:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:1","nodeType":"VariableDeclaration","scope":962,"src":"15528:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:1","nodeType":"VariableDeclaration","scope":962,"src":"15550:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:1"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"15586:0:1"},"scope":991,"src":"15472:116:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":974,"nodeType":"Block","src":"16407:2:1","statements":[]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"15594:695:1","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":975,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:1","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"from","nameLocation":"16331:4:1","nodeType":"VariableDeclaration","scope":975,"src":"16323:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"to","nameLocation":"16345:2:1","nodeType":"VariableDeclaration","scope":975,"src":"16337:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:1","nodeType":"VariableDeclaration","scope":975,"src":"16349:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:1","nodeType":"VariableDeclaration","scope":975,"src":"16371:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:1"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"16407:0:1"},"scope":991,"src":"16294:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"16958:45:1","statements":[{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":983,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"16968:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":985,"indexExpression":{"id":984,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"16978:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":986,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"16990:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ExpressionStatement","src":"16968:28:1"}]},"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"16415:409:1","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:1","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"account","nameLocation":"16924:7:1","nodeType":"VariableDeclaration","scope":990,"src":"16916:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"amount","nameLocation":"16941:6:1","nodeType":"VariableDeclaration","scope":990,"src":"16933:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:1"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"16958:0:1"},"scope":991,"src":"16882:121:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":992,"src":"628:16377:1","usedErrors":[]}],"src":"107:16899:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1769],"IERC721":[1107]},"id":1108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":993,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1108,"sourceUnit":1770,"src":"133:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":996,"name":"IERC165","nameLocations":["271:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"271:7:2"},"id":997,"nodeType":"InheritanceSpecifier","src":"271:7:2"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"182:67:2","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1107,"linearizedBaseContracts":[1107,1769],"name":"IERC721","nameLocation":"260:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"285:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1006,"name":"Transfer","nameLocation":"384:8:2","nodeType":"EventDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:2","nodeType":"VariableDeclaration","scope":1006,"src":"393:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:2","nodeType":"VariableDeclaration","scope":1006,"src":"415:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:2","nodeType":"VariableDeclaration","scope":1006,"src":"435:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:2"},"src":"378:82:2"},{"anonymous":false,"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"466:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1015,"name":"Approval","nameLocation":"571:8:2","nodeType":"EventDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:2","nodeType":"VariableDeclaration","scope":1015,"src":"580:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:2","nodeType":"VariableDeclaration","scope":1015,"src":"603:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:2","nodeType":"VariableDeclaration","scope":1015,"src":"629:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:2"},"src":"565:89:2"},{"anonymous":false,"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"660:117:2","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1024,"name":"ApprovalForAll","nameLocation":"788:14:2","nodeType":"EventDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:2","nodeType":"VariableDeclaration","scope":1024,"src":"803:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:2","nodeType":"VariableDeclaration","scope":1024,"src":"826:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:2","nodeType":"VariableDeclaration","scope":1024,"src":"852:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1021,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:2"},"src":"782:85:2"},{"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"873:76:2","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:2","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"owner","nameLocation":"981:5:2","nodeType":"VariableDeclaration","scope":1032,"src":"973:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:2"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"balance","nameLocation":"1019:7:2","nodeType":"VariableDeclaration","scope":1032,"src":"1011:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:2"},"scope":1107,"src":"954:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"1034:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:2","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:2","nodeType":"VariableDeclaration","scope":1040,"src":"1187:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:2"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"owner","nameLocation":"1235:5:2","nodeType":"VariableDeclaration","scope":1040,"src":"1227:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:2"},"scope":1107,"src":"1170:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"1248:556:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1052,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:2","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"from","nameLocation":"1843:4:2","nodeType":"VariableDeclaration","scope":1052,"src":"1835:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"to","nameLocation":"1857:2:2","nodeType":"VariableDeclaration","scope":1052,"src":"1849:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:2","nodeType":"VariableDeclaration","scope":1052,"src":"1861:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"data","nameLocation":"1893:4:2","nodeType":"VariableDeclaration","scope":1052,"src":"1878:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1048,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:2"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"1907:0:2"},"scope":1107,"src":"1809:99:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"1914:687:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1062,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:2","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"from","nameLocation":"2640:4:2","nodeType":"VariableDeclaration","scope":1062,"src":"2632:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"to","nameLocation":"2654:2:2","nodeType":"VariableDeclaration","scope":1062,"src":"2646:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:2","nodeType":"VariableDeclaration","scope":1062,"src":"2658:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:2"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"2683:0:2"},"scope":1107,"src":"2606:78:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"2690:732:2","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1072,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"from","nameLocation":"3457:4:2","nodeType":"VariableDeclaration","scope":1072,"src":"3449:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"to","nameLocation":"3471:2:2","nodeType":"VariableDeclaration","scope":1072,"src":"3463:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:2","nodeType":"VariableDeclaration","scope":1072,"src":"3475:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"3500:0:2"},"scope":1107,"src":"3427:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"3507:452:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1080,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:2","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"to","nameLocation":"3989:2:2","nodeType":"VariableDeclaration","scope":1080,"src":"3981:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:2","nodeType":"VariableDeclaration","scope":1080,"src":"3993:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:2"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"4018:0:2"},"scope":1107,"src":"3964:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"4025:309:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1088,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:2","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"operator","nameLocation":"4374:8:2","nodeType":"VariableDeclaration","scope":1088,"src":"4366:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"approved","nameLocation":"4389:8:2","nodeType":"VariableDeclaration","scope":1088,"src":"4384:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:2"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"4407:0:2"},"scope":1107,"src":"4339:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"4414:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1096,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:2","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:2","nodeType":"VariableDeclaration","scope":1096,"src":"4579:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:2"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"operator","nameLocation":"4627:8:2","nodeType":"VariableDeclaration","scope":1096,"src":"4619:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:2"},"scope":1107,"src":"4558:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"4643:138:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1106,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:2","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"owner","nameLocation":"4820:5:2","nodeType":"VariableDeclaration","scope":1106,"src":"4812:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"operator","nameLocation":"4835:8:2","nodeType":"VariableDeclaration","scope":1106,"src":"4827:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:2"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1106,"src":"4868:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1103,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:2"},"scope":1107,"src":"4786:88:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1108,"src":"250:4626:2","usedErrors":[]}],"src":"108:4769:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1125]},"id":1126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1109,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"141:152:3","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1125,"linearizedBaseContracts":[1125],"name":"IERC721Receiver","nameLocation":"304:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"326:493:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1124,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"operator","nameLocation":"867:8:3","nodeType":"VariableDeclaration","scope":1124,"src":"859:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"from","nameLocation":"893:4:3","nodeType":"VariableDeclaration","scope":1124,"src":"885:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:3","nodeType":"VariableDeclaration","scope":1124,"src":"907:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"data","nameLocation":"947:4:3","nodeType":"VariableDeclaration","scope":1124,"src":"932:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1118,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:3"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1124,"src":"976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1121,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:3"},"scope":1125,"src":"824:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1126,"src":"294:692:3","usedErrors":[]}],"src":"116:871:3"},"id":3},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1769],"IERC721":[1107],"IERC721Metadata":[1152]},"id":1153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1127,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1153,"sourceUnit":1108,"src":"137:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1130,"name":"IERC721","nameLocations":["326:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1107,"src":"326:7:4"},"id":1131,"nodeType":"InheritanceSpecifier","src":"326:7:4"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"163:133:4","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1152,"linearizedBaseContracts":[1152,1107,1769],"name":"IERC721Metadata","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"340:58:4","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1137,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:4","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"416:2:4"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"442:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1134,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:4"},"scope":1152,"src":"403:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"463:60:4","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:4","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"543:2:4"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"569:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1140,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:4"},"scope":1152,"src":"528:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"590:90:4","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1151,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:4","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:4","nodeType":"VariableDeclaration","scope":1151,"src":"703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:4"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"743:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1148,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:4"},"scope":1152,"src":"685:73:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1153,"src":"297:463:4","usedErrors":[]}],"src":"112:649:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1482]},"id":1483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1154,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1482,"linearizedBaseContracts":[1482],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1169,"nodeType":"Block","src":"1478:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:5","memberName":"code","nodeType":"MemberAccess","src":"1702:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:5","memberName":"length","nodeType":"MemberAccess","src":"1702:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1162,"id":1168,"nodeType":"Return","src":"1695:30:5"}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"216:1191:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:5","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"account","nameLocation":"1440:7:5","nodeType":"VariableDeclaration","scope":1170,"src":"1432:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:5"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"1472:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1160,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:5"},"scope":1482,"src":"1412:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"2718:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1181,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}],"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:5","typeDescriptions":{}}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1184,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2761:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"2728:73:5"},{"assignments":[1190,null],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"success","nameLocation":"2818:7:5","nodeType":"VariableDeclaration","scope":1203,"src":"2813:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1189,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1197,"initialValue":{"arguments":[{"hexValue":"","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1191,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"2831:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:5","memberName":"call","nodeType":"MemberAccess","src":"2831:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2853:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:5"},{"expression":{"arguments":[{"id":1199,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2882:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"2874:78:5"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"1738:904:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:5","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:5","nodeType":"VariableDeclaration","scope":1204,"src":"2666:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"amount","nameLocation":"2701:6:5","nodeType":"VariableDeclaration","scope":1204,"src":"2693:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:5"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"2718:0:5"},"scope":1482,"src":"2647:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"3790:96:5","statements":[{"expression":{"arguments":[{"id":1215,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3829:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3837:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1214,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1262,1306],"referencedDeclaration":1306,"src":"3807:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1213,"id":1220,"nodeType":"Return","src":"3800:79:5"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"2965:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:5","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"target","nameLocation":"3731:6:5","nodeType":"VariableDeclaration","scope":1222,"src":"3723:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"data","nameLocation":"3752:4:5","nodeType":"VariableDeclaration","scope":1222,"src":"3739:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1208,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:5"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"3776:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1211,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:5"},"scope":1482,"src":"3701:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1241,"nodeType":"Block","src":"4255:76:5","statements":[{"expression":{"arguments":[{"id":1235,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4294:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1236,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4302:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1238,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4311:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1234,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1262,1306],"referencedDeclaration":1306,"src":"4272:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1233,"id":1240,"nodeType":"Return","src":"4265:59:5"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"3892:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1242,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:5","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"target","nameLocation":"4147:6:5","nodeType":"VariableDeclaration","scope":1242,"src":"4139:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"data","nameLocation":"4176:4:5","nodeType":"VariableDeclaration","scope":1242,"src":"4163:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:5","nodeType":"VariableDeclaration","scope":1242,"src":"4190:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:5"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1242,"src":"4241:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:5"},"scope":1482,"src":"4108:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1261,"nodeType":"Block","src":"4806:111:5","statements":[{"expression":{"arguments":[{"id":1255,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4845:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1256,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4853:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4859:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1254,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1262,1306],"referencedDeclaration":1306,"src":"4823:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1253,"id":1260,"nodeType":"Return","src":"4816:94:5"}]},"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"4337:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:5","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"target","nameLocation":"4732:6:5","nodeType":"VariableDeclaration","scope":1262,"src":"4724:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"data","nameLocation":"4753:4:5","nodeType":"VariableDeclaration","scope":1262,"src":"4740:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"4767:5:5","nodeType":"VariableDeclaration","scope":1262,"src":"4759:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"4792:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:5"},"scope":1482,"src":"4693:224:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"5344:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1279,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}],"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:5","typeDescriptions":{}}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5387:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"5354:81:5"},{"assignments":[1288,1290],"declarations":[{"constant":false,"id":1288,"mutability":"mutable","name":"success","nameLocation":"5451:7:5","nodeType":"VariableDeclaration","scope":1305,"src":"5446:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1287,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:5","nodeType":"VariableDeclaration","scope":1305,"src":"5460:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1289,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1297,"initialValue":{"arguments":[{"id":1295,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5513:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1291,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5487:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:5","memberName":"call","nodeType":"MemberAccess","src":"5487:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5506:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:5"},{"expression":{"arguments":[{"id":1299,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5562:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1300,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5570:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1301,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5579:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1302,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5591:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1298,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"5535:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1275,"id":1304,"nodeType":"Return","src":"5528:76:5"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"4923:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:5","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"target","nameLocation":"5213:6:5","nodeType":"VariableDeclaration","scope":1306,"src":"5205:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"data","nameLocation":"5242:4:5","nodeType":"VariableDeclaration","scope":1306,"src":"5229:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1266,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"value","nameLocation":"5264:5:5","nodeType":"VariableDeclaration","scope":1306,"src":"5256:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:5","nodeType":"VariableDeclaration","scope":1306,"src":"5279:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1270,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:5"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"5330:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1273,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:5"},"scope":1482,"src":"5165:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1322,"nodeType":"Block","src":"5888:97:5","statements":[{"expression":{"arguments":[{"id":1317,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5924:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1318,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"5932:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1316,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1323,1352],"referencedDeclaration":1352,"src":"5905:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1315,"id":1321,"nodeType":"Return","src":"5898:80:5"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"5617:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1323,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:5","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"target","nameLocation":"5824:6:5","nodeType":"VariableDeclaration","scope":1323,"src":"5816:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"data","nameLocation":"5845:4:5","nodeType":"VariableDeclaration","scope":1323,"src":"5832:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1310,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:5"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1323,"src":"5874:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1313,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:5"},"scope":1482,"src":"5788:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1351,"nodeType":"Block","src":"6327:168:5","statements":[{"assignments":[1336,1338],"declarations":[{"constant":false,"id":1336,"mutability":"mutable","name":"success","nameLocation":"6343:7:5","nodeType":"VariableDeclaration","scope":1351,"src":"6338:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:5","nodeType":"VariableDeclaration","scope":1351,"src":"6352:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1343,"initialValue":{"arguments":[{"id":1341,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"6397:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1339,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6379:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:5"},{"expression":{"arguments":[{"id":1345,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6446:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1346,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"6454:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1347,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"6463:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1348,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6475:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1344,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"6419:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1334,"id":1350,"nodeType":"Return","src":"6412:76:5"}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"5991:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:5","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"target","nameLocation":"6214:6:5","nodeType":"VariableDeclaration","scope":1352,"src":"6206:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"data","nameLocation":"6243:4:5","nodeType":"VariableDeclaration","scope":1352,"src":"6230:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:5","nodeType":"VariableDeclaration","scope":1352,"src":"6257:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1329,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:5"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"6313:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:5"},"scope":1482,"src":"6169:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"6771:101:5","statements":[{"expression":{"arguments":[{"id":1363,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"6809:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1364,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"6817:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1362,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1369,1398],"referencedDeclaration":1398,"src":"6788:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1361,"id":1367,"nodeType":"Return","src":"6781:84:5"}]},"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"6501:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:5","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"target","nameLocation":"6712:6:5","nodeType":"VariableDeclaration","scope":1369,"src":"6704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"data","nameLocation":"6733:4:5","nodeType":"VariableDeclaration","scope":1369,"src":"6720:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1356,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:5"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"6757:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:5"},"scope":1482,"src":"6674:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1397,"nodeType":"Block","src":"7213:170:5","statements":[{"assignments":[1382,1384],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"success","nameLocation":"7229:7:5","nodeType":"VariableDeclaration","scope":1397,"src":"7224:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1381,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:5","nodeType":"VariableDeclaration","scope":1397,"src":"7238:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1383,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1389,"initialValue":{"arguments":[{"id":1387,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"7285:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1385,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7265:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:5"},{"expression":{"arguments":[{"id":1391,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7334:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1392,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7342:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1393,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7351:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1394,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"7363:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1390,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"7307:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1380,"id":1396,"nodeType":"Return","src":"7300:76:5"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"6878:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1398,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"target","nameLocation":"7105:6:5","nodeType":"VariableDeclaration","scope":1398,"src":"7097:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"data","nameLocation":"7134:4:5","nodeType":"VariableDeclaration","scope":1398,"src":"7121:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:5","nodeType":"VariableDeclaration","scope":1398,"src":"7148:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1375,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1398,"src":"7199:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:5"},"scope":1482,"src":"7058:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"7865:434:5","statements":[{"condition":{"id":1412,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"7879:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1434,"nodeType":"Block","src":"8235:58:5","statements":[{"expression":{"arguments":[{"id":1430,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8257:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1431,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"8269:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1429,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"8249:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"8249:33:5"}]},"id":1435,"nodeType":"IfStatement","src":"7875:418:5","trueBody":{"id":1428,"nodeType":"Block","src":"7888:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1413,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"7906:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:5","memberName":"length","nodeType":"MemberAccess","src":"7906:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"7902:286:5","trueBody":{"id":1424,"nodeType":"Block","src":"7930:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1419,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"8132:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1418,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"8121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"8113:60:5"}]}},{"expression":{"id":1426,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8208:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1411,"id":1427,"nodeType":"Return","src":"8201:17:5"}]}}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"7389:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:5","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"target","nameLocation":"7724:6:5","nodeType":"VariableDeclaration","scope":1437,"src":"7716:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"success","nameLocation":"7745:7:5","nodeType":"VariableDeclaration","scope":1437,"src":"7740:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:5","nodeType":"VariableDeclaration","scope":1437,"src":"7762:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1404,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:5","nodeType":"VariableDeclaration","scope":1437,"src":"7795:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:5"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"7851:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:5"},"scope":1482,"src":"7671:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"8680:135:5","statements":[{"condition":{"id":1449,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"8694:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1458,"nodeType":"Block","src":"8751:58:5","statements":[{"expression":{"arguments":[{"id":1454,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"8773:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1455,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"8785:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1453,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"8765:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1457,"nodeType":"ExpressionStatement","src":"8765:33:5"}]},"id":1459,"nodeType":"IfStatement","src":"8690:119:5","trueBody":{"id":1452,"nodeType":"Block","src":"8703:42:5","statements":[{"expression":{"id":1450,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"8724:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1448,"id":1451,"nodeType":"Return","src":"8717:17:5"}]}}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"8305:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:5","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"success","nameLocation":"8560:7:5","nodeType":"VariableDeclaration","scope":1461,"src":"8555:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:5","nodeType":"VariableDeclaration","scope":1461,"src":"8577:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1441,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:5","nodeType":"VariableDeclaration","scope":1461,"src":"8610:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1443,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:5"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1461,"src":"8666:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:5"},"scope":1482,"src":"8520:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"8904:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8980:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:5","memberName":"length","nodeType":"MemberAccess","src":"8980:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1478,"nodeType":"Block","src":"9310:45:5","statements":[{"expression":{"arguments":[{"id":1475,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"9331:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1474,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"ExpressionStatement","src":"9324:20:5"}]},"id":1479,"nodeType":"IfStatement","src":"8976:379:5","trueBody":{"id":1473,"nodeType":"Block","src":"9003:301:5","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:5"},"nodeType":"YulFunctionCall","src":"9202:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:5"},"nodeType":"YulFunctionCall","src":"9243:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:5"},"nodeType":"YulFunctionCall","src":"9236:44:5"},"nodeType":"YulExpressionStatement","src":"9236:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1463,"isOffset":false,"isSlot":false,"src":"9208:10:5","valueSize":1},{"declaration":1463,"isOffset":false,"isSlot":false,"src":"9251:10:5","valueSize":1}],"id":1472,"nodeType":"InlineAssembly","src":"9152:142:5"}]}}]},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:5","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:5","nodeType":"VariableDeclaration","scope":1481,"src":"8838:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1462,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:5","nodeType":"VariableDeclaration","scope":1481,"src":"8863:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1464,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:5"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"8904:0:5"},"scope":1482,"src":"8821:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1483,"src":"194:9169:5","usedErrors":[]}],"src":"101:9263:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1504]},"id":1505,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1484,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1504,"linearizedBaseContracts":[1504],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1493,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1489,"id":1492,"nodeType":"Return","src":"712:17:6"}]},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1504,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1498,"id":1501,"nodeType":"Return","src":"819:15:6"}]},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1496,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1504,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1505,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2635],"SignedMath":[2740],"Strings":[1733]},"id":1734,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1506,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1734,"sourceUnit":2636,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1734,"sourceUnit":2741,"src":"152:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"185:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1733,"linearizedBaseContracts":[1733],"name":"Strings","nameLocation":"228:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1512,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:7","nodeType":"VariableDeclaration","scope":1733,"src":"242:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1510,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1515,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:7","nodeType":"VariableDeclaration","scope":1733,"src":"302:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1513,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1562,"nodeType":"Block","src":"518:625:7","statements":[{"id":1561,"nodeType":"UncheckedBlock","src":"528:609:7","statements":[{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"length","nameLocation":"560:6:7","nodeType":"VariableDeclaration","scope":1561,"src":"552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1531,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"580:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1525,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2635_$","typeString":"type(library Math)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2472,"src":"569:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:7"},{"assignments":[1533],"declarations":[{"constant":false,"id":1533,"mutability":"mutable","name":"buffer","nameLocation":"618:6:7","nodeType":"VariableDeclaration","scope":1561,"src":"604:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1532,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1538,"initialValue":{"arguments":[{"id":1536,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"638:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1534,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:7"},{"assignments":[1540],"declarations":[{"constant":false,"id":1540,"mutability":"mutable","name":"ptr","nameLocation":"667:3:7","nodeType":"VariableDeclaration","scope":1561,"src":"659:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1541,"nodeType":"VariableDeclarationStatement","src":"659:11:7"},{"AST":{"nodeType":"YulBlock","src":"740:67:7","statements":[{"nodeType":"YulAssignment","src":"758:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:7"},"nodeType":"YulFunctionCall","src":"777:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:7"},"nodeType":"YulFunctionCall","src":"765:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1533,"isOffset":false,"isSlot":false,"src":"769:6:7","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"785:6:7","valueSize":1},{"declaration":1540,"isOffset":false,"isSlot":false,"src":"758:3:7","valueSize":1}],"id":1542,"nodeType":"InlineAssembly","src":"731:76:7"},{"body":{"id":1557,"nodeType":"Block","src":"833:267:7","statements":[{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:7","subExpression":{"id":1544,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ExpressionStatement","src":"851:5:7"},{"AST":{"nodeType":"YulBlock","src":"934:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:7"},"nodeType":"YulFunctionCall","src":"974:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:7"},"nodeType":"YulFunctionCall","src":"969:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:7"},"nodeType":"YulFunctionCall","src":"956:44:7"},"nodeType":"YulExpressionStatement","src":"956:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1512,"isOffset":false,"isSlot":false,"src":"990:8:7","valueSize":1},{"declaration":1540,"isOffset":false,"isSlot":false,"src":"964:3:7","valueSize":1},{"declaration":1518,"isOffset":false,"isSlot":false,"src":"978:5:7","valueSize":1}],"id":1547,"nodeType":"InlineAssembly","src":"925:93:7"},{"expression":{"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1035:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1551,"nodeType":"ExpressionStatement","src":"1035:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1068:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1556,"nodeType":"IfStatement","src":"1064:21:7","trueBody":{"id":1555,"nodeType":"Break","src":"1080:5:7"}}]},"condition":{"hexValue":"74727565","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1558,"nodeType":"WhileStatement","src":"820:280:7"},{"expression":{"id":1559,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1522,"id":1560,"nodeType":"Return","src":"1113:13:7"}]}]},"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"352:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:7","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"value","nameLocation":"473:5:7","nodeType":"VariableDeclaration","scope":1563,"src":"465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:7"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1563,"src":"503:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1520,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:7"},"scope":1733,"src":"447:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"1313:103:7","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1354:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:7","trueExpression":{"hexValue":"2d","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1400:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1582,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"1385:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2740_$","typeString":"type(library SignedMath)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2739,"src":"1385:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1563,1591],"referencedDeclaration":1563,"src":"1376:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1573,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1571,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:7","typeDescriptions":{}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1570,"id":1589,"nodeType":"Return","src":"1323:86:7"}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"1149:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:7","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"value","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":1591,"src":"1261:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1565,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:7"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"1298:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:7"},"scope":1733,"src":"1243:173:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"1595:100:7","statements":[{"id":1609,"nodeType":"UncheckedBlock","src":"1605:84:7","statements":[{"expression":{"arguments":[{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1601,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"1655:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2635_$","typeString":"type(library Math)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"1655:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1611,1687,1707],"referencedDeclaration":1687,"src":"1636:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1598,"id":1608,"nodeType":"Return","src":"1629:49:7"}]}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"1422:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:7","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"value","nameLocation":"1550:5:7","nodeType":"VariableDeclaration","scope":1611,"src":"1542:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:7"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"1580:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1596,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:7"},"scope":1733,"src":"1521:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"1908:347:7","statements":[{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:7","nodeType":"VariableDeclaration","scope":1686,"src":"1918:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1631,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1626,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1954:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1623,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:7"},{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1632,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"1975:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1634,"indexExpression":{"hexValue":"30","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1637,"nodeType":"ExpressionStatement","src":"1975:15:7"},{"expression":{"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1638,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2000:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1640,"indexExpression":{"hexValue":"31","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1643,"nodeType":"ExpressionStatement","src":"2000:15:7"},{"body":{"id":1672,"nodeType":"Block","src":"2070:83:7","statements":[{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1658,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2084:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1660,"indexExpression":{"id":1659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"2091:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1661,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2096:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1665,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2105:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1667,"nodeType":"ExpressionStatement","src":"2084:33:7"},{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1671,"nodeType":"ExpressionStatement","src":"2131:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"2058:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1673,"initializationExpression":{"assignments":[1645],"declarations":[{"constant":false,"id":1645,"mutability":"mutable","name":"i","nameLocation":"2038:1:7","nodeType":"VariableDeclaration","scope":1673,"src":"2030:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1647,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2046:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:7"},"loopExpression":{"expression":{"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:7","subExpression":{"id":1655,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"2067:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1657,"nodeType":"ExpressionStatement","src":"2065:3:7"},"nodeType":"ForStatement","src":"2025:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"2162:55:7"},{"expression":{"arguments":[{"id":1683,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2241:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:7","typeDescriptions":{}}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1620,"id":1685,"nodeType":"Return","src":"2227:21:7"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"1701:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"1847:5:7","nodeType":"VariableDeclaration","scope":1687,"src":"1839:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"length","nameLocation":"1862:6:7","nodeType":"VariableDeclaration","scope":1687,"src":"1854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"1893:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1618,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:7"},"scope":1733,"src":"1818:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"2480:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1700,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2525:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1698,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:7","typeDescriptions":{}}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{}}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1703,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"2533:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1695,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1611,1687,1707],"referencedDeclaration":1687,"src":"2497:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1694,"id":1705,"nodeType":"Return","src":"2490:59:7"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"2261:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:7","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"addr","nameLocation":"2436:4:7","nodeType":"VariableDeclaration","scope":1707,"src":"2428:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:7"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"2465:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:7"},"scope":1733,"src":"2407:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1731,"nodeType":"Block","src":"2711:66:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2744:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1718,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:7","typeDescriptions":{}}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1717,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"2767:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1724,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:7","typeDescriptions":{}}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1723,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1716,"id":1730,"nodeType":"Return","src":"2721:49:7"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"2562:66:7","text":" @dev Returns true if the two strings are equal."},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:7","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"a","nameLocation":"2662:1:7","nodeType":"VariableDeclaration","scope":1732,"src":"2648:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1709,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"b","nameLocation":"2679:1:7","nodeType":"VariableDeclaration","scope":1732,"src":"2665:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1711,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:7"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"2705:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1714,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:7"},"scope":1733,"src":"2633:144:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1734,"src":"220:2559:7","usedErrors":[]}],"src":"101:2679:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1757],"IERC165":[1769]},"id":1758,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1735,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1758,"sourceUnit":1770,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1738,"name":"IERC165","nameLocations":["754:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1769,"src":"754:7:8"},"id":1739,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1757,"linearizedBaseContracts":[1757,1769],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1768],"body":{"id":1755,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1750,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1769_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1769_$","typeString":"type(contract IERC165)"}],"id":1749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1769","typeString":"type(contract IERC165)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1747,"id":1754,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":1744,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":1756,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1741,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1756,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1745,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":1757,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1758,"src":"726:260:8","usedErrors":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1769]},"id":1770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1759,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1769,"linearizedBaseContracts":[1769],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1768,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":1768,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1762,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1765,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":1769,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1770,"src":"405:447:9","usedErrors":[]}],"src":"100:753:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2635]},"id":2636,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1771,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"128:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2635,"linearizedBaseContracts":[2635],"name":"Math","nameLocation":"210:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1776,"members":[{"id":1773,"name":"Down","nameLocation":"245:4:10","nodeType":"EnumValue","src":"245:4:10"},{"id":1774,"name":"Up","nameLocation":"287:2:10","nodeType":"EnumValue","src":"287:2:10"},{"id":1775,"name":"Zero","nameLocation":"318:4:10","nodeType":"EnumValue","src":"318:4:10"}],"name":"Rounding","nameLocation":"226:8:10","nodeType":"EnumDefinition","src":"221:122:10"},{"body":{"id":1793,"nodeType":"Block","src":"480:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1787,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"509:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:10","trueExpression":{"id":1789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"505:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1785,"id":1792,"nodeType":"Return","src":"490:20:10"}]},"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"349:59:10","text":" @dev Returns the largest of two numbers."},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:10","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"a","nameLocation":"434:1:10","nodeType":"VariableDeclaration","scope":1794,"src":"426:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"b","nameLocation":"445:1:10","nodeType":"VariableDeclaration","scope":1794,"src":"437:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:10"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1794,"src":"471:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:10"},"scope":2635,"src":"413:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"655:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1805,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"676:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"684:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:10","trueExpression":{"id":1807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1803,"id":1810,"nodeType":"Return","src":"665:20:10"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"523:60:10","text":" @dev Returns the smallest of two numbers."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:10","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1812,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1812,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1812,"src":"646:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:10"},"scope":2635,"src":"588:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"876:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"931:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1823,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"935:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"941:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1827,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"945:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1821,"id":1833,"nodeType":"Return","src":"923:28:10"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"698:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:10","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"a","nameLocation":"830:1:10","nodeType":"VariableDeclaration","scope":1835,"src":"822:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"b","nameLocation":"841:1:10","nodeType":"VariableDeclaration","scope":1835,"src":"833:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:10"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"867:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:10"},"scope":2635,"src":"805:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1859,"nodeType":"Block","src":"1228:123:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"1316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1339:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:10","trueExpression":{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1844,"id":1858,"nodeType":"Return","src":"1309:35:10"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"964:188:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1860,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:10","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"a","nameLocation":"1182:1:10","nodeType":"VariableDeclaration","scope":1860,"src":"1174:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"b","nameLocation":"1193:1:10","nodeType":"VariableDeclaration","scope":1860,"src":"1185:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:10"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"1219:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:10"},"scope":2635,"src":"1157:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1982,"nodeType":"Block","src":"1765:4115:10","statements":[{"id":1981,"nodeType":"UncheckedBlock","src":"1775:4099:10","statements":[{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:10","nodeType":"VariableDeclaration","scope":1981,"src":"2096:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1874,"nodeType":"VariableDeclarationStatement","src":"2096:13:10"},{"assignments":[1876],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:10","nodeType":"VariableDeclaration","scope":1981,"src":"2168:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1877,"nodeType":"VariableDeclarationStatement","src":"2168:13:10"},{"AST":{"nodeType":"YulBlock","src":"2248:157:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:10"},"nodeType":"YulFunctionCall","src":"2289:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:10"},"nodeType":"YulFunctionCall","src":"2276:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:10","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:10"},"nodeType":"YulFunctionCall","src":"2322:9:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:10"}]},{"nodeType":"YulAssignment","src":"2348:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:10"},"nodeType":"YulFunctionCall","src":"2361:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:10"},"nodeType":"YulFunctionCall","src":"2377:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:10"},"nodeType":"YulFunctionCall","src":"2357:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1873,"isOffset":false,"isSlot":false,"src":"2313:5:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"2369:5:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"2384:5:10","valueSize":1},{"declaration":1876,"isOffset":false,"isSlot":false,"src":"2348:5:10","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"2283:1:10","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"2326:1:10","valueSize":1},{"declaration":1865,"isOffset":false,"isSlot":false,"src":"2286:1:10","valueSize":1},{"declaration":1865,"isOffset":false,"isSlot":false,"src":"2329:1:10","valueSize":1}],"id":1878,"nodeType":"InlineAssembly","src":"2239:166:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"2486:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1887,"nodeType":"IfStatement","src":"2482:368:10","trueBody":{"id":1886,"nodeType":"Block","src":"2498:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2816:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1883,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2824:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1871,"id":1885,"nodeType":"Return","src":"2809:26:10"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2960:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1890,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"2974:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1894,"nodeType":"ExpressionStatement","src":"2952:53:10"},{"assignments":[1896],"declarations":[{"constant":false,"id":1896,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:10","nodeType":"VariableDeclaration","scope":1981,"src":"3261:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1897,"nodeType":"VariableDeclarationStatement","src":"3261:17:10"},{"AST":{"nodeType":"YulBlock","src":"3301:291:10","statements":[{"nodeType":"YulAssignment","src":"3370:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:10"},"nodeType":"YulFunctionCall","src":"3383:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:10"}]},{"nodeType":"YulAssignment","src":"3490:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:10"},"nodeType":"YulFunctionCall","src":"3510:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:10"},"nodeType":"YulFunctionCall","src":"3499:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:10"}]},{"nodeType":"YulAssignment","src":"3548:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:10"},"nodeType":"YulFunctionCall","src":"3557:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1867,"isOffset":false,"isSlot":false,"src":"3396:11:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"3524:5:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"3548:5:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"3561:5:10","valueSize":1},{"declaration":1876,"isOffset":false,"isSlot":false,"src":"3490:5:10","valueSize":1},{"declaration":1876,"isOffset":false,"isSlot":false,"src":"3503:5:10","valueSize":1},{"declaration":1896,"isOffset":false,"isSlot":false,"src":"3370:9:10","valueSize":1},{"declaration":1896,"isOffset":false,"isSlot":false,"src":"3513:9:10","valueSize":1},{"declaration":1896,"isOffset":false,"isSlot":false,"src":"3568:9:10","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"3390:1:10","valueSize":1},{"declaration":1865,"isOffset":false,"isSlot":false,"src":"3393:1:10","valueSize":1}],"id":1898,"nodeType":"InlineAssembly","src":"3292:300:10"},{"assignments":[1900],"declarations":[{"constant":false,"id":1900,"mutability":"mutable","name":"twos","nameLocation":"3907:4:10","nodeType":"VariableDeclaration","scope":1981,"src":"3899:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1908,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"3914:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:10","subExpression":{"id":1902,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"3930:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:10"},{"AST":{"nodeType":"YulBlock","src":"3969:362:10","statements":[{"nodeType":"YulAssignment","src":"4034:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:10"},"nodeType":"YulFunctionCall","src":"4049:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:10"}]},{"nodeType":"YulAssignment","src":"4138:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:10"},"nodeType":"YulFunctionCall","src":"4147:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:10"}]},{"nodeType":"YulAssignment","src":"4278:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:10"},"nodeType":"YulFunctionCall","src":"4294:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:10"},"nodeType":"YulFunctionCall","src":"4290:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:10"},"nodeType":"YulFunctionCall","src":"4286:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1867,"isOffset":false,"isSlot":false,"src":"4034:11:10","valueSize":1},{"declaration":1867,"isOffset":false,"isSlot":false,"src":"4053:11:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"4138:5:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"4151:5:10","valueSize":1},{"declaration":1900,"isOffset":false,"isSlot":false,"src":"4066:4:10","valueSize":1},{"declaration":1900,"isOffset":false,"isSlot":false,"src":"4158:4:10","valueSize":1},{"declaration":1900,"isOffset":false,"isSlot":false,"src":"4278:4:10","valueSize":1},{"declaration":1900,"isOffset":false,"isSlot":false,"src":"4301:4:10","valueSize":1},{"declaration":1900,"isOffset":false,"isSlot":false,"src":"4308:4:10","valueSize":1}],"id":1909,"nodeType":"InlineAssembly","src":"3960:371:10"},{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1910,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"4397:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4406:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1912,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"4414:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"4397:21:10"},{"assignments":[1917],"declarations":[{"constant":false,"id":1917,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:10","nodeType":"VariableDeclaration","scope":1981,"src":"4736:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1924,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1919,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"4759:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:10"},{"expression":{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1925,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"4992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1927,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"5007:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1928,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5021:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1932,"nodeType":"ExpressionStatement","src":"4992:36:10"},{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1933,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"5076:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1936,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5090:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1940,"nodeType":"ExpressionStatement","src":"5061:36:10"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1941,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5131:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1943,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"5146:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1944,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5160:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"5131:36:10"},{"expression":{"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1949,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5201:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"5216:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1952,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5230:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1956,"nodeType":"ExpressionStatement","src":"5201:36:10"},{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1957,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"5286:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1960,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5300:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1964,"nodeType":"ExpressionStatement","src":"5271:36:10"},{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"5357:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1968,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5371:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"5342:36:10"},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"5812:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"5821:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1975,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5829:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1978,"nodeType":"ExpressionStatement","src":"5812:24:10"},{"expression":{"id":1979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"5857:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1871,"id":1980,"nodeType":"Return","src":"5850:13:10"}]}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"1357:305:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1983,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:10","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"x","nameLocation":"1691:1:10","nodeType":"VariableDeclaration","scope":1983,"src":"1683:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"y","nameLocation":"1702:1:10","nodeType":"VariableDeclaration","scope":1983,"src":"1694:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:10","nodeType":"VariableDeclaration","scope":1983,"src":"1705:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:10"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"result","nameLocation":"1757:6:10","nodeType":"VariableDeclaration","scope":1983,"src":"1749:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:10"},"scope":2635,"src":"1667:4213:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2026,"nodeType":"Block","src":"6122:189:10","statements":[{"assignments":[1999],"declarations":[{"constant":false,"id":1999,"mutability":"mutable","name":"result","nameLocation":"6140:6:10","nodeType":"VariableDeclaration","scope":2026,"src":"6132:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2005,"initialValue":{"arguments":[{"id":2001,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6156:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2002,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6159:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2003,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6162:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2000,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1983,2027],"referencedDeclaration":1983,"src":"6149:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"6188:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2007,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"6200:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1776_$","typeString":"type(enum Math.Rounding)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"6200:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"src":"6188:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2011,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6222:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2012,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"6225:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2013,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"6228:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2010,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2023,"nodeType":"IfStatement","src":"6184:98:10","trueBody":{"id":2022,"nodeType":"Block","src":"6246:36:10","statements":[{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"6260:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"nodeType":"ExpressionStatement","src":"6260:11:10"}]}},{"expression":{"id":2024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"6298:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1997,"id":2025,"nodeType":"Return","src":"6291:13:10"}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"5886:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:10","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"x","nameLocation":"6036:1:10","nodeType":"VariableDeclaration","scope":2027,"src":"6028:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"y","nameLocation":"6047:1:10","nodeType":"VariableDeclaration","scope":2027,"src":"6039:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:10","nodeType":"VariableDeclaration","scope":2027,"src":"6050:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:10","nodeType":"VariableDeclaration","scope":2027,"src":"6071:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"typeName":{"id":1992,"nodeType":"UserDefinedTypeName","pathNode":{"id":1991,"name":"Rounding","nameLocations":["6071:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"6071:8:10"},"referencedDeclaration":1776,"src":"6071:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:10"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"6113:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:10"},"scope":2635,"src":"6012:299:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2138,"nodeType":"Block","src":"6587:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"6601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2041,"nodeType":"IfStatement","src":"6597:45:10","trueBody":{"id":2040,"nodeType":"Block","src":"6609:33:10","statements":[{"expression":{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2034,"id":2039,"nodeType":"Return","src":"6623:8:10"}]}},{"assignments":[2043],"declarations":[{"constant":false,"id":2043,"mutability":"mutable","name":"result","nameLocation":"7329:6:10","nodeType":"VariableDeclaration","scope":2138,"src":"7321:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7349:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2045,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2307,2343],"referencedDeclaration":2307,"src":"7344:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:10"},{"id":2137,"nodeType":"UncheckedBlock","src":"7758:408:10","statements":[{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7782:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7792:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7801:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7805:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"nodeType":"ExpressionStatement","src":"7782:35:10"},{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7831:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7841:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7850:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2067,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7854:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"nodeType":"ExpressionStatement","src":"7831:35:10"},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7890:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7899:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7903:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"7880:35:10"},{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7929:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7939:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7948:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7952:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2096,"nodeType":"ExpressionStatement","src":"7929:35:10"},{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7978:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"7988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7997:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8001:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"7978:35:10"},{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8027:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8037:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"8046:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8050:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"8027:35:10"},{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8076:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8086:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"8095:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8099:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"8076:35:10"},{"expression":{"arguments":[{"id":2131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8136:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"8144:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"8148:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2130,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"8132:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2034,"id":2136,"nodeType":"Return","src":"8125:30:10"}]}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"6317:208:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:10","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"a","nameLocation":"6552:1:10","nodeType":"VariableDeclaration","scope":2139,"src":"6544:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:10"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"6578:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:10"},"scope":2635,"src":"6530:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"8348:161:10","statements":[{"id":2173,"nodeType":"UncheckedBlock","src":"8358:145:10","statements":[{"assignments":[2151],"declarations":[{"constant":false,"id":2151,"mutability":"mutable","name":"result","nameLocation":"8390:6:10","nodeType":"VariableDeclaration","scope":2173,"src":"8382:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2155,"initialValue":{"arguments":[{"id":2153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"8404:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2152,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2139,2175],"referencedDeclaration":2139,"src":"8399:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"8427:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"8437:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2158,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"8449:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1776_$","typeString":"type(enum Math.Rounding)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"8449:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"src":"8437:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"8464:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2162,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"8473:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"8482:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:10","trueExpression":{"hexValue":"31","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2149,"id":2172,"nodeType":"Return","src":"8420:72:10"}]}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"8178:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:10","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"a","nameLocation":"8294:1:10","nodeType":"VariableDeclaration","scope":2175,"src":"8286:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:10","nodeType":"VariableDeclaration","scope":2175,"src":"8297:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"typeName":{"id":2144,"nodeType":"UserDefinedTypeName","pathNode":{"id":2143,"name":"Rounding","nameLocations":["8297:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"8297:8:10"},"referencedDeclaration":1776,"src":"8297:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:10"},"returnParameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"8339:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:10"},"scope":2635,"src":"8272:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2306,"nodeType":"Block","src":"8694:922:10","statements":[{"assignments":[2184],"declarations":[{"constant":false,"id":2184,"mutability":"mutable","name":"result","nameLocation":"8712:6:10","nodeType":"VariableDeclaration","scope":2306,"src":"8704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2186,"initialValue":{"hexValue":"30","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:10"},{"id":2303,"nodeType":"UncheckedBlock","src":"8732:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8760:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"8756:99:10","trueBody":{"id":2200,"nodeType":"Block","src":"8778:77:10","statements":[{"expression":{"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8796:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"nodeType":"ExpressionStatement","src":"8796:13:10"},{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"8827:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2199,"nodeType":"ExpressionStatement","src":"8827:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8872:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2216,"nodeType":"IfStatement","src":"8868:96:10","trueBody":{"id":2215,"nodeType":"Block","src":"8889:75:10","statements":[{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8907:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"nodeType":"ExpressionStatement","src":"8907:12:10"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"8937:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"nodeType":"ExpressionStatement","src":"8937:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"8981:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2231,"nodeType":"IfStatement","src":"8977:96:10","trueBody":{"id":2230,"nodeType":"Block","src":"8998:75:10","statements":[{"expression":{"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9016:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2225,"nodeType":"ExpressionStatement","src":"9016:12:10"},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9046:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"9046:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9090:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"nodeType":"IfStatement","src":"9086:96:10","trueBody":{"id":2245,"nodeType":"Block","src":"9107:75:10","statements":[{"expression":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9125:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2240,"nodeType":"ExpressionStatement","src":"9125:12:10"},{"expression":{"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9155:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2244,"nodeType":"ExpressionStatement","src":"9155:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2261,"nodeType":"IfStatement","src":"9195:93:10","trueBody":{"id":2260,"nodeType":"Block","src":"9215:73:10","statements":[{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9233:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2255,"nodeType":"ExpressionStatement","src":"9233:11:10"},{"expression":{"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9262:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2259,"nodeType":"ExpressionStatement","src":"9262:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9305:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"nodeType":"IfStatement","src":"9301:93:10","trueBody":{"id":2275,"nodeType":"Block","src":"9321:73:10","statements":[{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9339:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2270,"nodeType":"ExpressionStatement","src":"9339:11:10"},{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9368:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"9368:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9411:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2291,"nodeType":"IfStatement","src":"9407:93:10","trueBody":{"id":2290,"nodeType":"Block","src":"9427:73:10","statements":[{"expression":{"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2285,"nodeType":"ExpressionStatement","src":"9445:11:10"},{"expression":{"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9474:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2289,"nodeType":"ExpressionStatement","src":"9474:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"9517:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2302,"nodeType":"IfStatement","src":"9513:64:10","trueBody":{"id":2301,"nodeType":"Block","src":"9533:44:10","statements":[{"expression":{"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9551:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2300,"nodeType":"ExpressionStatement","src":"9551:11:10"}]}}]},{"expression":{"id":2304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9603:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2182,"id":2305,"nodeType":"Return","src":"9596:13:10"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"8515:113:10","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2307,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:10","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"value","nameLocation":"8655:5:10","nodeType":"VariableDeclaration","scope":2307,"src":"8647:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:10"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2307,"src":"8685:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:10"},"scope":2635,"src":"8633:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"9849:165:10","statements":[{"id":2341,"nodeType":"UncheckedBlock","src":"9859:149:10","statements":[{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"result","nameLocation":"9891:6:10","nodeType":"VariableDeclaration","scope":2341,"src":"9883:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2323,"initialValue":{"arguments":[{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"9905:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2307,2343],"referencedDeclaration":2307,"src":"9900:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9932:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"9942:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2326,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"9954:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1776_$","typeString":"type(enum Math.Rounding)"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"9954:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"src":"9942:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"9974:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"9983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:10","trueExpression":{"hexValue":"31","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2317,"id":2340,"nodeType":"Return","src":"9925:72:10"}]}]},"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"9622:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2343,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:10","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"value","nameLocation":"9791:5:10","nodeType":"VariableDeclaration","scope":2343,"src":"9783:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:10","nodeType":"VariableDeclaration","scope":2343,"src":"9798:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"typeName":{"id":2312,"nodeType":"UserDefinedTypeName","pathNode":{"id":2311,"name":"Rounding","nameLocations":["9798:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"9798:8:10"},"referencedDeclaration":1776,"src":"9798:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:10"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2343,"src":"9840:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:10"},"scope":2635,"src":"9769:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2471,"nodeType":"Block","src":"10201:854:10","statements":[{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"result","nameLocation":"10219:6:10","nodeType":"VariableDeclaration","scope":2471,"src":"10211:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2354,"initialValue":{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:10"},{"id":2468,"nodeType":"UncheckedBlock","src":"10239:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10267:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2371,"nodeType":"IfStatement","src":"10263:103:10","trueBody":{"id":2370,"nodeType":"Block","src":"10286:80:10","statements":[{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10304:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"10304:17:10"},{"expression":{"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10339:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2369,"nodeType":"ExpressionStatement","src":"10339:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10383:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2388,"nodeType":"IfStatement","src":"10379:103:10","trueBody":{"id":2387,"nodeType":"Block","src":"10402:80:10","statements":[{"expression":{"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10420:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2382,"nodeType":"ExpressionStatement","src":"10420:17:10"},{"expression":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10455:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2386,"nodeType":"ExpressionStatement","src":"10455:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10499:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2405,"nodeType":"IfStatement","src":"10495:103:10","trueBody":{"id":2404,"nodeType":"Block","src":"10518:80:10","statements":[{"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10536:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2399,"nodeType":"ExpressionStatement","src":"10536:17:10"},{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10571:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"10571:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10615:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"10611:100:10","trueBody":{"id":2421,"nodeType":"Block","src":"10633:78:10","statements":[{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10651:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2416,"nodeType":"ExpressionStatement","src":"10651:16:10"},{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10685:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ExpressionStatement","src":"10685:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10728:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2439,"nodeType":"IfStatement","src":"10724:100:10","trueBody":{"id":2438,"nodeType":"Block","src":"10746:78:10","statements":[{"expression":{"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10764:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2433,"nodeType":"ExpressionStatement","src":"10764:16:10"},{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10798:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2437,"nodeType":"ExpressionStatement","src":"10798:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10841:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2456,"nodeType":"IfStatement","src":"10837:100:10","trueBody":{"id":2455,"nodeType":"Block","src":"10859:78:10","statements":[{"expression":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10877:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2450,"nodeType":"ExpressionStatement","src":"10877:16:10"},{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10911:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ExpressionStatement","src":"10911:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10954:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2467,"nodeType":"IfStatement","src":"10950:66:10","trueBody":{"id":2466,"nodeType":"Block","src":"10972:44:10","statements":[{"expression":{"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"10990:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2465,"nodeType":"ExpressionStatement","src":"10990:11:10"}]}}]},{"expression":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"11042:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2350,"id":2470,"nodeType":"Return","src":"11035:13:10"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"10020:114:10","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:10","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"value","nameLocation":"10162:5:10","nodeType":"VariableDeclaration","scope":2472,"src":"10154:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:10"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2472,"src":"10192:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:10"},"scope":2635,"src":"10139:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"11290:167:10","statements":[{"id":2506,"nodeType":"UncheckedBlock","src":"11300:151:10","statements":[{"assignments":[2484],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"result","nameLocation":"11332:6:10","nodeType":"VariableDeclaration","scope":2506,"src":"11324:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2488,"initialValue":{"arguments":[{"id":2486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11347:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2485,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2472,2508],"referencedDeclaration":2472,"src":"11341:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"11374:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2490,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"11384:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2491,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"11396:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1776_$","typeString":"type(enum Math.Rounding)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"11396:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"src":"11384:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"11417:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"11426:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:10","trueExpression":{"hexValue":"31","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2482,"id":2505,"nodeType":"Return","src":"11367:73:10"}]}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"11061:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:10","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"value","nameLocation":"11232:5:10","nodeType":"VariableDeclaration","scope":2508,"src":"11224:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:10","nodeType":"VariableDeclaration","scope":2508,"src":"11239:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"typeName":{"id":2477,"nodeType":"UserDefinedTypeName","pathNode":{"id":2476,"name":"Rounding","nameLocations":["11239:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"11239:8:10"},"referencedDeclaration":1776,"src":"11239:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:10"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2508,"src":"11281:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:10"},"scope":2635,"src":"11209:248:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2594,"nodeType":"Block","src":"11771:600:10","statements":[{"assignments":[2517],"declarations":[{"constant":false,"id":2517,"mutability":"mutable","name":"result","nameLocation":"11789:6:10","nodeType":"VariableDeclaration","scope":2594,"src":"11781:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2519,"initialValue":{"hexValue":"30","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:10"},{"id":2591,"nodeType":"UncheckedBlock","src":"11809:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"11837:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"11833:98:10","trueBody":{"id":2533,"nodeType":"Block","src":"11855:76:10","statements":[{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"11873:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"11873:13:10"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"11904:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"11904:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"11948:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"nodeType":"IfStatement","src":"11944:95:10","trueBody":{"id":2548,"nodeType":"Block","src":"11965:74:10","statements":[{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"11983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"11983:12:10"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12013:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"12013:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12056:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2564,"nodeType":"IfStatement","src":"12052:95:10","trueBody":{"id":2563,"nodeType":"Block","src":"12073:74:10","statements":[{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12091:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"12091:12:10"},{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12121:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"12121:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"nodeType":"IfStatement","src":"12160:95:10","trueBody":{"id":2578,"nodeType":"Block","src":"12181:74:10","statements":[{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"12199:12:10"},{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12229:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2577,"nodeType":"ExpressionStatement","src":"12229:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"12272:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"nodeType":"IfStatement","src":"12268:64:10","trueBody":{"id":2589,"nodeType":"Block","src":"12288:44:10","statements":[{"expression":{"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12306:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2588,"nodeType":"ExpressionStatement","src":"12306:11:10"}]}}]},{"expression":{"id":2592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"12358:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2515,"id":2593,"nodeType":"Return","src":"12351:13:10"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"11463:240:10","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:10","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"value","nameLocation":"11732:5:10","nodeType":"VariableDeclaration","scope":2595,"src":"11724:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:10"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"11762:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:10"},"scope":2635,"src":"11708:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2633,"nodeType":"Block","src":"12608:174:10","statements":[{"id":2632,"nodeType":"UncheckedBlock","src":"12618:158:10","statements":[{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"result","nameLocation":"12650:6:10","nodeType":"VariableDeclaration","scope":2632,"src":"12642:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2611,"initialValue":{"arguments":[{"id":2609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"12666:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2608,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2595,2634],"referencedDeclaration":2595,"src":"12659:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"12693:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"12703:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2614,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"12715:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1776_$","typeString":"type(enum Math.Rounding)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1774,"src":"12715:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"src":"12703:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"12736:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"12751:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:10","trueExpression":{"hexValue":"31","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2605,"id":2631,"nodeType":"Return","src":"12686:79:10"}]}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"12377:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:10","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"value","nameLocation":"12550:5:10","nodeType":"VariableDeclaration","scope":2634,"src":"12542:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:10","nodeType":"VariableDeclaration","scope":2634,"src":"12557:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"},"typeName":{"id":2600,"nodeType":"UserDefinedTypeName","pathNode":{"id":2599,"name":"Rounding","nameLocations":["12557:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1776,"src":"12557:8:10"},"referencedDeclaration":1776,"src":"12557:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1776","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:10"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2634,"src":"12599:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:10"},"scope":2635,"src":"12526:256:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2636,"src":"202:12582:10","usedErrors":[]}],"src":"103:12682:10"},"id":10},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2740]},"id":2741,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2637,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"134:80:11","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2740,"linearizedBaseContracts":[2740],"name":"SignedMath","nameLocation":"223:10:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2655,"nodeType":"Block","src":"375:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"392:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"396:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"404:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:11","trueExpression":{"id":2651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"400:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2647,"id":2654,"nodeType":"Return","src":"385:20:11"}]},"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"240:66:11","text":" @dev Returns the largest of two signed numbers."},"id":2656,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:11","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"a","nameLocation":"331:1:11","nodeType":"VariableDeclaration","scope":2656,"src":"324:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2640,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"b","nameLocation":"341:1:11","nodeType":"VariableDeclaration","scope":2656,"src":"334:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2642,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:11"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"367:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2645,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:11"},"scope":2740,"src":"311:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"554:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"571:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"575:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2670,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"583:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:11","trueExpression":{"id":2669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"579:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2665,"id":2672,"nodeType":"Return","src":"564:20:11"}]},"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"418:67:11","text":" @dev Returns the smallest of two signed numbers."},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:11","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"a","nameLocation":"510:1:11","nodeType":"VariableDeclaration","scope":2674,"src":"503:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2658,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"b","nameLocation":"520:1:11","nodeType":"VariableDeclaration","scope":2674,"src":"513:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2660,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:11"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"546:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2663,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:11"},"scope":2740,"src":"490:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2717,"nodeType":"Block","src":"796:162:11","statements":[{"assignments":[2685],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"x","nameLocation":"865:1:11","nodeType":"VariableDeclaration","scope":2717,"src":"858:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2684,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2698,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"870:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2687,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"874:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"881:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2691,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"885:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:11"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2699,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"910:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2704,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"930:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:11","typeDescriptions":{}}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2700,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:11","typeDescriptions":{}}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"944:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2710,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"948:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2683,"id":2716,"nodeType":"Return","src":"903:48:11"}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"597:126:11","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:11","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"a","nameLocation":"752:1:11","nodeType":"VariableDeclaration","scope":2718,"src":"745:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2676,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"b","nameLocation":"762:1:11","nodeType":"VariableDeclaration","scope":2718,"src":"755:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2678,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:11"},"returnParameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"788:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2681,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:11"},"scope":2740,"src":"728:230:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2738,"nodeType":"Block","src":"1102:158:11","statements":[{"id":2737,"nodeType":"UncheckedBlock","src":"1112:142:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1227:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:11","subExpression":{"id":2732,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1241:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:11","trueExpression":{"id":2731,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"1236:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:11","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2725,"id":2736,"nodeType":"Return","src":"1212:31:11"}]}]},"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"964:78:11","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2739,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:11","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"n","nameLocation":"1067:1:11","nodeType":"VariableDeclaration","scope":2739,"src":"1060:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2720,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:11"},"returnParameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2739,"src":"1093:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:11"},"scope":2740,"src":"1047:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2741,"src":"215:1047:11","usedErrors":[]}],"src":"109:1154:11"},"id":11},"contracts/ImarketPlace.sol":{"ast":{"absolutePath":"contracts/ImarketPlace.sol","exportedSymbols":{"INftMarketPlace":[2764]},"id":2765,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2742,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"INftMarketPlace","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2764,"linearizedBaseContracts":[2764],"name":"INftMarketPlace","nameLocation":"67:15:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6be4a002","id":2763,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawProceeds","nameLocation":"98:16:12","nodeType":"FunctionDefinition","parameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"_pA","nameLocation":"141:3:12","nodeType":"VariableDeclaration","scope":2763,"src":"124:20:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2743,"name":"uint","nodeType":"ElementaryTypeName","src":"124:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2745,"length":{"hexValue":"32","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"129:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"124:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"_pB","nameLocation":"174:3:12","nodeType":"VariableDeclaration","scope":2763,"src":"154:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":2747,"name":"uint","nodeType":"ElementaryTypeName","src":"154:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2749,"length":{"hexValue":"32","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"159:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"154:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":2751,"length":{"hexValue":"32","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"154:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":2756,"mutability":"mutable","name":"_pC","nameLocation":"205:3:12","nodeType":"VariableDeclaration","scope":2763,"src":"188:20:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2753,"name":"uint","nodeType":"ElementaryTypeName","src":"188:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"length":{"hexValue":"32","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"193:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"188:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"nullHash","nameLocation":"224:8:12","nodeType":"VariableDeclaration","scope":2763,"src":"219:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint","nodeType":"ElementaryTypeName","src":"219:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2760,"mutability":"mutable","name":"com","nameLocation":"250:3:12","nodeType":"VariableDeclaration","scope":2763,"src":"242:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"242:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"114:140:12"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"263:0:12"},"scope":2764,"src":"89:175:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2765,"src":"57:209:12","usedErrors":[]}],"src":"32:234:12"},"id":12},"contracts/InewBasicNft.sol":{"ast":{"absolutePath":"contracts/InewBasicNft.sol","exportedSymbols":{"INewBasicNFT":[2772]},"id":2773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2766,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"INewBasicNFT","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2772,"linearizedBaseContracts":[2772],"name":"INewBasicNFT","nameLocation":"67:12:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"da86f4a9","id":2771,"implemented":false,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"94:7:13","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"uri","nameLocation":"116:3:13","nodeType":"VariableDeclaration","scope":2771,"src":"102:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2767,"name":"string","nodeType":"ElementaryTypeName","src":"102:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101:19:13"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"129:0:13"},"scope":2772,"src":"85:45:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2773,"src":"57:75:13","usedErrors":[]}],"src":"32:100:13"},"id":13},"contracts/Iverifier.sol":{"ast":{"absolutePath":"contracts/Iverifier.sol","exportedSymbols":{"IVerifier":[2798]},"id":2799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2774,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2798,"linearizedBaseContracts":[2798],"name":"IVerifier","nameLocation":"67:9:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"11479fea","id":2797,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"92:11:14","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"a","nameLocation":"119:1:14","nodeType":"VariableDeclaration","scope":2797,"src":"104:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2775,"name":"uint","nodeType":"ElementaryTypeName","src":"104:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2777,"length":{"hexValue":"32","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"109:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"104:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"b","nameLocation":"140:1:14","nodeType":"VariableDeclaration","scope":2797,"src":"122:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":2779,"name":"uint","nodeType":"ElementaryTypeName","src":"122:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2781,"length":{"hexValue":"32","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"122:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":2783,"length":{"hexValue":"32","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"130:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"122:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"c","nameLocation":"158:1:14","nodeType":"VariableDeclaration","scope":2797,"src":"143:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2785,"name":"uint","nodeType":"ElementaryTypeName","src":"143:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"length":{"hexValue":"32","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"148:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"143:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"input","nameLocation":"176:5:14","nodeType":"VariableDeclaration","scope":2797,"src":"161:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":2789,"name":"uint","nodeType":"ElementaryTypeName","src":"161:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"length":{"hexValue":"33","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"161:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"103:79:14"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2797,"src":"200:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2794,"name":"bool","nodeType":"ElementaryTypeName","src":"200:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"199:6:14"},"scope":2798,"src":"83:123:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2799,"src":"57:151:14","usedErrors":[]}],"src":"32:176:14"},"id":14},"contracts/Izknft.sol":{"ast":{"absolutePath":"contracts/Izknft.sol","exportedSymbols":{"IZkNFT":[2866]},"id":2867,"nodeType":"SourceUnit","nodes":[{"id":2800,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IZkNFT","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2866,"linearizedBaseContracts":[2866],"name":"IZkNFT","nameLocation":"67:6:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"febe4909","id":2807,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"94:7:15","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"_tokenID","nameLocation":"110:8:15","nodeType":"VariableDeclaration","scope":2807,"src":"102:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"102:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"op","nameLocation":"128:2:15","nodeType":"VariableDeclaration","scope":2807,"src":"120:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2803,"name":"address","nodeType":"ElementaryTypeName","src":"120:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"101:30:15"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[],"src":"140:0:15"},"scope":2866,"src":"85:56:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d7809252","id":2814,"implemented":false,"kind":"function","modifiers":[],"name":"getApprovedAdd","nameLocation":"155:14:15","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2809,"mutability":"mutable","name":"_tokenID","nameLocation":"178:8:15","nodeType":"VariableDeclaration","scope":2814,"src":"170:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"170:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"169:18:15"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"210:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"210:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"209:9:15"},"scope":2866,"src":"146:73:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6352211e","id":2821,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"237:7:15","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"_tokenID","nameLocation":"253:8:15","nodeType":"VariableDeclaration","scope":2821,"src":"245:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"245:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"244:18:15"},"returnParameters":{"id":2820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2821,"src":"286:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"285:9:15"},"scope":2866,"src":"228:67:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8894c446","id":2830,"implemented":false,"kind":"function","modifiers":[],"name":"transferNFT","nameLocation":"309:11:15","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"_tokenID","nameLocation":"329:8:15","nodeType":"VariableDeclaration","scope":2830,"src":"321:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"nullifierHash","nameLocation":"347:13:15","nodeType":"VariableDeclaration","scope":2830,"src":"339:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"buyer","nameLocation":"370:5:15","nodeType":"VariableDeclaration","scope":2830,"src":"362:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"320:56:15"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[],"src":"385:0:15"},"scope":2866,"src":"300:86:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a50348dc","id":2841,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"400:12:15","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"ownerNul","nameLocation":"421:8:15","nodeType":"VariableDeclaration","scope":2841,"src":"413:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"buyerNul","nameLocation":"439:8:15","nodeType":"VariableDeclaration","scope":2841,"src":"431:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"buyer","nameLocation":"457:5:15","nodeType":"VariableDeclaration","scope":2841,"src":"449:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"_tokenID","nameLocation":"472:8:15","nodeType":"VariableDeclaration","scope":2841,"src":"464:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"464:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"412:69:15"},"returnParameters":{"id":2840,"nodeType":"ParameterList","parameters":[],"src":"490:0:15"},"scope":2866,"src":"391:100:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3bb3a24d","id":2848,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenURI","nameLocation":"505:11:15","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"_tokenID","nameLocation":"525:8:15","nodeType":"VariableDeclaration","scope":2848,"src":"517:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"516:18:15"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2848,"src":"557:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2845,"name":"string","nodeType":"ElementaryTypeName","src":"557:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"556:15:15"},"scope":2866,"src":"496:76:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":2853,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"586:4:15","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[],"src":"590:2:15"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2853,"src":"617:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2850,"name":"string","nodeType":"ElementaryTypeName","src":"617:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"616:15:15"},"scope":2866,"src":"577:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":2858,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"646:6:15","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[],"src":"652:2:15"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"679:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2855,"name":"string","nodeType":"ElementaryTypeName","src":"679:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"678:15:15"},"scope":2866,"src":"637:57:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"263c7868","id":2865,"implemented":false,"kind":"function","modifiers":[],"name":"deleteZkNft","nameLocation":"708:11:15","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"tokenID","nameLocation":"728:7:15","nodeType":"VariableDeclaration","scope":2865,"src":"720:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"owner","nameLocation":"745:5:15","nodeType":"VariableDeclaration","scope":2865,"src":"737:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"719:32:15"},"returnParameters":{"id":2864,"nodeType":"ParameterList","parameters":[],"src":"760:0:15"},"scope":2866,"src":"699:62:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2867,"src":"57:706:15","usedErrors":[]}],"src":"32:731:15"},"id":15},"contracts/MIMCSponge.sol":{"ast":{"absolutePath":"contracts/MIMCSponge.sol","exportedSymbols":{"Hasher":[3066]},"id":3067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2868,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Hasher","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3066,"linearizedBaseContracts":[3066],"name":"Hasher","nameLocation":"66:6:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2871,"mutability":"mutable","name":"p","nameLocation":"87:1:16","nodeType":"VariableDeclaration","scope":3066,"src":"79:89:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"79:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"91:77:16","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1","typeString":"int_const 2188...(69 digits omitted)...5617"},"value":"21888242871839275222246405745257275088548364400416034343698204186575808495617"},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"c","nameLocation":"186:1:16","nodeType":"VariableDeclaration","scope":3066,"src":"174:1687:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage","typeString":"uint256[20]"},"typeName":{"baseType":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2874,"length":{"hexValue":"3230","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"182:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"174:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage_ptr","typeString":"uint256[20]"}},"value":{"components":[{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"200:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"3235383233313931393631303233383131353239363836373233333735323535303435363036313837313730313230363234373431303536323638383930333930383338333130323730303238","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"211:77:16","typeDescriptions":{"typeIdentifier":"t_rational_25823191961023811529686723375255045606187170120624741056268890390838310270028_by_1","typeString":"int_const 2582...(69 digits omitted)...0028"},"value":"25823191961023811529686723375255045606187170120624741056268890390838310270028"},{"hexValue":"3731313533323535373638383732303036393734323835383031393337353231393935393037333433383438333736393336303633313133383030383837383036393838313234333538383030","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"298:77:16","typeDescriptions":{"typeIdentifier":"t_rational_71153255768872006974285801937521995907343848376936063113800887806988124358800_by_1","typeString":"int_const 7115...(69 digits omitted)...8800"},"value":"71153255768872006974285801937521995907343848376936063113800887806988124358800"},{"hexValue":"3531323533313736393232383939323031393837393338333635363533313239373830373535383034303531353336353530383236363031313638363330393531313438333939303035323436","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"385:77:16","typeDescriptions":{"typeIdentifier":"t_rational_51253176922899201987938365653129780755804051536550826601168630951148399005246_by_1","typeString":"int_const 5125...(69 digits omitted)...5246"},"value":"51253176922899201987938365653129780755804051536550826601168630951148399005246"},{"hexValue":"3636363531373130343833393835333832333635353830313831313838373036313733353332343837333836333932303033333431333036333037393231303135303636353134353934343036","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"472:77:16","typeDescriptions":{"typeIdentifier":"t_rational_66651710483985382365580181188706173532487386392003341306307921015066514594406_by_1","typeString":"int_const 6665...(69 digits omitted)...4406"},"value":"66651710483985382365580181188706173532487386392003341306307921015066514594406"},{"hexValue":"3435383837303033343133393231323034373735333937393737303434323834333738393230323336313034363230323136313934393030363639353931313930363238313839333237383837","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"559:77:16","typeDescriptions":{"typeIdentifier":"t_rational_45887003413921204775397977044284378920236104620216194900669591190628189327887_by_1","typeString":"int_const 4588...(69 digits omitted)...7887"},"value":"45887003413921204775397977044284378920236104620216194900669591190628189327887"},{"hexValue":"3134333939393939373232363137303337383932373437323332343738323935393233373438363635353634343330323538333435313335393437373537333831393034393536393737343533","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:77:16","typeDescriptions":{"typeIdentifier":"t_rational_14399999722617037892747232478295923748665564430258345135947757381904956977453_by_1","typeString":"int_const 1439...(69 digits omitted)...7453"},"value":"14399999722617037892747232478295923748665564430258345135947757381904956977453"},{"hexValue":"3239333736313736373237373538313737383039323034343234323039313235323537363239363338323339383037333139363138333630363830333435303739343730323430393439313435","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:77:16","typeDescriptions":{"typeIdentifier":"t_rational_29376176727758177809204424209125257629638239807319618360680345079470240949145_by_1","typeString":"int_const 2937...(69 digits omitted)...9145"},"value":"29376176727758177809204424209125257629638239807319618360680345079470240949145"},{"hexValue":"3133373638383539333132353138323938383430393337353430353332323737303136353132303837303035313734363530313230393337333039323739383332323330353133313130383436","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"820:77:16","typeDescriptions":{"typeIdentifier":"t_rational_13768859312518298840937540532277016512087005174650120937309279832230513110846_by_1","typeString":"int_const 1376...(69 digits omitted)...0846"},"value":"13768859312518298840937540532277016512087005174650120937309279832230513110846"},{"hexValue":"3534373439363632393930333632383430353639303231393831353334343536343438353537313535363832373536353036383533323430303239303233363335333436303631363631363135","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"907:77:16","typeDescriptions":{"typeIdentifier":"t_rational_54749662990362840569021981534456448557155682756506853240029023635346061661615_by_1","typeString":"int_const 5474...(69 digits omitted)...1615"},"value":"54749662990362840569021981534456448557155682756506853240029023635346061661615"},{"hexValue":"3235313631343336343730373138333531323737303137323331323135323237383436353335313438323830343630393437383136323836353735353633393435313835313237393735303334","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"994:77:16","typeDescriptions":{"typeIdentifier":"t_rational_25161436470718351277017231215227846535148280460947816286575563945185127975034_by_1","typeString":"int_const 2516...(69 digits omitted)...5034"},"value":"25161436470718351277017231215227846535148280460947816286575563945185127975034"},{"hexValue":"3930333730303330343634313739343433393330313132313635323734323735323731333530363531343834323339313535303136353534373338363339313937343137313136353538373330","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1081:77:16","typeDescriptions":{"typeIdentifier":"t_rational_90370030464179443930112165274275271350651484239155016554738639197417116558730_by_1","typeString":"int_const 9037...(69 digits omitted)...8730"},"value":"90370030464179443930112165274275271350651484239155016554738639197417116558730"},{"hexValue":"3932303134373838323630383530313637353832383237393130343137363532343339353632333035323830343533323233343932383531363630303936373430323034383839333831323535","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1168:77:16","typeDescriptions":{"typeIdentifier":"t_rational_92014788260850167582827910417652439562305280453223492851660096740204889381255_by_1","typeString":"int_const 9201...(69 digits omitted)...1255"},"value":"92014788260850167582827910417652439562305280453223492851660096740204889381255"},{"hexValue":"3430333736343930363430303733303334333938323034353538393035343033353233373338393132303931393039353136353130313536353737353236333730363337373233343639323433","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1255:77:16","typeDescriptions":{"typeIdentifier":"t_rational_40376490640073034398204558905403523738912091909516510156577526370637723469243_by_1","typeString":"int_const 4037...(69 digits omitted)...9243"},"value":"40376490640073034398204558905403523738912091909516510156577526370637723469243"},{"hexValue":"393033373932323434333931353331333737313233323736343332383932383936323437393234373338373834343032303435333732313135363032383837313033363735323939383339","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1342:75:16","typeDescriptions":{"typeIdentifier":"t_rational_903792244391531377123276432892896247924738784402045372115602887103675299839_by_1","typeString":"int_const 9037...(67 digits omitted)...9839"},"value":"903792244391531377123276432892896247924738784402045372115602887103675299839"},{"hexValue":"313132323033343135323032363939373931383838393238353730333039313836383534353835353631363536363135313932323332353434323632363439303733393939373931333137313731","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1427:78:16","typeDescriptions":{"typeIdentifier":"t_rational_112203415202699791888928570309186854585561656615192232544262649073999791317171_by_1","typeString":"int_const 1122...(70 digits omitted)...7171"},"value":"112203415202699791888928570309186854585561656615192232544262649073999791317171"},{"hexValue":"313134383031363831313336373438383830363739303632353438373832373932373433383432393938363335353538393039363335323437383431373939323233303034383032393334303435","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1515:78:16","typeDescriptions":{"typeIdentifier":"t_rational_114801681136748880679062548782792743842998635558909635247841799223004802934045_by_1","typeString":"int_const 1148...(70 digits omitted)...4045"},"value":"114801681136748880679062548782792743842998635558909635247841799223004802934045"},{"hexValue":"313131343430383138393438363736383136353339393738393330353134343638303338363033333237333838383039383234303839353933333238323935353033363732303131363034303238","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1603:78:16","typeDescriptions":{"typeIdentifier":"t_rational_111440818948676816539978930514468038603327388809824089593328295503672011604028_by_1","typeString":"int_const 1114...(70 digits omitted)...4028"},"value":"111440818948676816539978930514468038603327388809824089593328295503672011604028"},{"hexValue":"3634393635393630303731373532383039303930343338303033313537333632373634383435323833323235333531343032373436363735323338353339333735343034353238373037333937","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:77:16","typeDescriptions":{"typeIdentifier":"t_rational_64965960071752809090438003157362764845283225351402746675238539375404528707397_by_1","typeString":"int_const 6496...(69 digits omitted)...7397"},"value":"64965960071752809090438003157362764845283225351402746675238539375404528707397"},{"hexValue":"3938343238353130373837313334393935343935383936343533343133373134383634373839393730333336323435343733343133333734343234353938393835393838333039373433303937","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1778:77:16","typeDescriptions":{"typeIdentifier":"t_rational_98428510787134995495896453413714864789970336245473413374424598985988309743097_by_1","typeString":"int_const 9842...(69 digits omitted)...3097"},"value":"98428510787134995495896453413714864789970336245473413374424598985988309743097"}],"id":2895,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"190:1671:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_memory_ptr","typeString":"uint256[20] memory"}},"visibility":"internal"},{"body":{"id":3007,"nodeType":"Block","src":"1974:583:16","statements":[{"assignments":[2910],"declarations":[{"constant":false,"id":2910,"mutability":"mutable","name":"nRounds","nameLocation":"1990:7:16","nodeType":"VariableDeclaration","scope":3007,"src":"1984:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2909,"name":"uint8","nodeType":"ElementaryTypeName","src":"1984:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2912,"initialValue":{"hexValue":"3230","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2000:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"VariableDeclarationStatement","src":"1984:18:16"},{"assignments":[2914],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"lastL","nameLocation":"2021:5:16","nodeType":"VariableDeclaration","scope":3007,"src":"2013:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2916,"initialValue":{"id":2915,"name":"_iL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2029:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2013:19:16"},{"assignments":[2918],"declarations":[{"constant":false,"id":2918,"mutability":"mutable","name":"lastR","nameLocation":"2050:5:16","nodeType":"VariableDeclaration","scope":3007,"src":"2042:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2920,"initialValue":{"id":2919,"name":"_iR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2058:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2042:19:16"},{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"mask","nameLocation":"2080:4:16","nodeType":"VariableDeclaration","scope":3007,"src":"2072:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"2072:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2923,"nodeType":"VariableDeclarationStatement","src":"2072:12:16"},{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"mask2","nameLocation":"2102:5:16","nodeType":"VariableDeclaration","scope":3007,"src":"2094:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2926,"nodeType":"VariableDeclarationStatement","src":"2094:13:16"},{"assignments":[2928],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"mask4","nameLocation":"2125:5:16","nodeType":"VariableDeclaration","scope":3007,"src":"2117:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2929,"nodeType":"VariableDeclarationStatement","src":"2117:13:16"},{"assignments":[2931],"declarations":[{"constant":false,"id":2931,"mutability":"mutable","name":"temp","nameLocation":"2148:4:16","nodeType":"VariableDeclaration","scope":3007,"src":"2140:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2930,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2932,"nodeType":"VariableDeclarationStatement","src":"2140:12:16"},{"body":{"id":3001,"nodeType":"Block","src":"2197:322:16","statements":[{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2211:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2945,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2225:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2946,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"2232:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2947,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2944,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2218:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2218:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2211:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2950,"nodeType":"ExpressionStatement","src":"2211:27:16"},{"expression":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2951,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2252:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2953,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2266:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2954,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2272:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage","typeString":"uint256[20] storage ref"}},"id":2956,"indexExpression":{"id":2955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2274:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2272:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2278:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2952,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2259:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2252:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"nodeType":"ExpressionStatement","src":"2252:28:16"},{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2961,"name":"mask2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2294:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2963,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2309:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2964,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2315:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2965,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2321:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2302:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2294:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"2294:29:16"},{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"mask4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2337:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2971,"name":"mask2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2352:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2972,"name":"mask2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2359:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2973,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2366:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2970,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2345:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2337:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"nodeType":"ExpressionStatement","src":"2337:31:16"},{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2977,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2382:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2979,"name":"mask4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"2396:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2980,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2981,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2409:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2978,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2389:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2389:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2382:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2984,"nodeType":"ExpressionStatement","src":"2382:29:16"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2985,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2426:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2986,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2433:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2426:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"2426:12:16"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2452:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2991,"name":"lastL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"2467:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2992,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"2474:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2993,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2480:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2990,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2460:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2452:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"2452:30:16"},{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"lastL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"2496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2998,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2504:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2496:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"nodeType":"ExpressionStatement","src":"2496:12:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2180:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2938,"name":"nRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"2184:7:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2180:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"initializationExpression":{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"i","nameLocation":"2173:1:16","nodeType":"VariableDeclaration","scope":3002,"src":"2167:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2933,"name":"uint8","nodeType":"ElementaryTypeName","src":"2167:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2936,"initialValue":{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2177:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2167:11:16"},"loopExpression":{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2193:3:16","subExpression":{"id":2940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"2193:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2942,"nodeType":"ExpressionStatement","src":"2193:3:16"},"nodeType":"ForStatement","src":"2163:356:16"},{"expression":{"components":[{"id":3003,"name":"lastL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"2537:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3004,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2544:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2536:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2908,"id":3006,"nodeType":"Return","src":"2529:21:16"}]},"id":3008,"implemented":true,"kind":"function","modifiers":[],"name":"MiMC5Feistel","nameLocation":"1877:12:16","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"_iL","nameLocation":"1898:3:16","nodeType":"VariableDeclaration","scope":3008,"src":"1890:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2900,"mutability":"mutable","name":"_iR","nameLocation":"1911:3:16","nodeType":"VariableDeclaration","scope":3008,"src":"1903:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"_k","nameLocation":"1924:2:16","nodeType":"VariableDeclaration","scope":3008,"src":"1916:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1916:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1889:38:16"},"returnParameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"oL","nameLocation":"1958:2:16","nodeType":"VariableDeclaration","scope":3008,"src":"1950:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1950:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"oR","nameLocation":"1970:2:16","nodeType":"VariableDeclaration","scope":3008,"src":"1962:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:24:16"},"scope":3066,"src":"1868:689:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"2652:248:16","statements":[{"assignments":[3020],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"lastR","nameLocation":"2670:5:16","nodeType":"VariableDeclaration","scope":3064,"src":"2662:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2662:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3022,"initialValue":{"hexValue":"30","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2678:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2662:17:16"},{"assignments":[3024],"declarations":[{"constant":false,"id":3024,"mutability":"mutable","name":"lastC","nameLocation":"2697:5:16","nodeType":"VariableDeclaration","scope":3064,"src":"2689:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2689:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3026,"initialValue":{"hexValue":"30","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2705:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2689:17:16"},{"body":{"id":3058,"nodeType":"Block","src":"2755:119:16","statements":[{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2769:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3040,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2784:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3041,"name":"_ins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"2791:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3043,"indexExpression":{"id":3042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"2796:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3044,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"2800:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3039,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"2777:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2769:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ExpressionStatement","src":"2769:33:16"},{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3048,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2817:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3049,"name":"lastC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"2824:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3050,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2816:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3052,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2846:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3053,"name":"lastC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"2853:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3054,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"2860:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3051,"name":"MiMC5Feistel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"2833:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256,uint256)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2833:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"2816:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"ExpressionStatement","src":"2816:47:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"2734:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3032,"name":"_ins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"2738:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2743:6:16","memberName":"length","nodeType":"MemberAccess","src":"2738:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2734:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"initializationExpression":{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"i","nameLocation":"2727:1:16","nodeType":"VariableDeclaration","scope":3059,"src":"2721:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3027,"name":"uint8","nodeType":"ElementaryTypeName","src":"2721:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3030,"initialValue":{"hexValue":"30","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2731:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2721:11:16"},"loopExpression":{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2751:3:16","subExpression":{"id":3035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"2751:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3037,"nodeType":"ExpressionStatement","src":"2751:3:16"},"nodeType":"ForStatement","src":"2717:157:16"},{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"2884:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3061,"name":"lastR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2888:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2884:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3063,"nodeType":"ExpressionStatement","src":"2884:9:16"}]},"functionSelector":"d622e5a4","id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"MiMC5Sponge","nameLocation":"2571:11:16","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"_ins","nameLocation":"2601:4:16","nodeType":"VariableDeclaration","scope":3065,"src":"2583:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2583:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3011,"length":{"hexValue":"32","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2591:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2583:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"_k","nameLocation":"2615:2:16","nodeType":"VariableDeclaration","scope":3065,"src":"2607:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2582:36:16"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"h","nameLocation":"2649:1:16","nodeType":"VariableDeclaration","scope":3065,"src":"2641:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2640:11:16"},"scope":3066,"src":"2562:338:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3067,"src":"57:2845:16","usedErrors":[]}],"src":"32:2870:16"},"id":16},"contracts/convertToERC721.sol":{"ast":{"absolutePath":"contracts/convertToERC721.sol","exportedSymbols":{"Address":[1482],"Context":[1504],"ConvertToERC721":[3126],"ERC165":[1757],"ERC721":[991],"IERC165":[1769],"IERC721":[1107],"IERC721Metadata":[1152],"IERC721Receiver":[1125],"INewBasicNFT":[2772],"Math":[2635],"SignedMath":[2740],"Strings":[1733]},"id":3127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3068,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3127,"sourceUnit":992,"src":"57:57:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/InewBasicNft.sol","file":"./InewBasicNft.sol","id":3070,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3127,"sourceUnit":2773,"src":"115:28:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3071,"name":"INewBasicNFT","nameLocations":["173:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"173:12:17"},"id":3072,"nodeType":"InheritanceSpecifier","src":"173:12:17"},{"baseName":{"id":3073,"name":"ERC721","nameLocations":["187:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":991,"src":"187:6:17"},"id":3074,"nodeType":"InheritanceSpecifier","src":"187:6:17"}],"canonicalName":"ConvertToERC721","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3126,"linearizedBaseContracts":[3126,991,1152,1107,1757,1769,1504,2772],"name":"ConvertToERC721","nameLocation":"154:15:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d082e381","id":3076,"mutability":"mutable","name":"tokenCounter","nameLocation":"215:12:17","nodeType":"VariableDeclaration","scope":3126,"src":"200:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"200:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":3080,"mutability":"mutable","name":"tokenIDtoURI","nameLocation":"266:12:17","nodeType":"VariableDeclaration","scope":3126,"src":"233:45:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3079,"keyType":{"id":3077,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"233:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":3078,"name":"string","nodeType":"ElementaryTypeName","src":"250:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"body":{"id":3095,"nodeType":"Block","src":"354:33:17","statements":[{"expression":{"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3091,"name":"tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"364:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"379:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"364:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3094,"nodeType":"ExpressionStatement","src":"364:16:17"}]},"id":3096,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3087,"name":"str1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"344:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3088,"name":"str2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"349:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3089,"kind":"baseConstructorSpecifier","modifierName":{"id":3086,"name":"ERC721","nameLocations":["337:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":991,"src":"337:6:17"},"nodeType":"ModifierInvocation","src":"337:17:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"str1","nameLocation":"311:4:17","nodeType":"VariableDeclaration","scope":3096,"src":"297:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3081,"name":"string","nodeType":"ElementaryTypeName","src":"297:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"str2","nameLocation":"331:4:17","nodeType":"VariableDeclaration","scope":3096,"src":"317:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3083,"name":"string","nodeType":"ElementaryTypeName","src":"317:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"296:40:17"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[],"src":"354:0:17"},"scope":3126,"src":"285:102:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[269],"body":{"id":3108,"nodeType":"Block","src":"471:45:17","statements":[{"expression":{"baseExpression":{"id":3104,"name":"tokenIDtoURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"488:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3106,"indexExpression":{"id":3105,"name":"tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"501:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"488:21:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3103,"id":3107,"nodeType":"Return","src":"481:28:17"}]},"functionSelector":"c87b56dd","id":3109,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"402:8:17","nodeType":"FunctionDefinition","overrides":{"id":3100,"nodeType":"OverrideSpecifier","overrides":[],"src":"435:8:17"},"parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"tokenID","nameLocation":"419:7:17","nodeType":"VariableDeclaration","scope":3109,"src":"411:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"410:17:17"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3109,"src":"457:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3101,"name":"string","nodeType":"ElementaryTypeName","src":"457:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"456:15:17"},"scope":3126,"src":"393:123:17","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2771],"body":{"id":3124,"nodeType":"Block","src":"574:73:17","statements":[{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3115,"name":"tokenIDtoURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"584:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3117,"indexExpression":{"id":3116,"name":"tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"597:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"584:26:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3118,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"613:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"584:32:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3120,"nodeType":"ExpressionStatement","src":"584:32:17"},{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"626:14:17","subExpression":{"id":3121,"name":"tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"626:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3123,"nodeType":"ExpressionStatement","src":"626:14:17"}]},"functionSelector":"da86f4a9","id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"531:7:17","nodeType":"FunctionDefinition","overrides":{"id":3113,"nodeType":"OverrideSpecifier","overrides":[],"src":"565:8:17"},"parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"uri","nameLocation":"553:3:17","nodeType":"VariableDeclaration","scope":3125,"src":"539:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3110,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:19:17"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[],"src":"574:0:17"},"scope":3126,"src":"522:125:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3127,"src":"145:505:17","usedErrors":[]}],"src":"32:618:17"},"id":17},"contracts/nftMarketPlace.sol":{"ast":{"absolutePath":"contracts/nftMarketPlace.sol","exportedSymbols":{"Hasher":[3066],"INewBasicNFT":[2772],"INftMarketPlace":[2764],"IVerifier":[3157],"IZkNFT":[2866],"NftMarketplace":[3895],"ReentrancyGuard":[64]},"id":3896,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3128,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":3129,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":65,"src":"57:62:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Izknft.sol","file":"./Izknft.sol","id":3130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":2867,"src":"120:22:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ImarketPlace.sol","file":"./ImarketPlace.sol","id":3131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":2765,"src":"143:28:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/InewBasicNft.sol","file":"./InewBasicNft.sol","id":3132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":2773,"src":"172:28:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/MIMCSponge.sol","file":"./MIMCSponge.sol","id":3133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":3067,"src":"201:26:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVerifier","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3157,"linearizedBaseContracts":[3157],"name":"IVerifier","nameLocation":"239:9:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f5c9d69e","id":3156,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"264:11:18","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"_pA","nameLocation":"293:3:18","nodeType":"VariableDeclaration","scope":3156,"src":"276:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3134,"name":"uint","nodeType":"ElementaryTypeName","src":"276:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3136,"length":{"hexValue":"32","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"281:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"276:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"_pB","nameLocation":"318:3:18","nodeType":"VariableDeclaration","scope":3156,"src":"298:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":3138,"name":"uint","nodeType":"ElementaryTypeName","src":"298:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3140,"length":{"hexValue":"32","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"303:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"298:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":3142,"length":{"hexValue":"32","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"306:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"298:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"_pC","nameLocation":"340:3:18","nodeType":"VariableDeclaration","scope":3156,"src":"323:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3144,"name":"uint","nodeType":"ElementaryTypeName","src":"323:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3146,"length":{"hexValue":"32","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"328:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"323:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"_pubSignals","nameLocation":"362:11:18","nodeType":"VariableDeclaration","scope":3156,"src":"345:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3148,"name":"uint","nodeType":"ElementaryTypeName","src":"345:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"length":{"hexValue":"32","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"350:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"345:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"275:99:18"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3156,"src":"393:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3153,"name":"bool","nodeType":"ElementaryTypeName","src":"393:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"392:6:18"},"scope":3157,"src":"255:144:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3896,"src":"229:172:18","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":3158,"name":"ReentrancyGuard","nameLocations":["430:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"430:15:18"},"id":3159,"nodeType":"InheritanceSpecifier","src":"430:15:18"},{"baseName":{"id":3160,"name":"INftMarketPlace","nameLocations":["447:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":2764,"src":"447:15:18"},"id":3161,"nodeType":"InheritanceSpecifier","src":"447:15:18"}],"canonicalName":"NftMarketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3895,"linearizedBaseContracts":[3895,2764,64],"name":"NftMarketplace","nameLocation":"412:14:18","nodeType":"ContractDefinition","nodes":[{"errorSelector":"7c934565","id":3169,"name":"PriceNotMet","nameLocation":"474:11:18","nodeType":"ErrorDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"nftAddress","nameLocation":"494:10:18","nodeType":"VariableDeclaration","scope":3169,"src":"486:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"tokenId","nameLocation":"514:7:18","nodeType":"VariableDeclaration","scope":3169,"src":"506:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"price","nameLocation":"531:5:18","nodeType":"VariableDeclaration","scope":3169,"src":"523:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"485:52:18"},"src":"468:70:18"},{"errorSelector":"c5d002b3","id":3175,"name":"ItemNotForSale","nameLocation":"549:14:18","nodeType":"ErrorDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"nftAddress","nameLocation":"572:10:18","nodeType":"VariableDeclaration","scope":3175,"src":"564:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"564:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"tokenId","nameLocation":"592:7:18","nodeType":"VariableDeclaration","scope":3175,"src":"584:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"563:37:18"},"src":"543:58:18"},{"errorSelector":"6831488c","id":3181,"name":"NotListed","nameLocation":"612:9:18","nodeType":"ErrorDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"nftAddress","nameLocation":"630:10:18","nodeType":"VariableDeclaration","scope":3181,"src":"622:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3176,"name":"address","nodeType":"ElementaryTypeName","src":"622:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"tokenId","nameLocation":"650:7:18","nodeType":"VariableDeclaration","scope":3181,"src":"642:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"642:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"621:37:18"},"src":"606:53:18"},{"errorSelector":"4a5568d5","id":3187,"name":"AlreadyListed","nameLocation":"670:13:18","nodeType":"ErrorDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"nftAddress","nameLocation":"692:10:18","nodeType":"VariableDeclaration","scope":3187,"src":"684:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3182,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"tokenId","nameLocation":"712:7:18","nodeType":"VariableDeclaration","scope":3187,"src":"704:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"683:37:18"},"src":"664:57:18"},{"errorSelector":"c4d8fa87","id":3189,"name":"NoProceeds","nameLocation":"732:10:18","nodeType":"ErrorDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"742:2:18"},"src":"726:19:18"},{"errorSelector":"30cd7471","id":3191,"name":"NotOwner","nameLocation":"756:8:18","nodeType":"ErrorDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[],"src":"764:2:18"},"src":"750:17:18"},{"errorSelector":"4be3a2c5","id":3193,"name":"NotApprovedForMarketplace","nameLocation":"778:25:18","nodeType":"ErrorDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[],"src":"803:2:18"},"src":"772:34:18"},{"errorSelector":"e1abbfc5","id":3195,"name":"PriceMustBeAboveZero","nameLocation":"817:20:18","nodeType":"ErrorDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[],"src":"837:2:18"},"src":"811:29:18"},{"errorSelector":"bf961a28","id":3197,"name":"TransactionFailed","nameLocation":"851:17:18","nodeType":"ErrorDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[],"src":"868:2:18"},"src":"845:26:18"},{"errorSelector":"cad2ae02","id":3199,"name":"NullifierAlreadyUsed","nameLocation":"882:20:18","nodeType":"ErrorDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[],"src":"902:2:18"},"src":"876:29:18"},{"errorSelector":"b7c01e1e","id":3201,"name":"CommitmentAlreadyUsed","nameLocation":"916:21:18","nodeType":"ErrorDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[],"src":"937:2:18"},"src":"910:30:18"},{"errorSelector":"09bde339","id":3203,"name":"InvalidProof","nameLocation":"951:12:18","nodeType":"ErrorDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[],"src":"963:2:18"},"src":"945:21:18"},{"errorSelector":"31212686","id":3205,"name":"NotAuthority","nameLocation":"977:12:18","nodeType":"ErrorDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[],"src":"989:2:18"},"src":"971:21:18"},{"canonicalName":"NftMarketplace.Listing","id":3210,"members":[{"constant":false,"id":3207,"mutability":"mutable","name":"price","nameLocation":"1031:5:18","nodeType":"VariableDeclaration","scope":3210,"src":"1023:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"seller","nameLocation":"1054:6:18","nodeType":"VariableDeclaration","scope":3210,"src":"1046:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1046:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Listing","nameLocation":"1005:7:18","nodeType":"StructDefinition","scope":3895,"src":"998:69:18","visibility":"public"},{"anonymous":false,"eventSelector":"b7070c3c377d2fb697e5ddc72b0283eb751116d682ff1cdb579eab77bcc4013b","id":3220,"name":"ItemListed","nameLocation":"1079:10:18","nodeType":"EventDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"indexed":false,"mutability":"mutable","name":"seller","nameLocation":"1107:6:18","nodeType":"VariableDeclaration","scope":3220,"src":"1099:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"1139:10:18","nodeType":"VariableDeclaration","scope":3220,"src":"1123:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3216,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1175:7:18","nodeType":"VariableDeclaration","scope":3220,"src":"1159:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1159:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3218,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1200:5:18","nodeType":"VariableDeclaration","scope":3220,"src":"1192:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1192:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1089:122:18"},"src":"1073:139:18"},{"anonymous":false,"eventSelector":"b407ecd2b3b64ae3cf35d828f7155fc60edd9911030438178310f6498bb0328f","id":3228,"name":"ItemCanceled","nameLocation":"1224:12:18","nodeType":"EventDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"indexed":false,"mutability":"mutable","name":"seller","nameLocation":"1254:6:18","nodeType":"VariableDeclaration","scope":3228,"src":"1246:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3224,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"1286:10:18","nodeType":"VariableDeclaration","scope":3228,"src":"1270:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"1270:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3226,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1322:7:18","nodeType":"VariableDeclaration","scope":3228,"src":"1306:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:99:18"},"src":"1218:118:18"},{"anonymous":false,"eventSelector":"8c912d39752dc1f52744615b409bb9cd946102bab9b0e6316d0a6ea0c3a1372a","id":3238,"name":"ItemBought","nameLocation":"1348:10:18","nodeType":"EventDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"indexed":false,"mutability":"mutable","name":"buyer","nameLocation":"1376:5:18","nodeType":"VariableDeclaration","scope":3238,"src":"1368:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1368:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3232,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"1407:10:18","nodeType":"VariableDeclaration","scope":3238,"src":"1391:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3234,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1443:7:18","nodeType":"VariableDeclaration","scope":3238,"src":"1427:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3236,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1468:5:18","nodeType":"VariableDeclaration","scope":3238,"src":"1460:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1460:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1358:121:18"},"src":"1342:138:18"},{"anonymous":false,"eventSelector":"edfa780d7781a8b1783d9fd71ece3fafd0470cbdf1276685916e081d3be6223f","id":3246,"name":"ItemConverted","nameLocation":"1492:13:18","nodeType":"EventDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"indexed":false,"mutability":"mutable","name":"zkNftAddress","nameLocation":"1523:12:18","nodeType":"VariableDeclaration","scope":3246,"src":"1515:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"1515:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3242,"indexed":true,"mutability":"mutable","name":"tokenID","nameLocation":"1561:7:18","nodeType":"VariableDeclaration","scope":3246,"src":"1545:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3244,"indexed":false,"mutability":"mutable","name":"ercNftAddress","nameLocation":"1586:13:18","nodeType":"VariableDeclaration","scope":3246,"src":"1578:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"1578:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1505:100:18"},"src":"1486:120:18"},{"constant":false,"id":3249,"mutability":"mutable","name":"hasher","nameLocation":"1619:6:18","nodeType":"VariableDeclaration","scope":3895,"src":"1612:13:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$3066","typeString":"contract Hasher"},"typeName":{"id":3248,"nodeType":"UserDefinedTypeName","pathNode":{"id":3247,"name":"Hasher","nameLocations":["1612:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":3066,"src":"1612:6:18"},"referencedDeclaration":3066,"src":"1612:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$3066","typeString":"contract Hasher"}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"creationFee","nameLocation":"1639:11:18","nodeType":"VariableDeclaration","scope":3895,"src":"1631:23:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1653:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"marketFee","nameLocation":"1668:9:18","nodeType":"VariableDeclaration","scope":3895,"src":"1660:21:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1680:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"conversionFee","nameLocation":"1695:13:18","nodeType":"VariableDeclaration","scope":3895,"src":"1687:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1687:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1711:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"verifier","nameLocation":"1726:8:18","nodeType":"VariableDeclaration","scope":3895,"src":"1718:16:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3259,"name":"address","nodeType":"ElementaryTypeName","src":"1718:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"authority","nameLocation":"1756:9:18","nodeType":"VariableDeclaration","scope":3895,"src":"1740:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"1740:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3269,"mutability":"mutable","name":"s_listings","nameLocation":"1827:10:18","nodeType":"VariableDeclaration","scope":3895,"src":"1771:66:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"typeName":{"id":3268,"keyType":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1771:47:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"valueType":{"id":3267,"keyType":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1790:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing)"},"valueType":{"id":3266,"nodeType":"UserDefinedTypeName","pathNode":{"id":3265,"name":"Listing","nameLocations":["1809:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3210,"src":"1809:7:18"},"referencedDeclaration":3210,"src":"1809:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage_ptr","typeString":"struct NftMarketplace.Listing"}}}},"visibility":"private"},{"constant":false,"id":3273,"mutability":"mutable","name":"s_proceeds","nameLocation":"1879:10:18","nodeType":"VariableDeclaration","scope":3895,"src":"1843:46:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3272,"keyType":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1843:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":3277,"mutability":"mutable","name":"nullifierHashes","nameLocation":"1928:15:18","nodeType":"VariableDeclaration","scope":3895,"src":"1895:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":3276,"keyType":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1895:24:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":3275,"name":"bool","nodeType":"ElementaryTypeName","src":"1914:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":3281,"mutability":"mutable","name":"commitments","nameLocation":"1982:11:18","nodeType":"VariableDeclaration","scope":3895,"src":"1949:44:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":3280,"keyType":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1949:24:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":3279,"name":"bool","nodeType":"ElementaryTypeName","src":"1968:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":3303,"nodeType":"Block","src":"2055:103:18","statements":[{"expression":{"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3288,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"2065:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$3066","typeString":"contract Hasher"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3290,"name":"_hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"2081:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3289,"name":"Hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2074:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hasher_$3066_$","typeString":"type(contract Hasher)"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$3066","typeString":"contract Hasher"}},"src":"2065:24:18","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$3066","typeString":"contract Hasher"}},"id":3293,"nodeType":"ExpressionStatement","src":"2065:24:18"},{"expression":{"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3294,"name":"verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2099:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3295,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"2110:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2099:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3297,"nodeType":"ExpressionStatement","src":"2099:20:18"},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3298,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2129:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3299,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2141:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2145:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2141:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2129:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3302,"nodeType":"ExpressionStatement","src":"2129:22:18"}]},"id":3304,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"_hasher","nameLocation":"2020:7:18","nodeType":"VariableDeclaration","scope":3304,"src":"2012:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"_verifier","nameLocation":"2037:9:18","nodeType":"VariableDeclaration","scope":3304,"src":"2029:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"2029:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2011:36:18"},"returnParameters":{"id":3287,"nodeType":"ParameterList","parameters":[],"src":"2055:0:18"},"scope":3895,"src":"2000:158:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3331,"nodeType":"Block","src":"2242:182:18","statements":[{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"listing","nameLocation":"2267:7:18","nodeType":"VariableDeclaration","scope":3331,"src":"2252:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":3311,"nodeType":"UserDefinedTypeName","pathNode":{"id":3310,"name":"Listing","nameLocations":["2252:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3210,"src":"2252:7:18"},"referencedDeclaration":3210,"src":"2252:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":3318,"initialValue":{"baseExpression":{"baseExpression":{"id":3313,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2277:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3315,"indexExpression":{"id":3314,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2288:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2277:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3317,"indexExpression":{"id":3316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2300:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2277:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2252:56:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3319,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"2322:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2330:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"2322:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2338:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2322:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3329,"nodeType":"IfStatement","src":"2318:89:18","trueBody":{"id":3328,"nodeType":"Block","src":"2341:66:18","statements":[{"errorCall":{"arguments":[{"id":3324,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2376:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2388:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3323,"name":"AlreadyListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"2362:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3327,"nodeType":"RevertStatement","src":"2355:41:18"}]}},{"id":3330,"nodeType":"PlaceholderStatement","src":"2416:1:18"}]},"id":3332,"name":"notListed","nameLocation":"2173:9:18","nodeType":"ModifierDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"nftAddress","nameLocation":"2200:10:18","nodeType":"VariableDeclaration","scope":3332,"src":"2192:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"2192:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"tokenId","nameLocation":"2228:7:18","nodeType":"VariableDeclaration","scope":3332,"src":"2220:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2220:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:59:18"},"src":"2164:260:18","virtual":false,"visibility":"internal"},{"body":{"id":3359,"nodeType":"Block","src":"2485:179:18","statements":[{"assignments":[3340],"declarations":[{"constant":false,"id":3340,"mutability":"mutable","name":"listing","nameLocation":"2510:7:18","nodeType":"VariableDeclaration","scope":3359,"src":"2495:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":3339,"nodeType":"UserDefinedTypeName","pathNode":{"id":3338,"name":"Listing","nameLocations":["2495:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3210,"src":"2495:7:18"},"referencedDeclaration":3210,"src":"2495:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":3346,"initialValue":{"baseExpression":{"baseExpression":{"id":3341,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2520:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3343,"indexExpression":{"id":3342,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2531:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2520:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3345,"indexExpression":{"id":3344,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"2543:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2520:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2495:56:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3347,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"2565:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2573:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"2565:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2582:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2565:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3357,"nodeType":"IfStatement","src":"2561:86:18","trueBody":{"id":3356,"nodeType":"Block","src":"2585:62:18","statements":[{"errorCall":{"arguments":[{"id":3352,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"2616:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"2628:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3351,"name":"NotListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"2606:9:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3355,"nodeType":"RevertStatement","src":"2599:37:18"}]}},{"id":3358,"nodeType":"PlaceholderStatement","src":"2656:1:18"}]},"id":3360,"name":"isListed","nameLocation":"2439:8:18","nodeType":"ModifierDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"nftAddress","nameLocation":"2456:10:18","nodeType":"VariableDeclaration","scope":3360,"src":"2448:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"2448:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"tokenId","nameLocation":"2476:7:18","nodeType":"VariableDeclaration","scope":3360,"src":"2468:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2447:37:18"},"src":"2430:234:18","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"2774:186:18","statements":[{"assignments":[3370],"declarations":[{"constant":false,"id":3370,"mutability":"mutable","name":"nft","nameLocation":"2791:3:18","nodeType":"VariableDeclaration","scope":3391,"src":"2784:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"},"typeName":{"id":3369,"nodeType":"UserDefinedTypeName","pathNode":{"id":3368,"name":"IZkNFT","nameLocations":["2784:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2866,"src":"2784:6:18"},"referencedDeclaration":2866,"src":"2784:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"visibility":"internal"}],"id":3374,"initialValue":{"arguments":[{"id":3372,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"2804:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3371,"name":"IZkNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"2797:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IZkNFT_$2866_$","typeString":"type(contract IZkNFT)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2797:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"nodeType":"VariableDeclarationStatement","src":"2784:31:18"},{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"ownerCom","nameLocation":"2833:8:18","nodeType":"VariableDeclaration","scope":3391,"src":"2825:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2825:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3381,"initialValue":{"arguments":[{"id":3379,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"2856:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3377,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"2844:3:18","typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2848:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"2844:11:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2825:39:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"spenderCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"2878:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3383,"name":"ownerCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"2890:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2878:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3389,"nodeType":"IfStatement","src":"2874:68:18","trueBody":{"id":3388,"nodeType":"Block","src":"2900:42:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3385,"name":"NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"2921:8:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3387,"nodeType":"RevertStatement","src":"2914:17:18"}]}},{"id":3390,"nodeType":"PlaceholderStatement","src":"2952:1:18"}]},"id":3392,"name":"isOwner","nameLocation":"2679:7:18","nodeType":"ModifierDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"nftAddress","nameLocation":"2704:10:18","nodeType":"VariableDeclaration","scope":3392,"src":"2696:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3361,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3364,"mutability":"mutable","name":"tokenId","nameLocation":"2732:7:18","nodeType":"VariableDeclaration","scope":3392,"src":"2724:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"spenderCom","nameLocation":"2757:10:18","nodeType":"VariableDeclaration","scope":3392,"src":"2749:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2686:87:18"},"src":"2670:290:18","virtual":false,"visibility":"internal"},{"body":{"id":3473,"nodeType":"Block","src":"3189:485:18","statements":[{"condition":{"baseExpression":{"id":3412,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"3202:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3414,"indexExpression":{"id":3413,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3214:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3202:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3419,"nodeType":"IfStatement","src":"3199:75:18","trueBody":{"id":3418,"nodeType":"Block","src":"3219:55:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3415,"name":"CommitmentAlreadyUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"3240:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3240:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3417,"nodeType":"RevertStatement","src":"3233:30:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3288:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3297:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3288:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"IfStatement","src":"3284:70:18","trueBody":{"id":3426,"nodeType":"Block","src":"3300:54:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3423,"name":"PriceMustBeAboveZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"3321:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3321:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3425,"nodeType":"RevertStatement","src":"3314:29:18"}]}},{"assignments":[3430],"declarations":[{"constant":false,"id":3430,"mutability":"mutable","name":"nft","nameLocation":"3370:3:18","nodeType":"VariableDeclaration","scope":3473,"src":"3363:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"},"typeName":{"id":3429,"nodeType":"UserDefinedTypeName","pathNode":{"id":3428,"name":"IZkNFT","nameLocations":["3363:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2866,"src":"3363:6:18"},"referencedDeclaration":2866,"src":"3363:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"id":3432,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3383:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3431,"name":"IZkNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3376:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IZkNFT_$2866_$","typeString":"type(contract IZkNFT)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3376:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"nodeType":"VariableDeclarationStatement","src":"3363:31:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3435,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"3408:3:18","typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3412:14:18","memberName":"getApprovedAdd","nodeType":"MemberAccess","referencedDeclaration":2814,"src":"3408:18:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3408:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3441,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3447:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NftMarketplace_$3895","typeString":"contract NftMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NftMarketplace_$3895","typeString":"contract NftMarketplace"}],"id":3440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3439:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3439,"name":"address","nodeType":"ElementaryTypeName","src":"3439:7:18","typeDescriptions":{}}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3439:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3408:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3448,"nodeType":"IfStatement","src":"3404:109:18","trueBody":{"id":3447,"nodeType":"Block","src":"3454:59:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3444,"name":"NotApprovedForMarketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3475:25:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3446,"nodeType":"RevertStatement","src":"3468:34:18"}]}},{"expression":{"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3449,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"3522:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3452,"indexExpression":{"id":3450,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3533:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3522:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3453,"indexExpression":{"id":3451,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3545:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3522:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3455,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3564:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3456,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3571:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3454,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"3556:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Listing_$3210_storage_ptr_$","typeString":"type(struct NftMarketplace.Listing storage pointer)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3556:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"src":"3522:53:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"id":3459,"nodeType":"ExpressionStatement","src":"3522:53:18"},{"eventCall":{"arguments":[{"id":3461,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3601:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3462,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3606:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3463,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3618:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3464,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3627:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3460,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"3590:10:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3590:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3466,"nodeType":"EmitStatement","src":"3585:48:18"},{"expression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3467,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"3644:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3469,"indexExpression":{"id":3468,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3656:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3644:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3663:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3644:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3472,"nodeType":"ExpressionStatement","src":"3644:23:18"}]},"functionSelector":"bcb143ef","id":3474,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3403,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3122:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3404,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3134:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3405,"kind":"modifierInvocation","modifierName":{"id":3402,"name":"notListed","nameLocations":["3112:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":3332,"src":"3112:9:18"},"nodeType":"ModifierInvocation","src":"3112:30:18"},{"arguments":[{"id":3407,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3159:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3408,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3171:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3409,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3180:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3410,"kind":"modifierInvocation","modifierName":{"id":3406,"name":"isOwner","nameLocations":["3151:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3392,"src":"3151:7:18"},"nodeType":"ModifierInvocation","src":"3151:33:18"}],"name":"listItem","nameLocation":"2975:8:18","nodeType":"FunctionDefinition","parameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"nftAddress","nameLocation":"3001:10:18","nodeType":"VariableDeclaration","scope":3474,"src":"2993:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3393,"name":"address","nodeType":"ElementaryTypeName","src":"2993:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3396,"mutability":"mutable","name":"tokenId","nameLocation":"3029:7:18","nodeType":"VariableDeclaration","scope":3474,"src":"3021:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"price","nameLocation":"3054:5:18","nodeType":"VariableDeclaration","scope":3474,"src":"3046:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3046:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"com","nameLocation":"3077:3:18","nodeType":"VariableDeclaration","scope":3474,"src":"3069:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2983:103:18"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[],"src":"3189:0:18"},"scope":3895,"src":"2966:708:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3506,"nodeType":"Block","src":"3854:110:18","statements":[{"expression":{"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3864:40:18","subExpression":{"components":[{"baseExpression":{"baseExpression":{"id":3492,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"3872:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3494,"indexExpression":{"id":3493,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"3883:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3872:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3496,"indexExpression":{"id":3495,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"3895:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3872:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}}],"id":3497,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3871:33:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3499,"nodeType":"ExpressionStatement","src":"3864:40:18"},{"eventCall":{"arguments":[{"id":3501,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"3932:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3502,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"3937:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3503,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"3949:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3500,"name":"ItemCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"3919:12:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3919:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3505,"nodeType":"EmitStatement","src":"3914:43:18"}]},"functionSelector":"4b3320e0","id":3507,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3483,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"3786:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3484,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"3798:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3485,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"3807:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3486,"kind":"modifierInvocation","modifierName":{"id":3482,"name":"isOwner","nameLocations":["3778:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3392,"src":"3778:7:18"},"nodeType":"ModifierInvocation","src":"3778:33:18"},{"arguments":[{"id":3488,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"3829:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"3841:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3490,"kind":"modifierInvocation","modifierName":{"id":3487,"name":"isListed","nameLocations":["3820:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"3820:8:18"},"nodeType":"ModifierInvocation","src":"3820:29:18"}],"name":"cancelListing","nameLocation":"3689:13:18","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"nftAddress","nameLocation":"3711:10:18","nodeType":"VariableDeclaration","scope":3507,"src":"3703:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3475,"name":"address","nodeType":"ElementaryTypeName","src":"3703:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"tokenId","nameLocation":"3731:7:18","nodeType":"VariableDeclaration","scope":3507,"src":"3723:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"3723:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"com","nameLocation":"3748:3:18","nodeType":"VariableDeclaration","scope":3507,"src":"3740:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3740:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3702:50:18"},"returnParameters":{"id":3491,"nodeType":"ParameterList","parameters":[],"src":"3854:0:18"},"scope":3895,"src":"3680:284:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3582,"nodeType":"Block","src":"4133:450:18","statements":[{"assignments":[3524],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"listedItem","nameLocation":"4158:10:18","nodeType":"VariableDeclaration","scope":3582,"src":"4143:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":3523,"nodeType":"UserDefinedTypeName","pathNode":{"id":3522,"name":"Listing","nameLocations":["4143:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3210,"src":"4143:7:18"},"referencedDeclaration":3210,"src":"4143:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":3530,"initialValue":{"baseExpression":{"baseExpression":{"id":3525,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"4171:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3527,"indexExpression":{"id":3526,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"4182:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4171:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3529,"indexExpression":{"id":3528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"4194:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4171:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4143:59:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4216:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:5:18","memberName":"value","nodeType":"MemberAccess","src":"4216:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3533,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"4229:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4240:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"4229:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3535,"name":"marketFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"4248:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4229:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4228:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4216:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3547,"nodeType":"IfStatement","src":"4212:130:18","trueBody":{"id":3546,"nodeType":"Block","src":"4260:82:18","statements":[{"errorCall":{"arguments":[{"id":3540,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"4293:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3541,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"4305:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3542,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"4314:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4325:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"4314:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3539,"name":"PriceNotMet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"4281:11:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4281:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3545,"nodeType":"RevertStatement","src":"4274:57:18"}]}},{"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3548,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"4351:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3551,"indexExpression":{"expression":{"id":3549,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"4362:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4373:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"4362:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4351:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3552,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4384:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4388:5:18","memberName":"value","nodeType":"MemberAccess","src":"4384:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4351:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3555,"nodeType":"ExpressionStatement","src":"4351:42:18"},{"expression":{"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4403:40:18","subExpression":{"components":[{"baseExpression":{"baseExpression":{"id":3556,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"4411:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3558,"indexExpression":{"id":3557,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"4422:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4411:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3560,"indexExpression":{"id":3559,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"4434:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4411:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}}],"id":3561,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4410:33:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"ExpressionStatement","src":"4403:40:18"},{"expression":{"arguments":[{"id":3568,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"4484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3569,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4492:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4496:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4500:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4496:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3565,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"4460:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3564,"name":"IZkNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"4453:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IZkNFT_$2866_$","typeString":"type(contract IZkNFT)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4472:11:18","memberName":"transferNFT","nodeType":"MemberAccess","referencedDeclaration":2830,"src":"4453:30:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address) external"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4453:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3573,"nodeType":"ExpressionStatement","src":"4453:54:18"},{"eventCall":{"arguments":[{"id":3575,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4533:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3576,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"4538:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3577,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"4550:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3578,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"4559:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4570:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"4559:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3574,"name":"ItemBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"4522:10:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4522:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3581,"nodeType":"EmitStatement","src":"4517:59:18"}]},"functionSelector":"f6b45c46","id":3583,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3516,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"4087:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3517,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"4099:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3518,"kind":"modifierInvocation","modifierName":{"id":3515,"name":"isListed","nameLocations":["4078:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"4078:8:18"},"nodeType":"ModifierInvocation","src":"4078:29:18"},{"id":3520,"kind":"modifierInvocation","modifierName":{"id":3519,"name":"nonReentrant","nameLocations":["4116:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"4116:12:18"},"nodeType":"ModifierInvocation","src":"4116:12:18"}],"name":"buyItem","nameLocation":"3979:7:18","nodeType":"FunctionDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"nftAddress","nameLocation":"3995:10:18","nodeType":"VariableDeclaration","scope":3583,"src":"3987:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3508,"name":"address","nodeType":"ElementaryTypeName","src":"3987:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"tokenId","nameLocation":"4015:7:18","nodeType":"VariableDeclaration","scope":3583,"src":"4007:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4007:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3513,"mutability":"mutable","name":"com","nameLocation":"4032:3:18","nodeType":"VariableDeclaration","scope":3583,"src":"4024:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"4024:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3986:50:18"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[],"src":"4133:0:18"},"scope":3895,"src":"3970:613:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3629,"nodeType":"Block","src":"4840:208:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"4854:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4866:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4854:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3612,"nodeType":"IfStatement","src":"4850:73:18","trueBody":{"id":3611,"nodeType":"Block","src":"4869:54:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3608,"name":"PriceMustBeAboveZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"4890:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3610,"nodeType":"RevertStatement","src":"4883:29:18"}]}},{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":3613,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"4932:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3616,"indexExpression":{"id":3614,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"4943:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4932:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3617,"indexExpression":{"id":3615,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"4955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4932:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"id":3618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4964:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3207,"src":"4932:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3619,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"4972:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4932:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"4932:48:18"},{"eventCall":{"arguments":[{"id":3623,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"5006:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3624,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"5011:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3625,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"5023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3626,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"5032:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3622,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4995:10:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4995:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3628,"nodeType":"EmitStatement","src":"4990:51:18"}]},"functionSelector":"d9964757","id":3630,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3594,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"4752:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"4764:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3596,"kind":"modifierInvocation","modifierName":{"id":3593,"name":"isListed","nameLocations":["4743:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3360,"src":"4743:8:18"},"nodeType":"ModifierInvocation","src":"4743:29:18"},{"id":3598,"kind":"modifierInvocation","modifierName":{"id":3597,"name":"nonReentrant","nameLocations":["4781:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"4781:12:18"},"nodeType":"ModifierInvocation","src":"4781:12:18"},{"arguments":[{"id":3600,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"4810:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"4822:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3602,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"4831:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3603,"kind":"modifierInvocation","modifierName":{"id":3599,"name":"isOwner","nameLocations":["4802:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3392,"src":"4802:7:18"},"nodeType":"ModifierInvocation","src":"4802:33:18"}],"name":"updateListing","nameLocation":"4598:13:18","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"nftAddress","nameLocation":"4629:10:18","nodeType":"VariableDeclaration","scope":3630,"src":"4621:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"4621:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3587,"mutability":"mutable","name":"tokenId","nameLocation":"4657:7:18","nodeType":"VariableDeclaration","scope":3630,"src":"4649:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"4649:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3589,"mutability":"mutable","name":"newPrice","nameLocation":"4682:8:18","nodeType":"VariableDeclaration","scope":3630,"src":"4674:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"4674:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"com","nameLocation":"4708:3:18","nodeType":"VariableDeclaration","scope":3630,"src":"4700:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"4700:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4611:106:18"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[],"src":"4840:0:18"},"scope":3895,"src":"4589:459:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2763],"body":{"id":3746,"nodeType":"Block","src":"5257:704:18","statements":[{"condition":{"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5271:26:18","subExpression":{"baseExpression":{"id":3652,"name":"nullifierHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"5272:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3654,"indexExpression":{"id":3653,"name":"nullHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"5288:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5272:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"nodeType":"IfStatement","src":"5268:84:18","trueBody":{"id":3659,"nodeType":"Block","src":"5298:54:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3656,"name":"NullifierAlreadyUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"5319:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3658,"nodeType":"RevertStatement","src":"5312:29:18"}]}},{"assignments":[3662],"declarations":[{"constant":false,"id":3662,"mutability":"mutable","name":"_addr","nameLocation":"5370:5:18","nodeType":"VariableDeclaration","scope":3746,"src":"5362:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5362:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":3667,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5394:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5398:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5394:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5386:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3665,"name":"uint160","nodeType":"ElementaryTypeName","src":"5386:7:18","typeDescriptions":{}}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5386:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5378:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"5378:7:18","typeDescriptions":{}}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5378:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5362:44:18"},{"assignments":[3673,null],"declarations":[{"constant":false,"id":3673,"mutability":"mutable","name":"verifyOK","nameLocation":"5423:8:18","nodeType":"VariableDeclaration","scope":3746,"src":"5418:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3672,"name":"bool","nodeType":"ElementaryTypeName","src":"5418:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3689,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":3678,"name":"IVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"5466:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVerifier_$3157_$","typeString":"type(contract IVerifier)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5476:11:18","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":3156,"src":"5466:21:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_uint256_$2_calldata_ptr_$returns$_t_bool_$","typeString":"function IVerifier.verifyProof(uint256[2] calldata,uint256[2] calldata[2] calldata,uint256[2] calldata,uint256[2] calldata) returns (bool)"}},{"components":[{"id":3680,"name":"_pA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"5490:3:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},{"id":3681,"name":"_pB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"5495:3:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2] calldata[2] calldata"}},{"id":3682,"name":"_pC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"5500:3:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}},{"components":[{"id":3683,"name":"nullHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"5506:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3684,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"5516:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3685,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5505:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"id":3686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:34:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"tuple(uint256[2] calldata,uint256[2] calldata[2] calldata,uint256[2] calldata,uint256[2] memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_uint256_$2_calldata_ptr_$returns$_t_bool_$","typeString":"function IVerifier.verifyProof(uint256[2] calldata,uint256[2] calldata[2] calldata,uint256[2] calldata,uint256[2] calldata) returns (bool)"},{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"tuple(uint256[2] calldata,uint256[2] calldata[2] calldata,uint256[2] calldata,uint256[2] memory)"}],"expression":{"id":3676,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5451:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5455:10:18","memberName":"encodeCall","nodeType":"MemberAccess","src":"5451:14:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3674,"name":"verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"5437:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5446:4:18","memberName":"call","nodeType":"MemberAccess","src":"5437:13:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5437:88:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5417:108:18"},{"condition":{"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5539:9:18","subExpression":{"id":3690,"name":"verifyOK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"5540:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"nodeType":"IfStatement","src":"5536:59:18","trueBody":{"id":3695,"nodeType":"Block","src":"5549:46:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3692,"name":"InvalidProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"5570:12:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3694,"nodeType":"RevertStatement","src":"5563:21:18"}]}},{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3697,"name":"nullifierHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"5605:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3699,"indexExpression":{"id":3698,"name":"nullHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"5621:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5605:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5633:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5605:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3702,"nodeType":"ExpressionStatement","src":"5605:32:18"},{"assignments":[3704],"declarations":[{"constant":false,"id":3704,"mutability":"mutable","name":"proceeds","nameLocation":"5656:8:18","nodeType":"VariableDeclaration","scope":3746,"src":"5648:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3708,"initialValue":{"baseExpression":{"id":3705,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5667:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3707,"indexExpression":{"id":3706,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"5678:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5667:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5648:34:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5696:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5708:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5696:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3716,"nodeType":"IfStatement","src":"5692:63:18","trueBody":{"id":3715,"nodeType":"Block","src":"5711:44:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3712,"name":"NoProceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"5732:10:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5732:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3714,"nodeType":"RevertStatement","src":"5725:19:18"}]}},{"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3717,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5764:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3719,"indexExpression":{"id":3718,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"5775:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5764:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5764:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3722,"nodeType":"ExpressionStatement","src":"5764:19:18"},{"assignments":[3724,null],"declarations":[{"constant":false,"id":3724,"mutability":"mutable","name":"success","nameLocation":"5799:7:18","nodeType":"VariableDeclaration","scope":3746,"src":"5794:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"5794:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3738,"initialValue":{"arguments":[{"hexValue":"","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5870:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5820:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5824:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5820:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5812:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3725,"name":"address","nodeType":"ElementaryTypeName","src":"5812:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5812:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5832:4:18","memberName":"call","nodeType":"MemberAccess","src":"5812:24:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5845:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3732,"name":"creationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"5856:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5845:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5844:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5812:57:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5812:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5793:80:18"},{"condition":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5895:8:18","subExpression":{"id":3739,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"5896:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3745,"nodeType":"IfStatement","src":"5892:63:18","trueBody":{"id":3744,"nodeType":"Block","src":"5904:51:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3741,"name":"TransactionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"5925:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3743,"nodeType":"RevertStatement","src":"5918:26:18"}]}}]},"functionSelector":"6be4a002","id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawProceeds","nameLocation":"5063:16:18","nodeType":"FunctionDefinition","overrides":{"id":3650,"nodeType":"OverrideSpecifier","overrides":[],"src":"5234:8:18"},"parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"_pA","nameLocation":"5106:3:18","nodeType":"VariableDeclaration","scope":3747,"src":"5089:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3631,"name":"uint","nodeType":"ElementaryTypeName","src":"5089:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3633,"length":{"hexValue":"32","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5094:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"5089:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"_pB","nameLocation":"5139:3:18","nodeType":"VariableDeclaration","scope":3747,"src":"5119:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":3635,"name":"uint","nodeType":"ElementaryTypeName","src":"5119:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3637,"length":{"hexValue":"32","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5124:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"5119:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":3639,"length":{"hexValue":"32","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5127:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"5119:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"_pC","nameLocation":"5170:3:18","nodeType":"VariableDeclaration","scope":3747,"src":"5153:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3641,"name":"uint","nodeType":"ElementaryTypeName","src":"5153:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3643,"length":{"hexValue":"32","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5158:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"5153:7:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"nullHash","nameLocation":"5189:8:18","nodeType":"VariableDeclaration","scope":3747,"src":"5184:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint","nodeType":"ElementaryTypeName","src":"5184:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"com","nameLocation":"5215:3:18","nodeType":"VariableDeclaration","scope":3747,"src":"5207:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5079:145:18"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[],"src":"5257:0:18"},"scope":3895,"src":"5054:907:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3765,"nodeType":"Block","src":"6012:117:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3752,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6025:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6029:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6025:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3754,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6039:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6025:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3760,"nodeType":"IfStatement","src":"6022:73:18","trueBody":{"id":3759,"nodeType":"Block","src":"6049:46:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3756,"name":"NotAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6070:12:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6070:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3758,"nodeType":"RevertStatement","src":"6063:21:18"}]}},{"expression":{"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3761,"name":"creationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"6104:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3762,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"6118:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6104:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3764,"nodeType":"ExpressionStatement","src":"6104:18:18"}]},"functionSelector":"b7d86225","id":3766,"implemented":true,"kind":"function","modifiers":[],"name":"setCreationFee","nameLocation":"5976:14:18","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"_fee","nameLocation":"5999:4:18","nodeType":"VariableDeclaration","scope":3766,"src":"5991:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"5991:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:14:18"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[],"src":"6012:0:18"},"scope":3895,"src":"5967:162:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3784,"nodeType":"Block","src":"6177:115:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6190:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6194:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6190:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3773,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6204:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6190:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3779,"nodeType":"IfStatement","src":"6187:73:18","trueBody":{"id":3778,"nodeType":"Block","src":"6214:46:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3775,"name":"NotAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6235:12:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6235:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3777,"nodeType":"RevertStatement","src":"6228:21:18"}]}},{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3780,"name":"marketFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"6269:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3781,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"6281:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6269:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3783,"nodeType":"ExpressionStatement","src":"6269:16:18"}]},"functionSelector":"fa7da19d","id":3785,"implemented":true,"kind":"function","modifiers":[],"name":"setBuyerFee","nameLocation":"6144:11:18","nodeType":"FunctionDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"_fee","nameLocation":"6164:4:18","nodeType":"VariableDeclaration","scope":3785,"src":"6156:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"6156:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6155:14:18"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[],"src":"6177:0:18"},"scope":3895,"src":"6135:157:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3803,"nodeType":"Block","src":"6345:119:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6358:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6362:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6358:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3792,"name":"authority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6372:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6358:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3798,"nodeType":"IfStatement","src":"6355:73:18","trueBody":{"id":3797,"nodeType":"Block","src":"6382:46:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3794,"name":"NotAuthority","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6403:12:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6403:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3796,"nodeType":"RevertStatement","src":"6396:21:18"}]}},{"expression":{"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3799,"name":"conversionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"6437:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3800,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"6453:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6437:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3802,"nodeType":"ExpressionStatement","src":"6437:20:18"}]},"functionSelector":"c88b7c8e","id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"setConversionFee","nameLocation":"6307:16:18","nodeType":"FunctionDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"_fee","nameLocation":"6332:4:18","nodeType":"VariableDeclaration","scope":3804,"src":"6324:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6323:14:18"},"returnParameters":{"id":3789,"nodeType":"ParameterList","parameters":[],"src":"6345:0:18"},"scope":3895,"src":"6298:166:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3864,"nodeType":"Block","src":"6572:419:18","statements":[{"assignments":[3814,null],"declarations":[{"constant":false,"id":3814,"mutability":"mutable","name":"success","nameLocation":"6589:7:18","nodeType":"VariableDeclaration","scope":3864,"src":"6584:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3813,"name":"bool","nodeType":"ElementaryTypeName","src":"6584:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3825,"initialValue":{"arguments":[{"hexValue":"","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6649:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3817,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6610:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6614:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6610:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6602:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3815,"name":"address","nodeType":"ElementaryTypeName","src":"6602:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6602:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6622:4:18","memberName":"call","nodeType":"MemberAccess","src":"6602:24:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3821,"name":"conversionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"6634:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6602:46:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6602:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6583:69:18"},{"condition":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6665:8:18","subExpression":{"id":3826,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"6666:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"6662:63:18","trueBody":{"id":3831,"nodeType":"Block","src":"6674:51:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3828,"name":"TransactionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"6695:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6695:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"RevertStatement","src":"6688:26:18"}]}},{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"tokenURI","nameLocation":"6748:8:18","nodeType":"VariableDeclaration","scope":3864,"src":"6734:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3833,"name":"string","nodeType":"ElementaryTypeName","src":"6734:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3841,"initialValue":{"arguments":[{"id":3839,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"6792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3836,"name":"zkNftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"6766:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3835,"name":"IZkNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"6759:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IZkNFT_$2866_$","typeString":"type(contract IZkNFT)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6759:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:11:18","memberName":"getTokenURI","nodeType":"MemberAccess","referencedDeclaration":2848,"src":"6759:32:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view external returns (string memory)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6759:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6734:66:18"},{"expression":{"arguments":[{"id":3846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"6843:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6851:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6855:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6851:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3843,"name":"zkNftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"6817:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3842,"name":"IZkNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"6810:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IZkNFT_$2866_$","typeString":"type(contract IZkNFT)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6810:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IZkNFT_$2866","typeString":"contract IZkNFT"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6831:11:18","memberName":"deleteZkNft","nodeType":"MemberAccess","referencedDeclaration":2865,"src":"6810:32:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6810:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3850,"nodeType":"ExpressionStatement","src":"6810:52:18"},{"expression":{"arguments":[{"id":3855,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"6909:8:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"arguments":[{"id":3852,"name":"convertableNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"6885:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3851,"name":"INewBasicNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"6872:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INewBasicNFT_$2772_$","typeString":"type(contract INewBasicNFT)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6872:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_INewBasicNFT_$2772","typeString":"contract INewBasicNFT"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6901:7:18","memberName":"mintNft","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"6872:36:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) external"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6872:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3857,"nodeType":"ExpressionStatement","src":"6872:46:18"},{"eventCall":{"arguments":[{"id":3859,"name":"zkNftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"6948:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"6961:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3861,"name":"convertableNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"6969:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3858,"name":"ItemConverted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6934:13:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6934:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3863,"nodeType":"EmitStatement","src":"6929:55:18"}]},"functionSelector":"fc5a8444","id":3865,"implemented":true,"kind":"function","modifiers":[],"name":"convertToERC721","nameLocation":"6479:15:18","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"zkNftAddress","nameLocation":"6503:12:18","nodeType":"VariableDeclaration","scope":3865,"src":"6495:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"6495:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"convertableNft","nameLocation":"6525:14:18","nodeType":"VariableDeclaration","scope":3865,"src":"6517:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"6517:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"tokenId","nameLocation":"6548:7:18","nodeType":"VariableDeclaration","scope":3865,"src":"6540:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"6540:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6494:62:18"},"returnParameters":{"id":3812,"nodeType":"ParameterList","parameters":[],"src":"6572:0:18"},"scope":3895,"src":"6470:521:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3881,"nodeType":"Block","src":"7121:55:18","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3875,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7138:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3877,"indexExpression":{"id":3876,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"7149:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7138:22:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3210_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3879,"indexExpression":{"id":3878,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"7161:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7138:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"functionReturnParameters":3874,"id":3880,"nodeType":"Return","src":"7131:38:18"}]},"functionSelector":"88700d1c","id":3882,"implemented":true,"kind":"function","modifiers":[],"name":"getListing","nameLocation":"7006:10:18","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"nftAddress","nameLocation":"7025:10:18","nodeType":"VariableDeclaration","scope":3882,"src":"7017:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"7017:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"tokenId","nameLocation":"7045:7:18","nodeType":"VariableDeclaration","scope":3882,"src":"7037:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"7037:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7016:37:18"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3882,"src":"7101:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":3872,"nodeType":"UserDefinedTypeName","pathNode":{"id":3871,"name":"Listing","nameLocations":["7101:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3210,"src":"7101:7:18"},"referencedDeclaration":3210,"src":"7101:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3210_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"src":"7100:16:18"},"scope":3895,"src":"6997:179:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3893,"nodeType":"Block","src":"7254:45:18","statements":[{"expression":{"baseExpression":{"id":3889,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"7271:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3891,"indexExpression":{"id":3890,"name":"sellerCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"7282:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7271:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3888,"id":3892,"nodeType":"Return","src":"7264:28:18"}]},"functionSelector":"81b1fc7a","id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"getProceeds","nameLocation":"7191:11:18","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"sellerCom","nameLocation":"7211:9:18","nodeType":"VariableDeclaration","scope":3894,"src":"7203:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"7203:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7202:19:18"},"returnParameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"7245:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3886,"name":"uint256","nodeType":"ElementaryTypeName","src":"7245:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7244:9:18"},"scope":3895,"src":"7182:117:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3896,"src":"403:6898:18","usedErrors":[3169,3175,3181,3187,3189,3191,3193,3195,3197,3199,3201,3203,3205]}],"src":"32:7269:18"},"id":18},"contracts/verifier.sol":{"ast":{"absolutePath":"contracts/verifier.sol","exportedSymbols":{"Groth16Verifier":[3998]},"id":3999,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3897,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"798:31:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Groth16Verifier","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3998,"linearizedBaseContracts":[3998],"name":"Groth16Verifier","nameLocation":"840:15:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3900,"mutability":"constant","name":"r","nameLocation":"904:1:19","nodeType":"VariableDeclaration","scope":3998,"src":"887:101:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838353438333634343030343136303334333433363938323034313836353735383038343935363137","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"911:77:19","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088548364400416034343698204186575808495617_by_1","typeString":"int_const 2188...(69 digits omitted)...5617"},"value":"21888242871839275222246405745257275088548364400416034343698204186575808495617"},"visibility":"internal"},{"constant":true,"id":3903,"mutability":"constant","name":"q","nameLocation":"1034:1:19","nodeType":"VariableDeclaration","scope":3998,"src":"1017:100:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3231383838323432383731383339323735323232323436343035373435323537323735303838363936333131313537323937383233363632363839303337383934363435323236323038353833","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1040:77:19","typeDescriptions":{"typeIdentifier":"t_rational_21888242871839275222246405745257275088696311157297823662689037894645226208583_by_1","typeString":"int_const 2188...(69 digits omitted)...8583"},"value":"21888242871839275222246405745257275088696311157297823662689037894645226208583"},"visibility":"internal"},{"constant":true,"id":3906,"mutability":"constant","name":"alphax","nameLocation":"1170:6:19","nodeType":"VariableDeclaration","scope":3998,"src":"1153:103:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37363230323733393035313333343535313233393233313838363939353031313230353733363838303539343037353433343038303933323231383134393331373836363932333535313631","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1180:76:19","typeDescriptions":{"typeIdentifier":"t_rational_7620273905133455123923188699501120573688059407543408093221814931786692355161_by_1","typeString":"int_const 7620...(68 digits omitted)...5161"},"value":"7620273905133455123923188699501120573688059407543408093221814931786692355161"},"visibility":"internal"},{"constant":true,"id":3909,"mutability":"constant","name":"alphay","nameLocation":"1279:6:19","nodeType":"VariableDeclaration","scope":3998,"src":"1262:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1262:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3133383537343431323235383735303637363031383938343734373630373234313032353036303939303132353530353335363532383235353834313439333132363932383834363333303239","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1289:77:19","typeDescriptions":{"typeIdentifier":"t_rational_13857441225875067601898474760724102506099012550535652825584149312692884633029_by_1","typeString":"int_const 1385...(69 digits omitted)...3029"},"value":"13857441225875067601898474760724102506099012550535652825584149312692884633029"},"visibility":"internal"},{"constant":true,"id":3912,"mutability":"constant","name":"betax1","nameLocation":"1389:6:19","nodeType":"VariableDeclaration","scope":3998,"src":"1372:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230383937373133333235373931393137373439313532393739353932363038303031383236333737363531343938323236323632383638323138393632303932393537363935343532343939","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1399:77:19","typeDescriptions":{"typeIdentifier":"t_rational_20897713325791917749152979592608001826377651498226262868218962092957695452499_by_1","typeString":"int_const 2089...(69 digits omitted)...2499"},"value":"20897713325791917749152979592608001826377651498226262868218962092957695452499"},"visibility":"internal"},{"constant":true,"id":3915,"mutability":"constant","name":"betax2","nameLocation":"1499:6:19","nodeType":"VariableDeclaration","scope":3998,"src":"1482:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1482:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3139373732323938353433303830333930363936363735343936323630343633333038393732323939333831323530303436313038353338323537393630363035333839303838353632373837","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1509:77:19","typeDescriptions":{"typeIdentifier":"t_rational_19772298543080390696675496260463308972299381250046108538257960605389088562787_by_1","typeString":"int_const 1977...(69 digits omitted)...2787"},"value":"19772298543080390696675496260463308972299381250046108538257960605389088562787"},"visibility":"internal"},{"constant":true,"id":3918,"mutability":"constant","name":"betay1","nameLocation":"1609:6:19","nodeType":"VariableDeclaration","scope":3998,"src":"1592:103:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37313031323032353036333231373735393637343437323132373338393330313539323432353839303638303336383632393531363037343339393935353838343835333838313232303333","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1619:76:19","typeDescriptions":{"typeIdentifier":"t_rational_7101202506321775967447212738930159242589068036862951607439995588485388122033_by_1","typeString":"int_const 7101...(68 digits omitted)...2033"},"value":"7101202506321775967447212738930159242589068036862951607439995588485388122033"},"visibility":"internal"},{"constant":true,"id":3921,"mutability":"constant","name":"betay2","nameLocation":"1718:6:19","nodeType":"VariableDeclaration","scope":3998,"src":"1701:103:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"1701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"36353935383538343933323838333737393936353933323236353732373138383133393038373734313730363236303034343337373435343331393935343636393838363233363238383230","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1728:76:19","typeDescriptions":{"typeIdentifier":"t_rational_6595858493288377996593226572718813908774170626004437745431995466988623628820_by_1","typeString":"int_const 6595...(68 digits omitted)...8820"},"value":"6595858493288377996593226572718813908774170626004437745431995466988623628820"},"visibility":"internal"},{"constant":true,"id":3924,"mutability":"constant","name":"gammax1","nameLocation":"1827:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"1810:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3131353539373332303332393836333837313037393931303034303231333932323835373833393235383132383631383231313932353330393137343033313531343532333931383035363334","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1837:77:19","typeDescriptions":{"typeIdentifier":"t_rational_11559732032986387107991004021392285783925812861821192530917403151452391805634_by_1","typeString":"int_const 1155...(69 digits omitted)...5634"},"value":"11559732032986387107991004021392285783925812861821192530917403151452391805634"},"visibility":"internal"},{"constant":true,"id":3927,"mutability":"constant","name":"gammax2","nameLocation":"1937:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"1920:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130383537303436393939303233303537313335393434353730373632323332383239343831333730373536333539353738353138303836393930353139393933323835363535383532373831","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1947:77:19","typeDescriptions":{"typeIdentifier":"t_rational_10857046999023057135944570762232829481370756359578518086990519993285655852781_by_1","typeString":"int_const 1085...(69 digits omitted)...2781"},"value":"10857046999023057135944570762232829481370756359578518086990519993285655852781"},"visibility":"internal"},{"constant":true,"id":3930,"mutability":"constant","name":"gammay1","nameLocation":"2047:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"2030:103:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34303832333637383735383633343333363831333332323033343033313435343335353638333136383531333237353933343031323038313035373431303736323134313230303933353331","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2057:76:19","typeDescriptions":{"typeIdentifier":"t_rational_4082367875863433681332203403145435568316851327593401208105741076214120093531_by_1","typeString":"int_const 4082...(68 digits omitted)...3531"},"value":"4082367875863433681332203403145435568316851327593401208105741076214120093531"},"visibility":"internal"},{"constant":true,"id":3933,"mutability":"constant","name":"gammay2","nameLocation":"2156:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"2139:103:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38343935363533393233313233343331343137363034393733323437343839323732343338343138313930353837323633363030313438373730323830363439333036393538313031393330","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2166:76:19","typeDescriptions":{"typeIdentifier":"t_rational_8495653923123431417604973247489272438418190587263600148770280649306958101930_by_1","typeString":"int_const 8495...(68 digits omitted)...1930"},"value":"8495653923123431417604973247489272438418190587263600148770280649306958101930"},"visibility":"internal"},{"constant":true,"id":3936,"mutability":"constant","name":"deltax1","nameLocation":"2265:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"2248:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230353538323730313135333937393336333639383037363939353932373238393431363736353935383331363430323638343833303537373538323434393837323734333633323130313430","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2275:77:19","typeDescriptions":{"typeIdentifier":"t_rational_20558270115397936369807699592728941676595831640268483057758244987274363210140_by_1","typeString":"int_const 2055...(69 digits omitted)...0140"},"value":"20558270115397936369807699592728941676595831640268483057758244987274363210140"},"visibility":"internal"},{"constant":true,"id":3939,"mutability":"constant","name":"deltax2","nameLocation":"2375:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"2358:103:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2358:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33363136353339373339393031383135323131313239343839343535323237343931393430313838303731333136373938363135303630383333333936383330303030333039363238303338","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2385:76:19","typeDescriptions":{"typeIdentifier":"t_rational_3616539739901815211129489455227491940188071316798615060833396830000309628038_by_1","typeString":"int_const 3616...(68 digits omitted)...8038"},"value":"3616539739901815211129489455227491940188071316798615060833396830000309628038"},"visibility":"internal"},{"constant":true,"id":3942,"mutability":"constant","name":"deltay1","nameLocation":"2484:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"2467:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2467:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135383037323332393237313938373733383335303839363039373733353538353238313137303434353536383731363434383636343636303539303332313631333032333038383630323731","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2494:77:19","typeDescriptions":{"typeIdentifier":"t_rational_15807232927198773835089609773558528117044556871644866466059032161302308860271_by_1","typeString":"int_const 1580...(69 digits omitted)...0271"},"value":"15807232927198773835089609773558528117044556871644866466059032161302308860271"},"visibility":"internal"},{"constant":true,"id":3945,"mutability":"constant","name":"deltay2","nameLocation":"2594:7:19","nodeType":"VariableDeclaration","scope":3998,"src":"2577:104:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3137383131373132373833373936333434313137363835383639393035323938333436363831323435333734323433383738313732393134303635343032313238393337343930313833353735","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2604:77:19","typeDescriptions":{"typeIdentifier":"t_rational_17811712783796344117685869905298346681245374243878172914065402128937490183575_by_1","typeString":"int_const 1781...(69 digits omitted)...3575"},"value":"17811712783796344117685869905298346681245374243878172914065402128937490183575"},"visibility":"internal"},{"constant":true,"id":3948,"mutability":"constant","name":"IC0x","nameLocation":"2710:4:19","nodeType":"VariableDeclaration","scope":3998,"src":"2693:101:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3138363833323036333936313038323937323831373638303236313232373132303533313536353537303537303233383437333034373532303031303835393836343334383531323331353633","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2717:77:19","typeDescriptions":{"typeIdentifier":"t_rational_18683206396108297281768026122712053156557057023847304752001085986434851231563_by_1","typeString":"int_const 1868...(69 digits omitted)...1563"},"value":"18683206396108297281768026122712053156557057023847304752001085986434851231563"},"visibility":"internal"},{"constant":true,"id":3951,"mutability":"constant","name":"IC0y","nameLocation":"2817:4:19","nodeType":"VariableDeclaration","scope":3998,"src":"2800:101:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2800:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135323932383931333538363930333133363235353234343538323836373130373337363431393934343731313538333738363534363038303338373330363837363239313338343539313134","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2824:77:19","typeDescriptions":{"typeIdentifier":"t_rational_15292891358690313625524458286710737641994471158378654608038730687629138459114_by_1","typeString":"int_const 1529...(69 digits omitted)...9114"},"value":"15292891358690313625524458286710737641994471158378654608038730687629138459114"},"visibility":"internal"},{"constant":true,"id":3954,"mutability":"constant","name":"IC1x","nameLocation":"2929:4:19","nodeType":"VariableDeclaration","scope":3998,"src":"2912:101:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230393238333733313132313839323931323432313736393334343332323336323237383930373635373032393436323132363134323432373134393239373731323138333735353439313933","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:77:19","typeDescriptions":{"typeIdentifier":"t_rational_20928373112189291242176934432236227890765702946212614242714929771218375549193_by_1","typeString":"int_const 2092...(69 digits omitted)...9193"},"value":"20928373112189291242176934432236227890765702946212614242714929771218375549193"},"visibility":"internal"},{"constant":true,"id":3957,"mutability":"constant","name":"IC1y","nameLocation":"3036:4:19","nodeType":"VariableDeclaration","scope":3998,"src":"3019:101:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3137323632363932363631393630303839393236383338313037353630363836363235333632313639353339303032383736393934323638313830313034313536313832323137373732303839","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3043:77:19","typeDescriptions":{"typeIdentifier":"t_rational_17262692661960089926838107560686625362169539002876994268180104156182217772089_by_1","typeString":"int_const 1726...(69 digits omitted)...2089"},"value":"17262692661960089926838107560686625362169539002876994268180104156182217772089"},"visibility":"internal"},{"constant":true,"id":3960,"mutability":"constant","name":"IC2x","nameLocation":"3148:4:19","nodeType":"VariableDeclaration","scope":3998,"src":"3131:100:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33373833303434343035323739323939323835363430363830303535373836393134333131303935353738393638313933353333393836313533343635333836373933353539303037373338","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3155:76:19","typeDescriptions":{"typeIdentifier":"t_rational_3783044405279299285640680055786914311095578968193533986153465386793559007738_by_1","typeString":"int_const 3783...(68 digits omitted)...7738"},"value":"3783044405279299285640680055786914311095578968193533986153465386793559007738"},"visibility":"internal"},{"constant":true,"id":3963,"mutability":"constant","name":"IC2y","nameLocation":"3254:4:19","nodeType":"VariableDeclaration","scope":3998,"src":"3237:101:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"3237:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3139343334373438343231363939353238323139353535383732393539313439303336373435373638353132303338373631373034383936383534303732323439313136383434353034363032","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3261:77:19","typeDescriptions":{"typeIdentifier":"t_rational_19434748421699528219555872959149036745768512038761704896854072249116844504602_by_1","typeString":"int_const 1943...(69 digits omitted)...4602"},"value":"19434748421699528219555872959149036745768512038761704896854072249116844504602"},"visibility":"internal"},{"constant":true,"id":3966,"mutability":"constant","name":"pVk","nameLocation":"3386:3:19","nodeType":"VariableDeclaration","scope":3998,"src":"3370:23:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3964,"name":"uint16","nodeType":"ElementaryTypeName","src":"3370:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"30","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3392:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":3969,"mutability":"constant","name":"pPairing","nameLocation":"3415:8:19","nodeType":"VariableDeclaration","scope":3998,"src":"3399:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3967,"name":"uint16","nodeType":"ElementaryTypeName","src":"3399:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313238","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3426:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"visibility":"internal"},{"constant":true,"id":3972,"mutability":"constant","name":"pLastMem","nameLocation":"3452:8:19","nodeType":"VariableDeclaration","scope":3998,"src":"3436:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3970,"name":"uint16","nodeType":"ElementaryTypeName","src":"3436:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"383936","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3463:3:19","typeDescriptions":{"typeIdentifier":"t_rational_896_by_1","typeString":"int_const 896"},"value":"896"},"visibility":"internal"},{"body":{"id":3996,"nodeType":"Block","src":"3620:3903:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3639:3877:19","statements":[{"body":{"nodeType":"YulBlock","src":"3676:140:19","statements":[{"body":{"nodeType":"YulBlock","src":"3714:88:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3743:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3746:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3736:6:19"},"nodeType":"YulFunctionCall","src":"3736:12:19"},"nodeType":"YulExpressionStatement","src":"3736:12:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3776:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3779:4:19","type":"","value":"0x20"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"3769:6:19"},"nodeType":"YulFunctionCall","src":"3769:15:19"},"nodeType":"YulExpressionStatement","src":"3769:15:19"}]},"condition":{"arguments":[{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"3707:1:19"},{"name":"r","nodeType":"YulIdentifier","src":"3710:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3704:2:19"},"nodeType":"YulFunctionCall","src":"3704:8:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3697:6:19"},"nodeType":"YulFunctionCall","src":"3697:16:19"},"nodeType":"YulIf","src":"3694:108:19"}]},"name":"checkField","nodeType":"YulFunctionDefinition","parameters":[{"name":"v","nodeType":"YulTypedName","src":"3673:1:19","type":""}],"src":"3653:163:19"},{"body":{"nodeType":"YulBlock","src":"3953:705:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3971:11:19","variables":[{"name":"success","nodeType":"YulTypedName","src":"3975:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3999:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4016:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4010:5:19"},"nodeType":"YulFunctionCall","src":"4010:11:19"},"variables":[{"name":"mIn","nodeType":"YulTypedName","src":"4003:3:19","type":""}]},{"expression":{"arguments":[{"name":"mIn","nodeType":"YulIdentifier","src":"4045:3:19"},{"name":"x","nodeType":"YulIdentifier","src":"4050:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4038:6:19"},"nodeType":"YulFunctionCall","src":"4038:14:19"},"nodeType":"YulExpressionStatement","src":"4038:14:19"},{"expression":{"arguments":[{"arguments":[{"name":"mIn","nodeType":"YulIdentifier","src":"4080:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4076:3:19"},"nodeType":"YulFunctionCall","src":"4076:12:19"},{"name":"y","nodeType":"YulIdentifier","src":"4090:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4069:6:19"},"nodeType":"YulFunctionCall","src":"4069:23:19"},"nodeType":"YulExpressionStatement","src":"4069:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"mIn","nodeType":"YulIdentifier","src":"4120:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4116:3:19"},"nodeType":"YulFunctionCall","src":"4116:12:19"},{"name":"s","nodeType":"YulIdentifier","src":"4130:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4109:6:19"},"nodeType":"YulFunctionCall","src":"4109:23:19"},"nodeType":"YulExpressionStatement","src":"4109:23:19"},{"nodeType":"YulAssignment","src":"4150:60:19","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4176:3:19"},"nodeType":"YulFunctionCall","src":"4176:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4183:4:19","type":"","value":"2000"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4172:3:19"},"nodeType":"YulFunctionCall","src":"4172:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"4190:1:19","type":"","value":"7"},{"name":"mIn","nodeType":"YulIdentifier","src":"4193:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4198:2:19","type":"","value":"96"},{"name":"mIn","nodeType":"YulIdentifier","src":"4202:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4207:2:19","type":"","value":"64"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4161:10:19"},"nodeType":"YulFunctionCall","src":"4161:49:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4150:7:19"}]},{"body":{"nodeType":"YulBlock","src":"4247:88:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4276:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4269:6:19"},"nodeType":"YulFunctionCall","src":"4269:12:19"},"nodeType":"YulExpressionStatement","src":"4269:12:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4312:4:19","type":"","value":"0x20"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"4302:6:19"},"nodeType":"YulFunctionCall","src":"4302:15:19"},"nodeType":"YulExpressionStatement","src":"4302:15:19"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"4238:7:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4231:6:19"},"nodeType":"YulFunctionCall","src":"4231:15:19"},"nodeType":"YulIf","src":"4228:107:19"},{"expression":{"arguments":[{"arguments":[{"name":"mIn","nodeType":"YulIdentifier","src":"4364:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4369:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4360:3:19"},"nodeType":"YulFunctionCall","src":"4360:12:19"},{"arguments":[{"name":"pR","nodeType":"YulIdentifier","src":"4380:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4374:5:19"},"nodeType":"YulFunctionCall","src":"4374:9:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4353:6:19"},"nodeType":"YulFunctionCall","src":"4353:31:19"},"nodeType":"YulExpressionStatement","src":"4353:31:19"},{"expression":{"arguments":[{"arguments":[{"name":"mIn","nodeType":"YulIdentifier","src":"4412:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4417:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4408:3:19"},"nodeType":"YulFunctionCall","src":"4408:12:19"},{"arguments":[{"arguments":[{"name":"pR","nodeType":"YulIdentifier","src":"4432:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"4436:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:19"},"nodeType":"YulFunctionCall","src":"4428:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4422:5:19"},"nodeType":"YulFunctionCall","src":"4422:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4401:6:19"},"nodeType":"YulFunctionCall","src":"4401:40:19"},"nodeType":"YulExpressionStatement","src":"4401:40:19"},{"nodeType":"YulAssignment","src":"4459:60:19","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4485:3:19"},"nodeType":"YulFunctionCall","src":"4485:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4492:4:19","type":"","value":"2000"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4481:3:19"},"nodeType":"YulFunctionCall","src":"4481:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"4499:1:19","type":"","value":"6"},{"name":"mIn","nodeType":"YulIdentifier","src":"4502:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4507:3:19","type":"","value":"128"},{"name":"pR","nodeType":"YulIdentifier","src":"4512:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"4516:2:19","type":"","value":"64"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4470:10:19"},"nodeType":"YulFunctionCall","src":"4470:49:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4459:7:19"}]},{"body":{"nodeType":"YulBlock","src":"4556:88:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4585:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4588:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4578:6:19"},"nodeType":"YulFunctionCall","src":"4578:12:19"},"nodeType":"YulExpressionStatement","src":"4578:12:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4618:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4621:4:19","type":"","value":"0x20"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"4611:6:19"},"nodeType":"YulFunctionCall","src":"4611:15:19"},"nodeType":"YulExpressionStatement","src":"4611:15:19"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"4547:7:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4540:6:19"},"nodeType":"YulFunctionCall","src":"4540:15:19"},"nodeType":"YulIf","src":"4537:107:19"}]},"name":"g1_mulAccC","nodeType":"YulFunctionDefinition","parameters":[{"name":"pR","nodeType":"YulTypedName","src":"3940:2:19","type":""},{"name":"x","nodeType":"YulTypedName","src":"3944:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"3947:1:19","type":""},{"name":"s","nodeType":"YulTypedName","src":"3950:1:19","type":""}],"src":"3920:738:19"},{"body":{"nodeType":"YulBlock","src":"4732:2234:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4750:36:19","value":{"arguments":[{"name":"pMem","nodeType":"YulIdentifier","src":"4771:4:19"},{"name":"pPairing","nodeType":"YulIdentifier","src":"4777:8:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4767:3:19"},"nodeType":"YulFunctionCall","src":"4767:19:19"},"variables":[{"name":"_pPairing","nodeType":"YulTypedName","src":"4754:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4803:26:19","value":{"arguments":[{"name":"pMem","nodeType":"YulIdentifier","src":"4819:4:19"},{"name":"pVk","nodeType":"YulIdentifier","src":"4825:3:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:19"},"nodeType":"YulFunctionCall","src":"4815:14:19"},"variables":[{"name":"_pVk","nodeType":"YulTypedName","src":"4807:4:19","type":""}]},{"expression":{"arguments":[{"name":"_pVk","nodeType":"YulIdentifier","src":"4854:4:19"},{"name":"IC0x","nodeType":"YulIdentifier","src":"4860:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4847:6:19"},"nodeType":"YulFunctionCall","src":"4847:18:19"},"nodeType":"YulExpressionStatement","src":"4847:18:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pVk","nodeType":"YulIdentifier","src":"4893:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"4899:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4889:3:19"},"nodeType":"YulFunctionCall","src":"4889:13:19"},{"name":"IC0y","nodeType":"YulIdentifier","src":"4904:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4882:6:19"},"nodeType":"YulFunctionCall","src":"4882:27:19"},"nodeType":"YulExpressionStatement","src":"4882:27:19"},{"expression":{"arguments":[{"name":"_pVk","nodeType":"YulIdentifier","src":"5010:4:19"},{"name":"IC1x","nodeType":"YulIdentifier","src":"5016:4:19"},{"name":"IC1y","nodeType":"YulIdentifier","src":"5022:4:19"},{"arguments":[{"arguments":[{"name":"pubSignals","nodeType":"YulIdentifier","src":"5045:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"5057:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5041:3:19"},"nodeType":"YulFunctionCall","src":"5041:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5028:12:19"},"nodeType":"YulFunctionCall","src":"5028:32:19"}],"functionName":{"name":"g1_mulAccC","nodeType":"YulIdentifier","src":"4999:10:19"},"nodeType":"YulFunctionCall","src":"4999:62:19"},"nodeType":"YulExpressionStatement","src":"4999:62:19"},{"expression":{"arguments":[{"name":"_pVk","nodeType":"YulIdentifier","src":"5106:4:19"},{"name":"IC2x","nodeType":"YulIdentifier","src":"5112:4:19"},{"name":"IC2y","nodeType":"YulIdentifier","src":"5118:4:19"},{"arguments":[{"arguments":[{"name":"pubSignals","nodeType":"YulIdentifier","src":"5141:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"5153:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5137:3:19"},"nodeType":"YulFunctionCall","src":"5137:19:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5124:12:19"},"nodeType":"YulFunctionCall","src":"5124:33:19"}],"functionName":{"name":"g1_mulAccC","nodeType":"YulIdentifier","src":"5095:10:19"},"nodeType":"YulFunctionCall","src":"5095:63:19"},"nodeType":"YulExpressionStatement","src":"5095:63:19"},{"expression":{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5222:9:19"},{"arguments":[{"name":"pA","nodeType":"YulIdentifier","src":"5246:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5233:12:19"},"nodeType":"YulFunctionCall","src":"5233:16:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5215:6:19"},"nodeType":"YulFunctionCall","src":"5215:35:19"},"nodeType":"YulExpressionStatement","src":"5215:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5278:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5289:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5274:3:19"},"nodeType":"YulFunctionCall","src":"5274:18:19"},{"arguments":[{"arguments":[{"name":"q","nodeType":"YulIdentifier","src":"5302:1:19"},{"arguments":[{"arguments":[{"name":"pA","nodeType":"YulIdentifier","src":"5322:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"5326:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5318:3:19"},"nodeType":"YulFunctionCall","src":"5318:11:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5305:12:19"},"nodeType":"YulFunctionCall","src":"5305:25:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5298:3:19"},"nodeType":"YulFunctionCall","src":"5298:33:19"},{"name":"q","nodeType":"YulIdentifier","src":"5333:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"5294:3:19"},"nodeType":"YulFunctionCall","src":"5294:41:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5267:6:19"},"nodeType":"YulFunctionCall","src":"5267:69:19"},"nodeType":"YulExpressionStatement","src":"5267:69:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5386:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5382:3:19"},"nodeType":"YulFunctionCall","src":"5382:18:19"},{"arguments":[{"name":"pB","nodeType":"YulIdentifier","src":"5415:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5402:12:19"},"nodeType":"YulFunctionCall","src":"5402:16:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5375:6:19"},"nodeType":"YulFunctionCall","src":"5375:44:19"},"nodeType":"YulExpressionStatement","src":"5375:44:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5447:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5458:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5443:3:19"},"nodeType":"YulFunctionCall","src":"5443:18:19"},{"arguments":[{"arguments":[{"name":"pB","nodeType":"YulIdentifier","src":"5480:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"5484:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5476:3:19"},"nodeType":"YulFunctionCall","src":"5476:11:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5463:12:19"},"nodeType":"YulFunctionCall","src":"5463:25:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5436:6:19"},"nodeType":"YulFunctionCall","src":"5436:53:19"},"nodeType":"YulExpressionStatement","src":"5436:53:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5517:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5528:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5513:3:19"},"nodeType":"YulFunctionCall","src":"5513:19:19"},{"arguments":[{"arguments":[{"name":"pB","nodeType":"YulIdentifier","src":"5551:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"5555:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5547:3:19"},"nodeType":"YulFunctionCall","src":"5547:11:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5534:12:19"},"nodeType":"YulFunctionCall","src":"5534:25:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5506:6:19"},"nodeType":"YulFunctionCall","src":"5506:54:19"},"nodeType":"YulExpressionStatement","src":"5506:54:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5588:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5599:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5584:3:19"},"nodeType":"YulFunctionCall","src":"5584:19:19"},{"arguments":[{"arguments":[{"name":"pB","nodeType":"YulIdentifier","src":"5622:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"5626:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5618:3:19"},"nodeType":"YulFunctionCall","src":"5618:11:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5605:12:19"},"nodeType":"YulFunctionCall","src":"5605:25:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5577:6:19"},"nodeType":"YulFunctionCall","src":"5577:54:19"},"nodeType":"YulExpressionStatement","src":"5577:54:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5686:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5697:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5682:3:19"},"nodeType":"YulFunctionCall","src":"5682:19:19"},{"name":"alphax","nodeType":"YulIdentifier","src":"5703:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5675:6:19"},"nodeType":"YulFunctionCall","src":"5675:35:19"},"nodeType":"YulExpressionStatement","src":"5675:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5738:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5749:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5734:3:19"},"nodeType":"YulFunctionCall","src":"5734:19:19"},{"name":"alphay","nodeType":"YulIdentifier","src":"5755:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5727:6:19"},"nodeType":"YulFunctionCall","src":"5727:35:19"},"nodeType":"YulExpressionStatement","src":"5727:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5816:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5827:3:19","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5812:3:19"},"nodeType":"YulFunctionCall","src":"5812:19:19"},{"name":"betax1","nodeType":"YulIdentifier","src":"5833:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5805:6:19"},"nodeType":"YulFunctionCall","src":"5805:35:19"},"nodeType":"YulExpressionStatement","src":"5805:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5868:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5879:3:19","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5864:3:19"},"nodeType":"YulFunctionCall","src":"5864:19:19"},{"name":"betax2","nodeType":"YulIdentifier","src":"5885:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5857:6:19"},"nodeType":"YulFunctionCall","src":"5857:35:19"},"nodeType":"YulExpressionStatement","src":"5857:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5920:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5931:3:19","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5916:3:19"},"nodeType":"YulFunctionCall","src":"5916:19:19"},{"name":"betay1","nodeType":"YulIdentifier","src":"5937:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5909:6:19"},"nodeType":"YulFunctionCall","src":"5909:35:19"},"nodeType":"YulExpressionStatement","src":"5909:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"5972:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5983:3:19","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5968:3:19"},"nodeType":"YulFunctionCall","src":"5968:19:19"},{"name":"betay2","nodeType":"YulIdentifier","src":"5989:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5961:6:19"},"nodeType":"YulFunctionCall","src":"5961:35:19"},"nodeType":"YulExpressionStatement","src":"5961:35:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6049:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6060:3:19","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6045:3:19"},"nodeType":"YulFunctionCall","src":"6045:19:19"},{"arguments":[{"arguments":[{"name":"pMem","nodeType":"YulIdentifier","src":"6076:4:19"},{"name":"pVk","nodeType":"YulIdentifier","src":"6082:3:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6072:3:19"},"nodeType":"YulFunctionCall","src":"6072:14:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6066:5:19"},"nodeType":"YulFunctionCall","src":"6066:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6038:6:19"},"nodeType":"YulFunctionCall","src":"6038:50:19"},"nodeType":"YulExpressionStatement","src":"6038:50:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6116:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6127:3:19","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6112:3:19"},"nodeType":"YulFunctionCall","src":"6112:19:19"},{"arguments":[{"arguments":[{"name":"pMem","nodeType":"YulIdentifier","src":"6143:4:19"},{"arguments":[{"name":"pVk","nodeType":"YulIdentifier","src":"6153:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"6158:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6149:3:19"},"nodeType":"YulFunctionCall","src":"6149:12:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6139:3:19"},"nodeType":"YulFunctionCall","src":"6139:23:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6133:5:19"},"nodeType":"YulFunctionCall","src":"6133:30:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6105:6:19"},"nodeType":"YulFunctionCall","src":"6105:59:19"},"nodeType":"YulExpressionStatement","src":"6105:59:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6220:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6231:3:19","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6216:3:19"},"nodeType":"YulFunctionCall","src":"6216:19:19"},{"name":"gammax1","nodeType":"YulIdentifier","src":"6237:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6209:6:19"},"nodeType":"YulFunctionCall","src":"6209:36:19"},"nodeType":"YulExpressionStatement","src":"6209:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6273:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6284:3:19","type":"","value":"480"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:19"},"nodeType":"YulFunctionCall","src":"6269:19:19"},{"name":"gammax2","nodeType":"YulIdentifier","src":"6290:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6262:6:19"},"nodeType":"YulFunctionCall","src":"6262:36:19"},"nodeType":"YulExpressionStatement","src":"6262:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6326:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6337:3:19","type":"","value":"512"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6322:3:19"},"nodeType":"YulFunctionCall","src":"6322:19:19"},{"name":"gammay1","nodeType":"YulIdentifier","src":"6343:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:19"},"nodeType":"YulFunctionCall","src":"6315:36:19"},"nodeType":"YulExpressionStatement","src":"6315:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6379:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6390:3:19","type":"","value":"544"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6375:3:19"},"nodeType":"YulFunctionCall","src":"6375:19:19"},{"name":"gammay2","nodeType":"YulIdentifier","src":"6396:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6368:6:19"},"nodeType":"YulFunctionCall","src":"6368:36:19"},"nodeType":"YulExpressionStatement","src":"6368:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6454:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6465:3:19","type":"","value":"576"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6450:3:19"},"nodeType":"YulFunctionCall","src":"6450:19:19"},{"arguments":[{"name":"pC","nodeType":"YulIdentifier","src":"6484:2:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6471:12:19"},"nodeType":"YulFunctionCall","src":"6471:16:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6443:6:19"},"nodeType":"YulFunctionCall","src":"6443:45:19"},"nodeType":"YulExpressionStatement","src":"6443:45:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6516:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6527:3:19","type":"","value":"608"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6512:3:19"},"nodeType":"YulFunctionCall","src":"6512:19:19"},{"arguments":[{"arguments":[{"name":"pC","nodeType":"YulIdentifier","src":"6550:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"6554:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6546:3:19"},"nodeType":"YulFunctionCall","src":"6546:11:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6533:12:19"},"nodeType":"YulFunctionCall","src":"6533:25:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6505:6:19"},"nodeType":"YulFunctionCall","src":"6505:54:19"},"nodeType":"YulExpressionStatement","src":"6505:54:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6614:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6625:3:19","type":"","value":"640"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6610:3:19"},"nodeType":"YulFunctionCall","src":"6610:19:19"},{"name":"deltax1","nodeType":"YulIdentifier","src":"6631:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6603:6:19"},"nodeType":"YulFunctionCall","src":"6603:36:19"},"nodeType":"YulExpressionStatement","src":"6603:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6667:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6678:3:19","type":"","value":"672"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6663:3:19"},"nodeType":"YulFunctionCall","src":"6663:19:19"},{"name":"deltax2","nodeType":"YulIdentifier","src":"6684:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6656:6:19"},"nodeType":"YulFunctionCall","src":"6656:36:19"},"nodeType":"YulExpressionStatement","src":"6656:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6720:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6731:3:19","type":"","value":"704"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6716:3:19"},"nodeType":"YulFunctionCall","src":"6716:19:19"},{"name":"deltay1","nodeType":"YulIdentifier","src":"6737:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6709:6:19"},"nodeType":"YulFunctionCall","src":"6709:36:19"},"nodeType":"YulExpressionStatement","src":"6709:36:19"},{"expression":{"arguments":[{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6773:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6784:3:19","type":"","value":"736"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6769:3:19"},"nodeType":"YulFunctionCall","src":"6769:19:19"},{"name":"deltay2","nodeType":"YulIdentifier","src":"6790:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6762:6:19"},"nodeType":"YulFunctionCall","src":"6762:36:19"},"nodeType":"YulExpressionStatement","src":"6762:36:19"},{"nodeType":"YulVariableDeclaration","src":"6817:79:19","value":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"6847:3:19"},"nodeType":"YulFunctionCall","src":"6847:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6854:4:19","type":"","value":"2000"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6843:3:19"},"nodeType":"YulFunctionCall","src":"6843:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:19","type":"","value":"8"},{"name":"_pPairing","nodeType":"YulIdentifier","src":"6864:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6875:3:19","type":"","value":"768"},{"name":"_pPairing","nodeType":"YulIdentifier","src":"6880:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6891:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"6832:10:19"},"nodeType":"YulFunctionCall","src":"6832:64:19"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"6821:7:19","type":""}]},{"nodeType":"YulAssignment","src":"6914:38:19","value":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"6926:7:19"},{"arguments":[{"name":"_pPairing","nodeType":"YulIdentifier","src":"6941:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6935:5:19"},"nodeType":"YulFunctionCall","src":"6935:16:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6922:3:19"},"nodeType":"YulFunctionCall","src":"6922:30:19"},"variableNames":[{"name":"isOk","nodeType":"YulIdentifier","src":"6914:4:19"}]}]},"name":"checkPairing","nodeType":"YulFunctionDefinition","parameters":[{"name":"pA","nodeType":"YulTypedName","src":"4694:2:19","type":""},{"name":"pB","nodeType":"YulTypedName","src":"4698:2:19","type":""},{"name":"pC","nodeType":"YulTypedName","src":"4702:2:19","type":""},{"name":"pubSignals","nodeType":"YulTypedName","src":"4706:10:19","type":""},{"name":"pMem","nodeType":"YulTypedName","src":"4718:4:19","type":""}],"returnVariables":[{"name":"isOk","nodeType":"YulTypedName","src":"4727:4:19","type":""}],"src":"4672:2294:19"},{"nodeType":"YulVariableDeclaration","src":"6980:23:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6998:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6992:5:19"},"nodeType":"YulFunctionCall","src":"6992:11:19"},"variables":[{"name":"pMem","nodeType":"YulTypedName","src":"6984:4:19","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7023:4:19","type":"","value":"0x40"},{"arguments":[{"name":"pMem","nodeType":"YulIdentifier","src":"7033:4:19"},{"name":"pLastMem","nodeType":"YulIdentifier","src":"7039:8:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7029:3:19"},"nodeType":"YulFunctionCall","src":"7029:19:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7016:6:19"},"nodeType":"YulFunctionCall","src":"7016:33:19"},"nodeType":"YulExpressionStatement","src":"7016:33:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"_pubSignals","nodeType":"YulIdentifier","src":"7155:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"7168:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7151:3:19"},"nodeType":"YulFunctionCall","src":"7151:19:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7138:12:19"},"nodeType":"YulFunctionCall","src":"7138:33:19"}],"functionName":{"name":"checkField","nodeType":"YulIdentifier","src":"7127:10:19"},"nodeType":"YulFunctionCall","src":"7127:45:19"},"nodeType":"YulExpressionStatement","src":"7127:45:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"_pubSignals","nodeType":"YulIdentifier","src":"7226:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"7239:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7222:3:19"},"nodeType":"YulFunctionCall","src":"7222:20:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7209:12:19"},"nodeType":"YulFunctionCall","src":"7209:34:19"}],"functionName":{"name":"checkField","nodeType":"YulIdentifier","src":"7198:10:19"},"nodeType":"YulFunctionCall","src":"7198:46:19"},"nodeType":"YulExpressionStatement","src":"7198:46:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"_pubSignals","nodeType":"YulIdentifier","src":"7298:11:19"},{"kind":"number","nodeType":"YulLiteral","src":"7311:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7294:3:19"},"nodeType":"YulFunctionCall","src":"7294:20:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7281:12:19"},"nodeType":"YulFunctionCall","src":"7281:34:19"}],"functionName":{"name":"checkField","nodeType":"YulIdentifier","src":"7270:10:19"},"nodeType":"YulFunctionCall","src":"7270:46:19"},"nodeType":"YulExpressionStatement","src":"7270:46:19"},{"nodeType":"YulVariableDeclaration","src":"7383:61:19","value":{"arguments":[{"name":"_pA","nodeType":"YulIdentifier","src":"7411:3:19"},{"name":"_pB","nodeType":"YulIdentifier","src":"7416:3:19"},{"name":"_pC","nodeType":"YulIdentifier","src":"7421:3:19"},{"name":"_pubSignals","nodeType":"YulIdentifier","src":"7426:11:19"},{"name":"pMem","nodeType":"YulIdentifier","src":"7439:4:19"}],"functionName":{"name":"checkPairing","nodeType":"YulIdentifier","src":"7398:12:19"},"nodeType":"YulFunctionCall","src":"7398:46:19"},"variables":[{"name":"isValid","nodeType":"YulTypedName","src":"7387:7:19","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7465:1:19","type":"","value":"0"},{"name":"isValid","nodeType":"YulIdentifier","src":"7468:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7458:6:19"},"nodeType":"YulFunctionCall","src":"7458:18:19"},"nodeType":"YulExpressionStatement","src":"7458:18:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7497:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7500:4:19","type":"","value":"0x20"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"7490:6:19"},"nodeType":"YulFunctionCall","src":"7490:15:19"},"nodeType":"YulExpressionStatement","src":"7490:15:19"}]},"evmVersion":"london","externalReferences":[{"declaration":3948,"isOffset":false,"isSlot":false,"src":"4860:4:19","valueSize":1},{"declaration":3951,"isOffset":false,"isSlot":false,"src":"4904:4:19","valueSize":1},{"declaration":3954,"isOffset":false,"isSlot":false,"src":"5016:4:19","valueSize":1},{"declaration":3957,"isOffset":false,"isSlot":false,"src":"5022:4:19","valueSize":1},{"declaration":3960,"isOffset":false,"isSlot":false,"src":"5112:4:19","valueSize":1},{"declaration":3963,"isOffset":false,"isSlot":false,"src":"5118:4:19","valueSize":1},{"declaration":3976,"isOffset":false,"isSlot":false,"src":"7411:3:19","valueSize":1},{"declaration":3982,"isOffset":false,"isSlot":false,"src":"7416:3:19","valueSize":1},{"declaration":3986,"isOffset":false,"isSlot":false,"src":"7421:3:19","valueSize":1},{"declaration":3990,"isOffset":false,"isSlot":false,"src":"7155:11:19","valueSize":1},{"declaration":3990,"isOffset":false,"isSlot":false,"src":"7226:11:19","valueSize":1},{"declaration":3990,"isOffset":false,"isSlot":false,"src":"7298:11:19","valueSize":1},{"declaration":3990,"isOffset":false,"isSlot":false,"src":"7426:11:19","valueSize":1},{"declaration":3906,"isOffset":false,"isSlot":false,"src":"5703:6:19","valueSize":1},{"declaration":3909,"isOffset":false,"isSlot":false,"src":"5755:6:19","valueSize":1},{"declaration":3912,"isOffset":false,"isSlot":false,"src":"5833:6:19","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":false,"src":"5885:6:19","valueSize":1},{"declaration":3918,"isOffset":false,"isSlot":false,"src":"5937:6:19","valueSize":1},{"declaration":3921,"isOffset":false,"isSlot":false,"src":"5989:6:19","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"6631:7:19","valueSize":1},{"declaration":3939,"isOffset":false,"isSlot":false,"src":"6684:7:19","valueSize":1},{"declaration":3942,"isOffset":false,"isSlot":false,"src":"6737:7:19","valueSize":1},{"declaration":3945,"isOffset":false,"isSlot":false,"src":"6790:7:19","valueSize":1},{"declaration":3924,"isOffset":false,"isSlot":false,"src":"6237:7:19","valueSize":1},{"declaration":3927,"isOffset":false,"isSlot":false,"src":"6290:7:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"6343:7:19","valueSize":1},{"declaration":3933,"isOffset":false,"isSlot":false,"src":"6396:7:19","valueSize":1},{"declaration":3972,"isOffset":false,"isSlot":false,"src":"7039:8:19","valueSize":1},{"declaration":3969,"isOffset":false,"isSlot":false,"src":"4777:8:19","valueSize":1},{"declaration":3966,"isOffset":false,"isSlot":false,"src":"4825:3:19","valueSize":1},{"declaration":3966,"isOffset":false,"isSlot":false,"src":"6082:3:19","valueSize":1},{"declaration":3966,"isOffset":false,"isSlot":false,"src":"6153:3:19","valueSize":1},{"declaration":3903,"isOffset":false,"isSlot":false,"src":"5302:1:19","valueSize":1},{"declaration":3903,"isOffset":false,"isSlot":false,"src":"5333:1:19","valueSize":1},{"declaration":3900,"isOffset":false,"isSlot":false,"src":"3710:1:19","valueSize":1}],"id":3995,"nodeType":"InlineAssembly","src":"3630:3886:19"}]},"functionSelector":"f5c9d69e","id":3997,"implemented":true,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"3482:11:19","nodeType":"FunctionDefinition","parameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"_pA","nameLocation":"3511:3:19","nodeType":"VariableDeclaration","scope":3997,"src":"3494:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3973,"name":"uint","nodeType":"ElementaryTypeName","src":"3494:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3975,"length":{"hexValue":"32","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3499:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3494:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"_pB","nameLocation":"3536:3:19","nodeType":"VariableDeclaration","scope":3997,"src":"3516:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","typeString":"uint256[2][2]"},"typeName":{"baseType":{"baseType":{"id":3977,"name":"uint","nodeType":"ElementaryTypeName","src":"3516:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"length":{"hexValue":"32","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3521:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3516:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":3981,"length":{"hexValue":"32","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3524:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3516:10:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr","typeString":"uint256[2][2]"}},"visibility":"internal"},{"constant":false,"id":3986,"mutability":"mutable","name":"_pC","nameLocation":"3558:3:19","nodeType":"VariableDeclaration","scope":3997,"src":"3541:20:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3983,"name":"uint","nodeType":"ElementaryTypeName","src":"3541:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"length":{"hexValue":"32","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3546:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3541:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":3990,"mutability":"mutable","name":"_pubSignals","nameLocation":"3580:11:19","nodeType":"VariableDeclaration","scope":3997,"src":"3563:28:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":3987,"name":"uint","nodeType":"ElementaryTypeName","src":"3563:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3989,"length":{"hexValue":"32","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3568:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3563:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"3493:99:19"},"returnParameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3997,"src":"3614:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3992,"name":"bool","nodeType":"ElementaryTypeName","src":"3614:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3613:6:19"},"scope":3998,"src":"3473:4050:19","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3999,"src":"831:6695:19","usedErrors":[]}],"src":"798:6729:19"},"id":19},"contracts/zkContract.sol":{"ast":{"absolutePath":"contracts/zkContract.sol","exportedSymbols":{"Hasher":[3066],"ZkContract":[4100]},"id":4101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4000,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"31:23:20"},{"absolutePath":"contracts/MIMCSponge.sol","file":"./MIMCSponge.sol","id":4001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4101,"sourceUnit":3067,"src":"56:26:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ZkContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4100,"linearizedBaseContracts":[4100],"name":"ZkContract","nameLocation":"93:10:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"cc44919b239a9941511ae27aea57e2f4422e671285794bf3338a49fdca887f4a","id":4007,"name":"Check","nameLocation":"116:5:20","nodeType":"EventDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"130:2:20","nodeType":"VariableDeclaration","scope":4007,"src":"122:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4002,"name":"address","nodeType":"ElementaryTypeName","src":"122:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4005,"indexed":false,"mutability":"mutable","name":"nullifierHash","nameLocation":"142:13:20","nodeType":"VariableDeclaration","scope":4007,"src":"134:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"134:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121:35:20"},"src":"110:47:20"},{"constant":false,"id":4009,"mutability":"mutable","name":"verifier","nameLocation":"171:8:20","nodeType":"VariableDeclaration","scope":4100,"src":"163:16:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4008,"name":"address","nodeType":"ElementaryTypeName","src":"163:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4012,"mutability":"mutable","name":"hasher","nameLocation":"192:6:20","nodeType":"VariableDeclaration","scope":4100,"src":"185:13:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$3066","typeString":"contract Hasher"},"typeName":{"id":4011,"nodeType":"UserDefinedTypeName","pathNode":{"id":4010,"name":"Hasher","nameLocations":["185:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":3066,"src":"185:6:20"},"referencedDeclaration":3066,"src":"185:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_Hasher_$3066","typeString":"contract Hasher"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"nullExists","nameLocation":"234:10:20","nodeType":"VariableDeclaration","scope":4100,"src":"204:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":4015,"keyType":{"id":4013,"name":"string","nodeType":"ElementaryTypeName","src":"212:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"204:21:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueType":{"id":4014,"name":"bool","nodeType":"ElementaryTypeName","src":"220:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":4020,"mutability":"mutable","name":"comExists","nameLocation":"281:9:20","nodeType":"VariableDeclaration","scope":4100,"src":"250:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":4019,"keyType":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"250:22:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":4018,"name":"bool","nodeType":"ElementaryTypeName","src":"267:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":4050,"nodeType":"Block","src":"342:199:20","statements":[{"expression":{"arguments":[{"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"360:23:20","subExpression":{"baseExpression":{"id":4026,"name":"comExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"361:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4028,"indexExpression":{"id":4027,"name":"_commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"371:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"361:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475706c696361746520636f6d6d69746d656e7420686173682e","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:28:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310","typeString":"literal_string \"Duplicate commitment hash.\""},"value":"Duplicate commitment hash."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310","typeString":"literal_string \"Duplicate commitment hash.\""}],"id":4025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"352:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"352:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4032,"nodeType":"ExpressionStatement","src":"352:61:20"},{"assignments":[4034],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"currentHash","nameLocation":"432:11:20","nodeType":"VariableDeclaration","scope":4050,"src":"424:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4036,"initialValue":{"id":4035,"name":"_commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"446:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"424:33:20"},{"assignments":[4042],"declarations":[{"constant":false,"id":4042,"mutability":"mutable","name":"ins","nameLocation":"486:3:20","nodeType":"VariableDeclaration","scope":4050,"src":"468:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4041,"length":{"hexValue":"32","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"476:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"468:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":4043,"nodeType":"VariableDeclarationStatement","src":"468:21:20"},{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4044,"name":"comExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"505:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4046,"indexExpression":{"id":4045,"name":"_commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"515:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"505:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"530:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"505:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4049,"nodeType":"ExpressionStatement","src":"505:29:20"}]},"functionSelector":"f2cee92b","id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"minting","nameLocation":"306:7:20","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"_commitment","nameLocation":"322:11:20","nodeType":"VariableDeclaration","scope":4051,"src":"314:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"313:21:20"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[],"src":"342:0:20"},"scope":4100,"src":"297:244:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4062,"nodeType":"Block","src":"612:39:20","statements":[{"expression":{"baseExpression":{"id":4058,"name":"nullExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"629:10:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":4060,"indexExpression":{"id":4059,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"640:3:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"629:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4057,"id":4061,"nodeType":"Return","src":"622:22:20"}]},"functionSelector":"0af54ca3","id":4063,"implemented":true,"kind":"function","modifiers":[],"name":"null_exists","nameLocation":"556:11:20","nodeType":"FunctionDefinition","parameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"str","nameLocation":"582:3:20","nodeType":"VariableDeclaration","scope":4063,"src":"568:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4052,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"567:19:20"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4063,"src":"607:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4055,"name":"bool","nodeType":"ElementaryTypeName","src":"607:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"606:6:20"},"scope":4100,"src":"547:104:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4074,"nodeType":"Block","src":"705:39:20","statements":[{"expression":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4068,"name":"nullExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"715:10:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":4070,"indexExpression":{"id":4069,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"726:3:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"715:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"733:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"715:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4073,"nodeType":"ExpressionStatement","src":"715:22:20"}]},"functionSelector":"602a859c","id":4075,"implemented":true,"kind":"function","modifiers":[],"name":"registerNull","nameLocation":"666:12:20","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4065,"mutability":"mutable","name":"str","nameLocation":"693:3:20","nodeType":"VariableDeclaration","scope":4075,"src":"679:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4064,"name":"string","nodeType":"ElementaryTypeName","src":"679:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"678:19:20"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[],"src":"705:0:20"},"scope":4100,"src":"657:87:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4086,"nodeType":"Block","src":"808:38:20","statements":[{"expression":{"baseExpression":{"id":4082,"name":"comExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"825:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4084,"indexExpression":{"id":4083,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"835:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"825:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4081,"id":4085,"nodeType":"Return","src":"818:21:20"}]},"functionSelector":"785dfae8","id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"com_exists","nameLocation":"759:10:20","nodeType":"FunctionDefinition","parameters":{"id":4078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"com","nameLocation":"778:3:20","nodeType":"VariableDeclaration","scope":4087,"src":"770:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4076,"name":"uint256","nodeType":"ElementaryTypeName","src":"770:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"769:13:20"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4087,"src":"803:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4079,"name":"bool","nodeType":"ElementaryTypeName","src":"803:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:6:20"},"scope":4100,"src":"750:96:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4098,"nodeType":"Block","src":"892:38:20","statements":[{"expression":{"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4092,"name":"comExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"902:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4094,"indexExpression":{"id":4093,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"912:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"902:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"919:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"902:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4097,"nodeType":"ExpressionStatement","src":"902:21:20"}]},"functionSelector":"c25879a3","id":4099,"implemented":true,"kind":"function","modifiers":[],"name":"regiterCom","nameLocation":"861:10:20","nodeType":"FunctionDefinition","parameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"com","nameLocation":"880:3:20","nodeType":"VariableDeclaration","scope":4099,"src":"872:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"871:13:20"},"returnParameters":{"id":4091,"nodeType":"ParameterList","parameters":[],"src":"892:0:20"},"scope":4100,"src":"852:78:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4101,"src":"84:848:20","usedErrors":[]}],"src":"31:901:20"},"id":20},"contracts/zkNFT.sol":{"ast":{"absolutePath":"contracts/zkNFT.sol","exportedSymbols":{"IZkNFT":[2866],"zkNFT":[4491]},"id":4492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4102,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"31:23:21"},{"absolutePath":"contracts/Izknft.sol","file":"./Izknft.sol","id":4103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4492,"sourceUnit":2867,"src":"56:22:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4104,"name":"IZkNFT","nameLocations":["804:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2866,"src":"804:6:21"},"id":4105,"nodeType":"InheritanceSpecifier","src":"804:6:21"}],"canonicalName":"zkNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4491,"linearizedBaseContracts":[4491,2866],"name":"zkNFT","nameLocation":"795:5:21","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"b12d87e4ee7f2fb6d2b85a4b7875bc64a51a45e85c452f968ce17e9ef133b938","id":4113,"name":"NFTTransfered","nameLocation":"823:13:21","nodeType":"EventDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:21","nodeType":"VariableDeclaration","scope":4113,"src":"837:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4109,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"875:2:21","nodeType":"VariableDeclaration","scope":4113,"src":"859:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4111,"indexed":true,"mutability":"mutable","name":"tokenID","nameLocation":"895:7:21","nodeType":"VariableDeclaration","scope":4113,"src":"879:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"836:67:21"},"src":"817:87:21"},{"anonymous":false,"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":4117,"name":"MetadataUpdate","nameLocation":"915:14:21","nodeType":"EventDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"indexed":true,"mutability":"mutable","name":"tokenID","nameLocation":"946:7:21","nodeType":"VariableDeclaration","scope":4117,"src":"930:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:25:21"},"src":"909:46:21"},{"constant":false,"id":4123,"mutability":"mutable","name":"addToCom","nameLocation":"1017:8:21","nodeType":"VariableDeclaration","scope":4491,"src":"961:64:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4122,"keyType":{"id":4118,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"961:47:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":4121,"keyType":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"980:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":4127,"mutability":"mutable","name":"comToAdd","nameLocation":"1067:8:21","nodeType":"VariableDeclaration","scope":4491,"src":"1031:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":4126,"keyType":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1031:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":4125,"name":"address","nodeType":"ElementaryTypeName","src":"1050:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":4131,"mutability":"mutable","name":"noOfComs","nameLocation":"1117:8:21","nodeType":"VariableDeclaration","scope":4491,"src":"1081:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4130,"keyType":{"id":4128,"name":"address","nodeType":"ElementaryTypeName","src":"1089:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1081:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1100:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":4135,"mutability":"mutable","name":"owners","nameLocation":"1168:6:21","nodeType":"VariableDeclaration","scope":4491,"src":"1132:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":4134,"keyType":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1140:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1132:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":4139,"mutability":"mutable","name":"tokenURIs","nameLocation":"1215:9:21","nodeType":"VariableDeclaration","scope":4491,"src":"1180:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":4138,"keyType":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1188:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1180:26:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":4137,"name":"string","nodeType":"ElementaryTypeName","src":"1199:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"constant":false,"id":4143,"mutability":"mutable","name":"tokenIDToAdd","nameLocation":"1259:12:21","nodeType":"VariableDeclaration","scope":4491,"src":"1230:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":4142,"keyType":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1230:28:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":4141,"name":"address","nodeType":"ElementaryTypeName","src":"1250:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"_name","nameLocation":"1285:5:21","nodeType":"VariableDeclaration","scope":4491,"src":"1278:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4144,"name":"string","nodeType":"ElementaryTypeName","src":"1278:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"7a6b4d50","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1293:6:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_330a639b7f2822a1705791f81c4af1b8ba41bd4051b461fe899d3bad69db27a0","typeString":"literal_string \"zkMP\""},"value":"zkMP"},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"_symbol","nameLocation":"1312:7:21","nodeType":"VariableDeclaration","scope":4491,"src":"1305:20:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4147,"name":"string","nodeType":"ElementaryTypeName","src":"1305:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5a","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5","typeString":"literal_string \"Z\""},"value":"Z"},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"tokenID","nameLocation":"1347:7:21","nodeType":"VariableDeclaration","scope":4491,"src":"1331:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":4158,"nodeType":"Block","src":"1378:28:21","statements":[{"expression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4154,"name":"tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"1388:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1398:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1388:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4157,"nodeType":"ExpressionStatement","src":"1388:11:21"}]},"id":4159,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[],"src":"1376:2:21"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[],"src":"1378:0:21"},"scope":4491,"src":"1365:41:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4184,"nodeType":"Block","src":"1482:145:21","statements":[{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"creator","nameLocation":"1500:7:21","nodeType":"VariableDeclaration","scope":4184,"src":"1492:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4166,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4170,"initialValue":{"expression":{"id":4168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1510:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1514:6:21","memberName":"sender","nodeType":"MemberAccess","src":"1510:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1492:28:21"},{"expression":{"arguments":[{"id":4172,"name":"creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"1544:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4173,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1552:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4171,"name":"setAddAndCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"1531:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4175,"nodeType":"ExpressionStatement","src":"1531:32:21"},{"expression":{"arguments":[{"id":4177,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"1581:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4178,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"1592:8:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4176,"name":"mintNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"1573:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4180,"nodeType":"ExpressionStatement","src":"1573:28:21"},{"expression":{"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1611:9:21","subExpression":{"id":4181,"name":"tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"1611:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4183,"nodeType":"ExpressionStatement","src":"1611:9:21"}]},"functionSelector":"f32b5124","id":4185,"implemented":true,"kind":"function","modifiers":[],"name":"createNFT","nameLocation":"1421:9:21","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"commitment","nameLocation":"1439:10:21","nodeType":"VariableDeclaration","scope":4185,"src":"1431:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"tokenURI","nameLocation":"1465:8:21","nodeType":"VariableDeclaration","scope":4185,"src":"1451:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4162,"name":"string","nodeType":"ElementaryTypeName","src":"1451:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1430:44:21"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[],"src":"1482:0:21"},"scope":4491,"src":"1412:215:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2865],"body":{"id":4193,"nodeType":"Block","src":"1701:8:21","statements":[]},"functionSelector":"263c7868","id":4194,"implemented":true,"kind":"function","modifiers":[],"name":"deleteZkNft","nameLocation":"1642:11:21","nodeType":"FunctionDefinition","overrides":{"id":4191,"nodeType":"OverrideSpecifier","overrides":[],"src":"1686:8:21"},"parameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"tokenID","nameLocation":"1662:7:21","nodeType":"VariableDeclaration","scope":4194,"src":"1654:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1654:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"owner","nameLocation":"1679:5:21","nodeType":"VariableDeclaration","scope":4194,"src":"1671:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4188,"name":"address","nodeType":"ElementaryTypeName","src":"1671:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1653:32:21"},"returnParameters":{"id":4192,"nodeType":"ParameterList","parameters":[],"src":"1701:0:21"},"scope":4491,"src":"1633:76:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2848],"body":{"id":4202,"nodeType":"Block","src":"1797:8:21","statements":[]},"functionSelector":"3bb3a24d","id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenURI","nameLocation":"1724:11:21","nodeType":"FunctionDefinition","overrides":{"id":4198,"nodeType":"OverrideSpecifier","overrides":[],"src":"1754:8:21"},"parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"_tokenID","nameLocation":"1744:8:21","nodeType":"VariableDeclaration","scope":4203,"src":"1736:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1735:18:21"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4203,"src":"1783:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4199,"name":"string","nodeType":"ElementaryTypeName","src":"1783:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1782:15:21"},"scope":4491,"src":"1715:90:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4227,"nodeType":"Block","src":"1881:138:21","statements":[{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4210,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1891:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4212,"indexExpression":{"id":4211,"name":"tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"1898:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1891:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4213,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"1909:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1891:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"1891:28:21"},{"expression":{"arguments":[{"id":4217,"name":"tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"1941:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4218,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"1949:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4216,"name":"setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"1929:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4220,"nodeType":"ExpressionStatement","src":"1929:30:21"},{"eventCall":{"arguments":[{"hexValue":"30","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1989:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4223,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"1992:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4224,"name":"tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"2004:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4221,"name":"NFTTransfered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"1975:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1975:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4226,"nodeType":"EmitStatement","src":"1970:42:21"}]},"id":4228,"implemented":true,"kind":"function","modifiers":[],"name":"mintNFT","nameLocation":"1820:7:21","nodeType":"FunctionDefinition","parameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"commitment","nameLocation":"1836:10:21","nodeType":"VariableDeclaration","scope":4228,"src":"1828:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4207,"mutability":"mutable","name":"_tokenURI","nameLocation":"1861:9:21","nodeType":"VariableDeclaration","scope":4228,"src":"1847:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4206,"name":"string","nodeType":"ElementaryTypeName","src":"1847:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1827:44:21"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[],"src":"1881:0:21"},"scope":4491,"src":"1811:208:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"2097:86:21","statements":[{"expression":{"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4235,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"2107:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":4237,"indexExpression":{"id":4236,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"2117:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2107:18:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4238,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"2128:9:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2107:30:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4240,"nodeType":"ExpressionStatement","src":"2107:30:21"},{"eventCall":{"arguments":[{"id":4242,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"2168:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4241,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"2153:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4244,"nodeType":"EmitStatement","src":"2148:28:21"}]},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"setTokenURI","nameLocation":"2034:11:21","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"tokenId","nameLocation":"2054:7:21","nodeType":"VariableDeclaration","scope":4246,"src":"2046:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2046:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"_tokenURI","nameLocation":"2077:9:21","nodeType":"VariableDeclaration","scope":4246,"src":"2063:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4231,"name":"string","nodeType":"ElementaryTypeName","src":"2063:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2045:42:21"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[],"src":"2097:0:21"},"scope":4491,"src":"2025:158:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2841],"body":{"id":4293,"nodeType":"Block","src":"2295:278:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4260,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2329:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4259,"name":"getApprovedAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"2314:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4262,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2342:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2342:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2314:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617070726f76656420746f206d616b6520746869732063616c6c","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2354:31:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621","typeString":"literal_string \"No approved to make this call\""},"value":"No approved to make this call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621","typeString":"literal_string \"No approved to make this call\""}],"id":4258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2306:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2306:80:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4267,"nodeType":"ExpressionStatement","src":"2306:80:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4273,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2439:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4272,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"2431:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2431:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2414:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2418:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2414:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4269,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2404:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2404:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4280,"name":"ownerCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"2481:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4278,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2464:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2468:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2464:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4277,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2454:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2404:87:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6d69666965722068617368","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2493:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3","typeString":"literal_string \"Invalid comifier hash\""},"value":"Invalid comifier hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3","typeString":"literal_string \"Invalid comifier hash\""}],"id":4268,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2396:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2396:121:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4286,"nodeType":"ExpressionStatement","src":"2396:121:21"},{"expression":{"arguments":[{"id":4288,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2540:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4289,"name":"buyerCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"2550:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4290,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"2560:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4287,"name":"transferNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"2528:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2528:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4292,"nodeType":"ExpressionStatement","src":"2528:38:21"}]},"functionSelector":"a50348dc","id":4294,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2198:12:21","nodeType":"FunctionDefinition","overrides":{"id":4256,"nodeType":"OverrideSpecifier","overrides":[],"src":"2287:8:21"},"parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"ownerCom","nameLocation":"2219:8:21","nodeType":"VariableDeclaration","scope":4294,"src":"2211:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"buyerCom","nameLocation":"2237:8:21","nodeType":"VariableDeclaration","scope":4294,"src":"2229:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"buyer","nameLocation":"2255:5:21","nodeType":"VariableDeclaration","scope":4294,"src":"2247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4251,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"_tokenID","nameLocation":"2270:8:21","nodeType":"VariableDeclaration","scope":4294,"src":"2262:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2210:69:21"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[],"src":"2295:0:21"},"scope":4491,"src":"2189:384:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2830],"body":{"id":4353,"nodeType":"Block","src":"2668:373:21","statements":[{"assignments":[4305],"declarations":[{"constant":false,"id":4305,"mutability":"mutable","name":"crtrCom","nameLocation":"2714:7:21","nodeType":"VariableDeclaration","scope":4353,"src":"2706:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2706:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4309,"initialValue":{"baseExpression":{"id":4306,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2724:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4308,"indexExpression":{"id":4307,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"2731:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2724:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2706:34:21"},{"assignments":[4311],"declarations":[{"constant":false,"id":4311,"mutability":"mutable","name":"owner","nameLocation":"2758:5:21","nodeType":"VariableDeclaration","scope":4353,"src":"2750:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4310,"name":"address","nodeType":"ElementaryTypeName","src":"2750:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4315,"initialValue":{"baseExpression":{"id":4312,"name":"comToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"2766:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4314,"indexExpression":{"id":4313,"name":"crtrCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"2775:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2766:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2750:33:21"},{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2794:23:21","subExpression":{"baseExpression":{"id":4316,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2801:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4318,"indexExpression":{"id":4317,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"2808:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2801:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4320,"nodeType":"ExpressionStatement","src":"2794:23:21"},{"assignments":[4322],"declarations":[{"constant":false,"id":4322,"mutability":"mutable","name":"n","nameLocation":"2835:1:21","nodeType":"VariableDeclaration","scope":4353,"src":"2827:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"2827:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4328,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4323,"name":"noOfComs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"2839:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4325,"indexExpression":{"id":4324,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"2848:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2839:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2857:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2839:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2827:31:21"},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2868:25:21","subExpression":{"baseExpression":{"baseExpression":{"id":4329,"name":"addToCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"2875:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":4331,"indexExpression":{"id":4330,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"2884:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2875:15:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4333,"indexExpression":{"id":4332,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"2891:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2875:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4335,"nodeType":"ExpressionStatement","src":"2868:25:21"},{"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4336,"name":"noOfComs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"2903:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4338,"indexExpression":{"id":4337,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"2912:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2903:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2922:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2903:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4341,"nodeType":"ExpressionStatement","src":"2903:20:21"},{"expression":{"arguments":[{"id":4343,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"2977:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4344,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"2983:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4342,"name":"setAddAndCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"2964:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2964:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4346,"nodeType":"ExpressionStatement","src":"2964:30:21"},{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4347,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"3004:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4349,"indexExpression":{"id":4348,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3011:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3004:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4350,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"3023:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3004:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"3004:29:21"}]},"functionSelector":"8894c446","id":4354,"implemented":true,"kind":"function","modifiers":[],"name":"transferNFT","nameLocation":"2588:11:21","nodeType":"FunctionDefinition","overrides":{"id":4302,"nodeType":"OverrideSpecifier","overrides":[],"src":"2660:8:21"},"parameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"_tokenID","nameLocation":"2608:8:21","nodeType":"VariableDeclaration","scope":4354,"src":"2600:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"commitment","nameLocation":"2626:10:21","nodeType":"VariableDeclaration","scope":4354,"src":"2618:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2618:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"buyer","nameLocation":"2646:5:21","nodeType":"VariableDeclaration","scope":4354,"src":"2638:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4299,"name":"address","nodeType":"ElementaryTypeName","src":"2638:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2599:53:21"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[],"src":"2668:0:21"},"scope":4491,"src":"2579:462:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2821],"body":{"id":4366,"nodeType":"Block","src":"3123:40:21","statements":[{"expression":{"baseExpression":{"id":4362,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"3140:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4364,"indexExpression":{"id":4363,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"3147:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3140:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4361,"id":4365,"nodeType":"Return","src":"3133:23:21"}]},"functionSelector":"6352211e","id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3059:7:21","nodeType":"FunctionDefinition","overrides":{"id":4358,"nodeType":"OverrideSpecifier","overrides":[],"src":"3092:8:21"},"parameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"_tokenID","nameLocation":"3075:8:21","nodeType":"VariableDeclaration","scope":4367,"src":"3067:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"3067:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3066:18:21"},"returnParameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"3115:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3114:9:21"},"scope":4491,"src":"3050:113:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4382,"nodeType":"Block","src":"3232:47:21","statements":[{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3248:24:21","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4374,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"3250:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4376,"indexExpression":{"id":4375,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"3257:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3250:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3270:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3250:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3249:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4373,"id":4381,"nodeType":"Return","src":"3241:31:21"}]},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"3178:6:21","nodeType":"FunctionDefinition","parameters":{"id":4370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4369,"mutability":"mutable","name":"_tokenID","nameLocation":"3193:8:21","nodeType":"VariableDeclaration","scope":4383,"src":"3185:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3185:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3184:18:21"},"returnParameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4383,"src":"3226:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4371,"name":"bool","nodeType":"ElementaryTypeName","src":"3226:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3225:6:21"},"scope":4491,"src":"3169:110:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"3341:131:21","statements":[{"expression":{"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4390,"name":"comToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"3351:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4392,"indexExpression":{"id":4391,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"3360:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3351:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4393,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"3367:3:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3351:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4395,"nodeType":"ExpressionStatement","src":"3351:19:21"},{"assignments":[4397],"declarations":[{"constant":false,"id":4397,"mutability":"mutable","name":"n","nameLocation":"3388:1:21","nodeType":"VariableDeclaration","scope":4416,"src":"3380:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3380:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4401,"initialValue":{"baseExpression":{"id":4398,"name":"noOfComs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"3392:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4400,"indexExpression":{"id":4399,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"3401:3:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3392:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3380:25:21"},{"expression":{"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4402,"name":"addToCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"3415:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":4405,"indexExpression":{"id":4403,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"3424:3:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3415:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4406,"indexExpression":{"id":4404,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"3429:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3415:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4407,"name":"com","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"3434:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3415:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4409,"nodeType":"ExpressionStatement","src":"3415:22:21"},{"expression":{"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4410,"name":"noOfComs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"3447:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4412,"indexExpression":{"id":4411,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"3456:3:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3447:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3464:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3447:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4415,"nodeType":"ExpressionStatement","src":"3447:18:21"}]},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"setAddAndCom","nameLocation":"3294:12:21","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"add","nameLocation":"3315:3:21","nodeType":"VariableDeclaration","scope":4417,"src":"3307:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4384,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4387,"mutability":"mutable","name":"com","nameLocation":"3328:3:21","nodeType":"VariableDeclaration","scope":4417,"src":"3320:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3306:26:21"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[],"src":"3341:0:21"},"scope":4491,"src":"3285:187:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2807],"body":{"id":4450,"nodeType":"Block","src":"3541:191:21","statements":[{"assignments":[4426],"declarations":[{"constant":false,"id":4426,"mutability":"mutable","name":"ownerCom","nameLocation":"3559:8:21","nodeType":"VariableDeclaration","scope":4450,"src":"3551:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4430,"initialValue":{"baseExpression":{"id":4427,"name":"owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"3570:6:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4429,"indexExpression":{"id":4428,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3577:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3570:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3551:35:21"},{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"owner","nameLocation":"3604:5:21","nodeType":"VariableDeclaration","scope":4450,"src":"3596:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4431,"name":"address","nodeType":"ElementaryTypeName","src":"3596:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4436,"initialValue":{"baseExpression":{"id":4433,"name":"comToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"3612:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4435,"indexExpression":{"id":4434,"name":"ownerCom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"3621:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3612:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3596:34:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"3649:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4439,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"3655:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3649:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f70657261746f722061646472657373","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3661:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75","typeString":"literal_string \"Invalid operator address\""},"value":"Invalid operator address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75","typeString":"literal_string \"Invalid operator address\""}],"id":4437,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3641:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3641:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4443,"nodeType":"ExpressionStatement","src":"3641:47:21"},{"expression":{"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4444,"name":"tokenIDToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"3698:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4446,"indexExpression":{"id":4445,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3711:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3698:22:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4447,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"3723:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3698:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4449,"nodeType":"ExpressionStatement","src":"3698:27:21"}]},"functionSelector":"febe4909","id":4451,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3488:7:21","nodeType":"FunctionDefinition","overrides":{"id":4423,"nodeType":"OverrideSpecifier","overrides":[],"src":"3533:8:21"},"parameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"_tokenID","nameLocation":"3504:8:21","nodeType":"VariableDeclaration","scope":4451,"src":"3496:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"op","nameLocation":"3522:2:21","nodeType":"VariableDeclaration","scope":4451,"src":"3514:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4420,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3495:30:21"},"returnParameters":{"id":4424,"nodeType":"ParameterList","parameters":[],"src":"3541:0:21"},"scope":4491,"src":"3479:253:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2814],"body":{"id":4463,"nodeType":"Block","src":"3818:46:21","statements":[{"expression":{"baseExpression":{"id":4459,"name":"tokenIDToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"3835:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4461,"indexExpression":{"id":4460,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"3848:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3835:22:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4458,"id":4462,"nodeType":"Return","src":"3828:29:21"}]},"functionSelector":"d7809252","id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"getApprovedAdd","nameLocation":"3748:14:21","nodeType":"FunctionDefinition","overrides":{"id":4455,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:21"},"parameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"_tokenID","nameLocation":"3771:8:21","nodeType":"VariableDeclaration","scope":4464,"src":"3763:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3762:18:21"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4464,"src":"3810:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"3810:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3809:9:21"},"scope":4491,"src":"3739:125:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4471,"nodeType":"Block","src":"3928:31:21","statements":[{"expression":{"id":4469,"name":"tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"3945:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4468,"id":4470,"nodeType":"Return","src":"3938:14:21"}]},"functionSelector":"efeecb51","id":4472,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfTokens","nameLocation":"3879:17:21","nodeType":"FunctionDefinition","parameters":{"id":4465,"nodeType":"ParameterList","parameters":[],"src":"3896:2:21"},"returnParameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4472,"src":"3919:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"3919:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:9:21"},"scope":4491,"src":"3870:89:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2853],"body":{"id":4480,"nodeType":"Block","src":"4026:29:21","statements":[{"expression":{"id":4478,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"4043:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4477,"id":4479,"nodeType":"Return","src":"4036:12:21"}]},"functionSelector":"06fdde03","id":4481,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3974:4:21","nodeType":"FunctionDefinition","overrides":{"id":4474,"nodeType":"OverrideSpecifier","overrides":[],"src":"3988:8:21"},"parameters":{"id":4473,"nodeType":"ParameterList","parameters":[],"src":"3978:2:21"},"returnParameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4481,"src":"4011:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4475,"name":"string","nodeType":"ElementaryTypeName","src":"4011:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4010:15:21"},"scope":4491,"src":"3965:90:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2858],"body":{"id":4489,"nodeType":"Block","src":"4124:31:21","statements":[{"expression":{"id":4487,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"4141:7:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4486,"id":4488,"nodeType":"Return","src":"4134:14:21"}]},"functionSelector":"95d89b41","id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"4070:6:21","nodeType":"FunctionDefinition","overrides":{"id":4483,"nodeType":"OverrideSpecifier","overrides":[],"src":"4086:8:21"},"parameters":{"id":4482,"nodeType":"ParameterList","parameters":[],"src":"4076:2:21"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4490,"src":"4109:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4484,"name":"string","nodeType":"ElementaryTypeName","src":"4109:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4108:15:21"},"scope":4491,"src":"4061:94:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4492,"src":"786:3371:21","usedErrors":[]}],"src":"31:4127:21"},"id":21}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_127":{"entryPoint":null,"id":127,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"423:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:22"},"nodeType":"YulFunctionCall","src":"433:12:22"},"nodeType":"YulExpressionStatement","src":"433:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:22"},{"body":{"nodeType":"YulBlock","src":"546:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:22"},"nodeType":"YulFunctionCall","src":"556:12:22"},"nodeType":"YulExpressionStatement","src":"556:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:22"},{"body":{"nodeType":"YulBlock","src":"628:54:22","statements":[{"nodeType":"YulAssignment","src":"638:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:22"},"nodeType":"YulFunctionCall","src":"652:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:22"},"nodeType":"YulFunctionCall","src":"668:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:22"},"nodeType":"YulFunctionCall","src":"648:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:22","type":""}],"src":"580:102:22"},{"body":{"nodeType":"YulBlock","src":"716:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:22"},"nodeType":"YulFunctionCall","src":"726:88:22"},"nodeType":"YulExpressionStatement","src":"726:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:22"},"nodeType":"YulFunctionCall","src":"823:15:22"},"nodeType":"YulExpressionStatement","src":"823:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:22"},"nodeType":"YulFunctionCall","src":"847:15:22"},"nodeType":"YulExpressionStatement","src":"847:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:22"},{"body":{"nodeType":"YulBlock","src":"917:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:22"},"nodeType":"YulFunctionCall","src":"957:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:22"},"nodeType":"YulFunctionCall","src":"945:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:22"},"nodeType":"YulFunctionCall","src":"1098:18:22"},"nodeType":"YulExpressionStatement","src":"1098:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:22"},"nodeType":"YulFunctionCall","src":"1036:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:22"},"nodeType":"YulFunctionCall","src":"1072:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:22"},"nodeType":"YulFunctionCall","src":"1033:62:22"},"nodeType":"YulIf","src":"1030:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:22"},"nodeType":"YulFunctionCall","src":"1127:22:22"},"nodeType":"YulExpressionStatement","src":"1127:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:22","type":""}],"src":"874:281:22"},{"body":{"nodeType":"YulBlock","src":"1202:88:22","statements":[{"nodeType":"YulAssignment","src":"1212:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:22"},"nodeType":"YulFunctionCall","src":"1222:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:22"},"nodeType":"YulFunctionCall","src":"1251:33:22"},"nodeType":"YulExpressionStatement","src":"1251:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:22","type":""}],"src":"1161:129:22"},{"body":{"nodeType":"YulBlock","src":"1363:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:22"},"nodeType":"YulFunctionCall","src":"1470:18:22"},"nodeType":"YulExpressionStatement","src":"1470:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:22"},"nodeType":"YulFunctionCall","src":"1437:30:22"},"nodeType":"YulIf","src":"1434:56:22"},{"nodeType":"YulAssignment","src":"1500:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:22"},"nodeType":"YulFunctionCall","src":"1508:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:22"}]},{"nodeType":"YulAssignment","src":"1574:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:22"},"nodeType":"YulFunctionCall","src":"1582:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:22","type":""}],"src":"1296:308:22"},{"body":{"nodeType":"YulBlock","src":"1672:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:22"},"nodeType":"YulFunctionCall","src":"1772:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:22"},"nodeType":"YulFunctionCall","src":"1791:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:22"},"nodeType":"YulFunctionCall","src":"1785:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:22"},"nodeType":"YulFunctionCall","src":"1765:39:22"},"nodeType":"YulExpressionStatement","src":"1765:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:22"},"nodeType":"YulFunctionCall","src":"1709:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:22","statements":[{"nodeType":"YulAssignment","src":"1725:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:22"},"nodeType":"YulFunctionCall","src":"1730:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:22","statements":[]},"src":"1701:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:22"},"nodeType":"YulFunctionCall","src":"1830:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:22"},"nodeType":"YulFunctionCall","src":"1823:27:22"},"nodeType":"YulExpressionStatement","src":"1823:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:22","type":""}],"src":"1610:246:22"},{"body":{"nodeType":"YulBlock","src":"1957:339:22","statements":[{"nodeType":"YulAssignment","src":"1967:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:22"},"nodeType":"YulFunctionCall","src":"1992:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:22"},"nodeType":"YulFunctionCall","src":"1976:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:22"},"nodeType":"YulFunctionCall","src":"2051:21:22"},"nodeType":"YulExpressionStatement","src":"2051:21:22"},{"nodeType":"YulVariableDeclaration","src":"2081:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:22"},"nodeType":"YulFunctionCall","src":"2092:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:22"},"nodeType":"YulFunctionCall","src":"2148:79:22"},"nodeType":"YulExpressionStatement","src":"2148:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:22"},"nodeType":"YulFunctionCall","src":"2123:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:22"},"nodeType":"YulFunctionCall","src":"2120:25:22"},"nodeType":"YulIf","src":"2117:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:22"},"nodeType":"YulFunctionCall","src":"2238:52:22"},"nodeType":"YulExpressionStatement","src":"2238:52:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:22","type":""}],"src":"1862:434:22"},{"body":{"nodeType":"YulBlock","src":"2389:282:22","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:22"},"nodeType":"YulFunctionCall","src":"2440:79:22"},"nodeType":"YulExpressionStatement","src":"2440:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:22"},"nodeType":"YulFunctionCall","src":"2413:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:22"},"nodeType":"YulFunctionCall","src":"2409:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:22"},"nodeType":"YulFunctionCall","src":"2402:35:22"},"nodeType":"YulIf","src":"2399:122:22"},{"nodeType":"YulVariableDeclaration","src":"2530:27:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:22"},"nodeType":"YulFunctionCall","src":"2544:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:22"},"nodeType":"YulFunctionCall","src":"2634:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:22"},"nodeType":"YulFunctionCall","src":"2575:90:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:22","type":""}],"src":"2316:355:22"},{"body":{"nodeType":"YulBlock","src":"2791:739:22","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:22"},"nodeType":"YulFunctionCall","src":"2839:79:22"},"nodeType":"YulExpressionStatement","src":"2839:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:22"},"nodeType":"YulFunctionCall","src":"2808:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:22"},"nodeType":"YulFunctionCall","src":"2804:32:22"},"nodeType":"YulIf","src":"2801:119:22"},{"nodeType":"YulBlock","src":"2930:291:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:22"},"nodeType":"YulFunctionCall","src":"2965:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:22"},"nodeType":"YulFunctionCall","src":"2959:24:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:22"},"nodeType":"YulFunctionCall","src":"3032:79:22"},"nodeType":"YulExpressionStatement","src":"3032:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:22"},"nodeType":"YulFunctionCall","src":"2999:30:22"},"nodeType":"YulIf","src":"2996:117:22"},{"nodeType":"YulAssignment","src":"3127:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:22"},"nodeType":"YulFunctionCall","src":"3179:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:22"},"nodeType":"YulFunctionCall","src":"3137:74:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:22"}]}]},{"nodeType":"YulBlock","src":"3231:292:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:22"},"nodeType":"YulFunctionCall","src":"3266:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:22"},"nodeType":"YulFunctionCall","src":"3260:25:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:22"},"nodeType":"YulFunctionCall","src":"3334:79:22"},"nodeType":"YulExpressionStatement","src":"3334:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:22"},"nodeType":"YulFunctionCall","src":"3301:30:22"},"nodeType":"YulIf","src":"3298:117:22"},{"nodeType":"YulAssignment","src":"3429:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:22"},"nodeType":"YulFunctionCall","src":"3481:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:22"},"nodeType":"YulFunctionCall","src":"3439:74:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:22"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:22","type":""}],"src":"2677:853:22"},{"body":{"nodeType":"YulBlock","src":"3595:40:22","statements":[{"nodeType":"YulAssignment","src":"3606:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:22"},"nodeType":"YulFunctionCall","src":"3616:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:22","type":""}],"src":"3536:99:22"},{"body":{"nodeType":"YulBlock","src":"3669:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:22"},"nodeType":"YulFunctionCall","src":"3679:88:22"},"nodeType":"YulExpressionStatement","src":"3679:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:22"},"nodeType":"YulFunctionCall","src":"3776:15:22"},"nodeType":"YulExpressionStatement","src":"3776:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:22"},"nodeType":"YulFunctionCall","src":"3800:15:22"},"nodeType":"YulExpressionStatement","src":"3800:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:22"},{"body":{"nodeType":"YulBlock","src":"3878:269:22","statements":[{"nodeType":"YulAssignment","src":"3888:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:22"},"nodeType":"YulFunctionCall","src":"3898:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:22"},"nodeType":"YulFunctionCall","src":"3945:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:22","statements":[{"nodeType":"YulAssignment","src":"4010:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:22"},"nodeType":"YulFunctionCall","src":"4020:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:22"},"nodeType":"YulFunctionCall","src":"3969:26:22"},"nodeType":"YulIf","src":"3966:81:22"},{"body":{"nodeType":"YulBlock","src":"4099:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:22"},"nodeType":"YulFunctionCall","src":"4113:18:22"},"nodeType":"YulExpressionStatement","src":"4113:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:22"},"nodeType":"YulFunctionCall","src":"4083:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:22"},"nodeType":"YulFunctionCall","src":"4060:38:22"},"nodeType":"YulIf","src":"4057:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:22","type":""}],"src":"3827:320:22"},{"body":{"nodeType":"YulBlock","src":"4207:87:22","statements":[{"nodeType":"YulAssignment","src":"4217:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:22"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:22"},"nodeType":"YulFunctionCall","src":"4238:14:22"},"nodeType":"YulExpressionStatement","src":"4238:14:22"},{"nodeType":"YulAssignment","src":"4261:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:22"},"nodeType":"YulFunctionCall","src":"4269:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:22"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:22","type":""}],"src":"4153:141:22"},{"body":{"nodeType":"YulBlock","src":"4344:49:22","statements":[{"nodeType":"YulAssignment","src":"4354:33:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:22"},"nodeType":"YulFunctionCall","src":"4368:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:22","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:22"},"nodeType":"YulFunctionCall","src":"4364:23:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:22"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:22","type":""}],"src":"4300:93:22"},{"body":{"nodeType":"YulBlock","src":"4452:54:22","statements":[{"nodeType":"YulAssignment","src":"4462:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:22"},"nodeType":"YulFunctionCall","src":"4483:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:22"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:22","type":""}],"src":"4399:107:22"},{"body":{"nodeType":"YulBlock","src":"4588:317:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:22","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:22"},"nodeType":"YulFunctionCall","src":"4615:18:22"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:22"},"nodeType":"YulFunctionCall","src":"4654:97:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:22","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:22"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:22"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:22"},"nodeType":"YulFunctionCall","src":"4772:39:22"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:22"}]},{"nodeType":"YulAssignment","src":"4820:30:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:22"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:22"},"nodeType":"YulFunctionCall","src":"4840:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:22"},"nodeType":"YulFunctionCall","src":"4829:21:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:22"}]},{"nodeType":"YulAssignment","src":"4859:40:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:22"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:22"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:22"},"nodeType":"YulFunctionCall","src":"4879:19:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:22"},"nodeType":"YulFunctionCall","src":"4869:30:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:22"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:22","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:22","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:22","type":""}],"src":"4512:393:22"},{"body":{"nodeType":"YulBlock","src":"4956:32:22","statements":[{"nodeType":"YulAssignment","src":"4966:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:22","type":""}],"src":"4911:77:22"},{"body":{"nodeType":"YulBlock","src":"5026:28:22","statements":[{"nodeType":"YulAssignment","src":"5036:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:22","type":""}],"src":"4994:60:22"},{"body":{"nodeType":"YulBlock","src":"5120:82:22","statements":[{"nodeType":"YulAssignment","src":"5130:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:22"},"nodeType":"YulFunctionCall","src":"5170:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:22"},"nodeType":"YulFunctionCall","src":"5161:34:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:22"},"nodeType":"YulFunctionCall","src":"5143:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:22","type":""}],"src":"5060:142:22"},{"body":{"nodeType":"YulBlock","src":"5255:28:22","statements":[{"nodeType":"YulAssignment","src":"5265:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:22"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:22","type":""}],"src":"5208:75:22"},{"body":{"nodeType":"YulBlock","src":"5365:193:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:22","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:22"},"nodeType":"YulFunctionCall","src":"5399:39:22"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:22"},"nodeType":"YulFunctionCall","src":"5488:11:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:22"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:22"},"nodeType":"YulFunctionCall","src":"5509:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:22"},"nodeType":"YulFunctionCall","src":"5460:91:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:22"},"nodeType":"YulFunctionCall","src":"5447:105:22"},"nodeType":"YulExpressionStatement","src":"5447:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:22","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:22","type":""}],"src":"5289:269:22"},{"body":{"nodeType":"YulBlock","src":"5613:24:22","statements":[{"nodeType":"YulAssignment","src":"5623:8:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:22","type":""}],"src":"5564:73:22"},{"body":{"nodeType":"YulBlock","src":"5696:136:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:22"},"nodeType":"YulFunctionCall","src":"5720:32:22"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:22"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:22"},"nodeType":"YulFunctionCall","src":"5761:65:22"},"nodeType":"YulExpressionStatement","src":"5761:65:22"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:22","type":""}],"src":"5643:189:22"},{"body":{"nodeType":"YulBlock","src":"5888:136:22","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:22"},"nodeType":"YulFunctionCall","src":"5969:39:22"},"nodeType":"YulExpressionStatement","src":"5969:39:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:22"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:22"},"nodeType":"YulFunctionCall","src":"5905:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:22","statements":[{"nodeType":"YulAssignment","src":"5922:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:22"},"nodeType":"YulFunctionCall","src":"5931:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:22","statements":[]},"src":"5898:120:22"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:22","type":""}],"src":"5838:186:22"},{"body":{"nodeType":"YulBlock","src":"6109:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:22"},"nodeType":"YulFunctionCall","src":"6165:38:22"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:22","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:22"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:22"},"nodeType":"YulFunctionCall","src":"6249:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:22"},"nodeType":"YulFunctionCall","src":"6235:44:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:22","statements":[{"nodeType":"YulAssignment","src":"6438:23:22","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:22"},"nodeType":"YulFunctionCall","src":"6417:18:22"},"nodeType":"YulIf","src":"6414:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:22"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:22"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:22"},"nodeType":"YulFunctionCall","src":"6532:22:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:22"},"nodeType":"YulFunctionCall","src":"6518:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:22"},"nodeType":"YulFunctionCall","src":"6476:80:22"},"nodeType":"YulExpressionStatement","src":"6476:80:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:22"},"nodeType":"YulFunctionCall","src":"6123:11:22"},"nodeType":"YulIf","src":"6120:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:22","type":""}],"src":"6030:543:22"},{"body":{"nodeType":"YulBlock","src":"6642:54:22","statements":[{"nodeType":"YulAssignment","src":"6652:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:22"},"nodeType":"YulFunctionCall","src":"6673:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:22","type":""}],"src":"6579:117:22"},{"body":{"nodeType":"YulBlock","src":"6753:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:22","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:22"},"nodeType":"YulFunctionCall","src":"6808:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:22"},"nodeType":"YulFunctionCall","src":"6823:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:22"},"nodeType":"YulFunctionCall","src":"6779:51:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:22"},"nodeType":"YulFunctionCall","src":"6775:56:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:22","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:22"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:22"},"nodeType":"YulFunctionCall","src":"6850:15:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:22"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:22","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:22","type":""}],"src":"6702:169:22"},{"body":{"nodeType":"YulBlock","src":"6957:214:22","statements":[{"nodeType":"YulAssignment","src":"7090:37:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:22"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:22"},"nodeType":"YulFunctionCall","src":"7098:29:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:22"}]},{"nodeType":"YulAssignment","src":"7136:29:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:22","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:22"},"nodeType":"YulFunctionCall","src":"7153:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:22"},"nodeType":"YulFunctionCall","src":"7144:21:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:22","type":""}],"src":"6876:295:22"},{"body":{"nodeType":"YulBlock","src":"7268:1303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:22"},"nodeType":"YulFunctionCall","src":"7293:37:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:22"},"nodeType":"YulFunctionCall","src":"7417:18:22"},"nodeType":"YulExpressionStatement","src":"7417:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:22"},"nodeType":"YulFunctionCall","src":"7384:30:22"},"nodeType":"YulIf","src":"7381:56:22"},{"nodeType":"YulVariableDeclaration","src":"7447:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:22"},"nodeType":"YulFunctionCall","src":"7487:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:22"},"nodeType":"YulFunctionCall","src":"7461:38:22"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:22"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:22"},"nodeType":"YulFunctionCall","src":"7546:67:22"},"nodeType":"YulExpressionStatement","src":"7546:67:22"},{"nodeType":"YulVariableDeclaration","src":"7623:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:22","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:22"},"nodeType":"YulFunctionCall","src":"7756:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:22"},"nodeType":"YulFunctionCall","src":"7744:22:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:22"},"nodeType":"YulFunctionCall","src":"7794:37:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:22"},"nodeType":"YulFunctionCall","src":"7951:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:22"},"nodeType":"YulFunctionCall","src":"7945:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:22"},"nodeType":"YulFunctionCall","src":"7930:42:22"},"nodeType":"YulExpressionStatement","src":"7930:42:22"},{"nodeType":"YulAssignment","src":"7989:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:22"},"nodeType":"YulFunctionCall","src":"7999:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:22"}]},{"nodeType":"YulAssignment","src":"8030:31:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:22"},"nodeType":"YulFunctionCall","src":"8043:18:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:22"},"nodeType":"YulFunctionCall","src":"7875:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:22","statements":[{"nodeType":"YulAssignment","src":"7892:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:22"},"nodeType":"YulFunctionCall","src":"7897:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:22","statements":[]},"src":"7867:208:22"},{"body":{"nodeType":"YulBlock","src":"8111:156:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:22"},"nodeType":"YulFunctionCall","src":"8152:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:22"},"nodeType":"YulFunctionCall","src":"8146:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:22"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:22"},"nodeType":"YulFunctionCall","src":"8234:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:22"},"nodeType":"YulFunctionCall","src":"8204:48:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:22"},"nodeType":"YulFunctionCall","src":"8189:64:22"},"nodeType":"YulExpressionStatement","src":"8189:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:22"},"nodeType":"YulFunctionCall","src":"8091:19:22"},"nodeType":"YulIf","src":"8088:179:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:22"},"nodeType":"YulFunctionCall","src":"8297:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:22"},"nodeType":"YulFunctionCall","src":"8293:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:22"},"nodeType":"YulFunctionCall","src":"8280:36:22"},"nodeType":"YulExpressionStatement","src":"8280:36:22"}]},"nodeType":"YulCase","src":"7708:618:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:22","statements":[{"nodeType":"YulAssignment","src":"8412:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:22"},"nodeType":"YulFunctionCall","src":"8427:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:22"},"nodeType":"YulFunctionCall","src":"8421:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:22"},"nodeType":"YulIf","src":"8384:77:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:22"},"nodeType":"YulFunctionCall","src":"8487:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:22"},"nodeType":"YulFunctionCall","src":"8474:81:22"},"nodeType":"YulExpressionStatement","src":"8474:81:22"}]},"nodeType":"YulCase","src":"8335:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:22"},"nodeType":"YulFunctionCall","src":"7685:14:22"},"nodeType":"YulSwitch","src":"7678:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:22","type":""}],"src":"7176:1395:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026dd380380620026dd8339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61212080620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220eb2a84e35df6eb3f92f928cc23bf3936fbcfb565b2a61899374599662fb15ef864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DD CODESIZE SUB DUP1 PUSH3 0x26DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2120 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x2A DUP5 0xE3 0x5D 0xF6 0xEB EXTCODEHASH SWAP3 0xF9 0x28 0xCC 0x23 0xBF CODECOPY CALLDATASIZE 0xFB 0xCF 0xB5 PUSH6 0xB2A618993745 SWAP10 PUSH7 0x2FB15EF864736F PUSH13 0x63430008110033000000000000 ","sourceMap":"628:16377:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:16377;;7:75:22;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;628:16377:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_975":{"entryPoint":4485,"id":975,"parameterSlots":4,"returnSlots":0},"@_approve_841":{"entryPoint":2573,"id":841,"parameterSlots":2,"returnSlots":0},"@_baseURI_278":{"entryPoint":4185,"id":278,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_962":{"entryPoint":4479,"id":962,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_949":{"entryPoint":4491,"id":949,"parameterSlots":4,"returnSlots":1},"@_exists_510":{"entryPoint":4414,"id":510,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_544":{"entryPoint":2758,"id":544,"parameterSlots":2,"returnSlots":1},"@_msgSender_1494":{"entryPoint":2565,"id":1494,"parameterSlots":0,"returnSlots":1},"@_ownerOf_492":{"entryPoint":3668,"id":492,"parameterSlots":1,"returnSlots":1},"@_requireMinted_887":{"entryPoint":2490,"id":887,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_479":{"entryPoint":4093,"id":479,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_873":{"entryPoint":3729,"id":873,"parameterSlots":3,"returnSlots":0},"@_transfer_817":{"entryPoint":2907,"id":817,"parameterSlots":3,"returnSlots":0},"@approve_321":{"entryPoint":1142,"id":321,"parameterSlots":2,"returnSlots":0},"@balanceOf_182":{"entryPoint":1683,"id":182,"parameterSlots":1,"returnSlots":1},"@getApproved_339":{"entryPoint":1072,"id":339,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_374":{"entryPoint":2236,"id":374,"parameterSlots":2,"returnSlots":1},"@isContract_1170":{"entryPoint":5221,"id":1170,"parameterSlots":1,"returnSlots":1},"@log10_2472":{"entryPoint":4882,"id":2472,"parameterSlots":1,"returnSlots":1},"@name_220":{"entryPoint":926,"id":220,"parameterSlots":0,"returnSlots":1},"@ownerOf_210":{"entryPoint":1549,"id":210,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_420":{"entryPoint":1517,"id":420,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_450":{"entryPoint":2034,"id":450,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_356":{"entryPoint":2012,"id":356,"parameterSlots":2,"returnSlots":0},"@supportsInterface_158":{"entryPoint":700,"id":158,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1756":{"entryPoint":2384,"id":1756,"parameterSlots":1,"returnSlots":1},"@symbol_230":{"entryPoint":1866,"id":230,"parameterSlots":0,"returnSlots":1},"@toString_1563":{"entryPoint":4208,"id":1563,"parameterSlots":1,"returnSlots":1},"@tokenURI_269":{"entryPoint":2132,"id":269,"parameterSlots":1,"returnSlots":1},"@transferFrom_401":{"entryPoint":1421,"id":401,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6415,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6658,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5940,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6527,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6154,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5876,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5790,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8085,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7685,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6068,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7570,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8284,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8120,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7974,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7332,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6083,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6324,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5256,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6351,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8199,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5463,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8210,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5474,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7510,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5772,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5409,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5276,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5740,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5641,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6400,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5491,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6769,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6275,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":8152,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6722,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6228,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6218,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6223,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5271,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5266,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5533,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8006,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7606,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7752,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7364,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7256,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6818,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":6964,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5832,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5320,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5651,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23150:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"378:105:22","statements":[{"nodeType":"YulAssignment","src":"388:89:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:22","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:22"},"nodeType":"YulFunctionCall","src":"399:78:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:22"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:22","type":""}],"src":"334:149:22"},{"body":{"nodeType":"YulBlock","src":"531:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:22"},"nodeType":"YulFunctionCall","src":"589:12:22"},"nodeType":"YulExpressionStatement","src":"589:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:22"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:22"},"nodeType":"YulFunctionCall","src":"561:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:22"},"nodeType":"YulFunctionCall","src":"551:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:22"},"nodeType":"YulFunctionCall","src":"544:42:22"},"nodeType":"YulIf","src":"541:62:22"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:22","type":""}],"src":"489:120:22"},{"body":{"nodeType":"YulBlock","src":"666:86:22","statements":[{"nodeType":"YulAssignment","src":"676:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:22"},"nodeType":"YulFunctionCall","src":"685:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:22"},"nodeType":"YulFunctionCall","src":"714:32:22"},"nodeType":"YulExpressionStatement","src":"714:32:22"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:22","type":""}],"src":"615:137:22"},{"body":{"nodeType":"YulBlock","src":"823:262:22","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:22"},"nodeType":"YulFunctionCall","src":"871:79:22"},"nodeType":"YulExpressionStatement","src":"871:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:22"},"nodeType":"YulFunctionCall","src":"840:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:22"},"nodeType":"YulFunctionCall","src":"836:32:22"},"nodeType":"YulIf","src":"833:119:22"},{"nodeType":"YulBlock","src":"962:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:22"},"nodeType":"YulFunctionCall","src":"1036:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:22"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:22"},"nodeType":"YulFunctionCall","src":"1016:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:22","type":""}],"src":"758:327:22"},{"body":{"nodeType":"YulBlock","src":"1133:48:22","statements":[{"nodeType":"YulAssignment","src":"1143:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:22"},"nodeType":"YulFunctionCall","src":"1161:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:22"},"nodeType":"YulFunctionCall","src":"1154:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:22","type":""}],"src":"1091:90:22"},{"body":{"nodeType":"YulBlock","src":"1246:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:22"},"nodeType":"YulFunctionCall","src":"1268:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:22"},"nodeType":"YulFunctionCall","src":"1256:34:22"},"nodeType":"YulExpressionStatement","src":"1256:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:22","type":""}],"src":"1187:109:22"},{"body":{"nodeType":"YulBlock","src":"1394:118:22","statements":[{"nodeType":"YulAssignment","src":"1404:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:22"},"nodeType":"YulFunctionCall","src":"1412:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:22"},"nodeType":"YulFunctionCall","src":"1487:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:22"},"nodeType":"YulFunctionCall","src":"1440:65:22"},"nodeType":"YulExpressionStatement","src":"1440:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:22","type":""}],"src":"1302:210:22"},{"body":{"nodeType":"YulBlock","src":"1577:40:22","statements":[{"nodeType":"YulAssignment","src":"1588:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:22"},"nodeType":"YulFunctionCall","src":"1598:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:22","type":""}],"src":"1518:99:22"},{"body":{"nodeType":"YulBlock","src":"1719:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:22"},"nodeType":"YulFunctionCall","src":"1729:19:22"},"nodeType":"YulExpressionStatement","src":"1729:19:22"},{"nodeType":"YulAssignment","src":"1757:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:22"},"nodeType":"YulFunctionCall","src":"1772:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:22","type":""}],"src":"1623:169:22"},{"body":{"nodeType":"YulBlock","src":"1860:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:22"},"nodeType":"YulFunctionCall","src":"1960:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:22"},"nodeType":"YulFunctionCall","src":"1979:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:22"},"nodeType":"YulFunctionCall","src":"1973:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:22"},"nodeType":"YulFunctionCall","src":"1953:39:22"},"nodeType":"YulExpressionStatement","src":"1953:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:22"},"nodeType":"YulFunctionCall","src":"1897:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:22","statements":[{"nodeType":"YulAssignment","src":"1913:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:22"},"nodeType":"YulFunctionCall","src":"1918:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:22","statements":[]},"src":"1889:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:22"},"nodeType":"YulFunctionCall","src":"2018:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:22"},"nodeType":"YulFunctionCall","src":"2011:27:22"},"nodeType":"YulExpressionStatement","src":"2011:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:22","type":""}],"src":"1798:246:22"},{"body":{"nodeType":"YulBlock","src":"2098:54:22","statements":[{"nodeType":"YulAssignment","src":"2108:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:22"},"nodeType":"YulFunctionCall","src":"2122:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:22"},"nodeType":"YulFunctionCall","src":"2138:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:22"},"nodeType":"YulFunctionCall","src":"2118:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:22","type":""}],"src":"2050:102:22"},{"body":{"nodeType":"YulBlock","src":"2250:285:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:22"},"nodeType":"YulFunctionCall","src":"2274:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:22"},"nodeType":"YulFunctionCall","src":"2329:71:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:22"},"nodeType":"YulFunctionCall","src":"2444:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:22"},"nodeType":"YulFunctionCall","src":"2409:65:22"},"nodeType":"YulExpressionStatement","src":"2409:65:22"},{"nodeType":"YulAssignment","src":"2483:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:22"},"nodeType":"YulFunctionCall","src":"2499:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:22"},"nodeType":"YulFunctionCall","src":"2490:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:22","type":""}],"src":"2158:377:22"},{"body":{"nodeType":"YulBlock","src":"2659:195:22","statements":[{"nodeType":"YulAssignment","src":"2669:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:22"},"nodeType":"YulFunctionCall","src":"2677:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:22"},"nodeType":"YulFunctionCall","src":"2712:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:22"},"nodeType":"YulFunctionCall","src":"2731:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:22"},"nodeType":"YulFunctionCall","src":"2705:47:22"},"nodeType":"YulExpressionStatement","src":"2705:47:22"},{"nodeType":"YulAssignment","src":"2761:86:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:22"},"nodeType":"YulFunctionCall","src":"2769:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:22","type":""}],"src":"2541:313:22"},{"body":{"nodeType":"YulBlock","src":"2905:32:22","statements":[{"nodeType":"YulAssignment","src":"2915:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:22","type":""}],"src":"2860:77:22"},{"body":{"nodeType":"YulBlock","src":"2986:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:22"},"nodeType":"YulFunctionCall","src":"3045:12:22"},"nodeType":"YulExpressionStatement","src":"3045:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:22"},"nodeType":"YulFunctionCall","src":"3016:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:22"},"nodeType":"YulFunctionCall","src":"3006:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:22"},"nodeType":"YulFunctionCall","src":"2999:43:22"},"nodeType":"YulIf","src":"2996:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:22","type":""}],"src":"2943:122:22"},{"body":{"nodeType":"YulBlock","src":"3123:87:22","statements":[{"nodeType":"YulAssignment","src":"3133:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:22"},"nodeType":"YulFunctionCall","src":"3142:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:22"},"nodeType":"YulFunctionCall","src":"3171:33:22"},"nodeType":"YulExpressionStatement","src":"3171:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:22","type":""}],"src":"3071:139:22"},{"body":{"nodeType":"YulBlock","src":"3282:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:22"},"nodeType":"YulFunctionCall","src":"3330:79:22"},"nodeType":"YulExpressionStatement","src":"3330:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:22"},"nodeType":"YulFunctionCall","src":"3299:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:22"},"nodeType":"YulFunctionCall","src":"3295:32:22"},"nodeType":"YulIf","src":"3292:119:22"},{"nodeType":"YulBlock","src":"3421:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:22"},"nodeType":"YulFunctionCall","src":"3496:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:22"},"nodeType":"YulFunctionCall","src":"3475:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:22","type":""}],"src":"3216:329:22"},{"body":{"nodeType":"YulBlock","src":"3596:81:22","statements":[{"nodeType":"YulAssignment","src":"3606:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:22"},"nodeType":"YulFunctionCall","src":"3617:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:22","type":""}],"src":"3551:126:22"},{"body":{"nodeType":"YulBlock","src":"3728:51:22","statements":[{"nodeType":"YulAssignment","src":"3738:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:22"},"nodeType":"YulFunctionCall","src":"3749:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:22","type":""}],"src":"3683:96:22"},{"body":{"nodeType":"YulBlock","src":"3850:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:22"},"nodeType":"YulFunctionCall","src":"3872:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:22"},"nodeType":"YulFunctionCall","src":"3860:37:22"},"nodeType":"YulExpressionStatement","src":"3860:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:22","type":""}],"src":"3785:118:22"},{"body":{"nodeType":"YulBlock","src":"4007:124:22","statements":[{"nodeType":"YulAssignment","src":"4017:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:22"},"nodeType":"YulFunctionCall","src":"4025:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:22"},"nodeType":"YulFunctionCall","src":"4106:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:22"},"nodeType":"YulFunctionCall","src":"4053:71:22"},"nodeType":"YulExpressionStatement","src":"4053:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:22","type":""}],"src":"3909:222:22"},{"body":{"nodeType":"YulBlock","src":"4180:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:22"},"nodeType":"YulFunctionCall","src":"4239:12:22"},"nodeType":"YulExpressionStatement","src":"4239:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:22"},"nodeType":"YulFunctionCall","src":"4210:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:22"},"nodeType":"YulFunctionCall","src":"4200:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:22"},"nodeType":"YulFunctionCall","src":"4193:43:22"},"nodeType":"YulIf","src":"4190:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:22","type":""}],"src":"4137:122:22"},{"body":{"nodeType":"YulBlock","src":"4317:87:22","statements":[{"nodeType":"YulAssignment","src":"4327:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:22"},"nodeType":"YulFunctionCall","src":"4336:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:22"},"nodeType":"YulFunctionCall","src":"4365:33:22"},"nodeType":"YulExpressionStatement","src":"4365:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:22","type":""}],"src":"4265:139:22"},{"body":{"nodeType":"YulBlock","src":"4493:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:22"},"nodeType":"YulFunctionCall","src":"4541:79:22"},"nodeType":"YulExpressionStatement","src":"4541:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:22"},"nodeType":"YulFunctionCall","src":"4510:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:22"},"nodeType":"YulFunctionCall","src":"4506:32:22"},"nodeType":"YulIf","src":"4503:119:22"},{"nodeType":"YulBlock","src":"4632:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:22"},"nodeType":"YulFunctionCall","src":"4707:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:22"},"nodeType":"YulFunctionCall","src":"4686:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:22"}]}]},{"nodeType":"YulBlock","src":"4759:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:22"},"nodeType":"YulFunctionCall","src":"4835:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:22"},"nodeType":"YulFunctionCall","src":"4814:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:22","type":""}],"src":"4410:474:22"},{"body":{"nodeType":"YulBlock","src":"4990:519:22","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:22"},"nodeType":"YulFunctionCall","src":"5038:79:22"},"nodeType":"YulExpressionStatement","src":"5038:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:22"},"nodeType":"YulFunctionCall","src":"5007:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:22"},"nodeType":"YulFunctionCall","src":"5003:32:22"},"nodeType":"YulIf","src":"5000:119:22"},{"nodeType":"YulBlock","src":"5129:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:22"},"nodeType":"YulFunctionCall","src":"5204:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:22"},"nodeType":"YulFunctionCall","src":"5183:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:22"}]}]},{"nodeType":"YulBlock","src":"5256:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:22"},"nodeType":"YulFunctionCall","src":"5332:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:22"},"nodeType":"YulFunctionCall","src":"5311:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:22"}]}]},{"nodeType":"YulBlock","src":"5384:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:22"},"nodeType":"YulFunctionCall","src":"5460:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:22"},"nodeType":"YulFunctionCall","src":"5439:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:22","type":""}],"src":"4890:619:22"},{"body":{"nodeType":"YulBlock","src":"5581:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:22"},"nodeType":"YulFunctionCall","src":"5629:79:22"},"nodeType":"YulExpressionStatement","src":"5629:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:22"},"nodeType":"YulFunctionCall","src":"5598:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:22"},"nodeType":"YulFunctionCall","src":"5594:32:22"},"nodeType":"YulIf","src":"5591:119:22"},{"nodeType":"YulBlock","src":"5720:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:22"},"nodeType":"YulFunctionCall","src":"5795:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:22"},"nodeType":"YulFunctionCall","src":"5774:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:22","type":""}],"src":"5515:329:22"},{"body":{"nodeType":"YulBlock","src":"5915:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:22"},"nodeType":"YulFunctionCall","src":"5937:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:22"},"nodeType":"YulFunctionCall","src":"5925:37:22"},"nodeType":"YulExpressionStatement","src":"5925:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:22","type":""}],"src":"5850:118:22"},{"body":{"nodeType":"YulBlock","src":"6072:124:22","statements":[{"nodeType":"YulAssignment","src":"6082:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:22"},"nodeType":"YulFunctionCall","src":"6090:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:22"},"nodeType":"YulFunctionCall","src":"6171:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:22"},"nodeType":"YulFunctionCall","src":"6118:71:22"},"nodeType":"YulExpressionStatement","src":"6118:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:22","type":""}],"src":"5974:222:22"},{"body":{"nodeType":"YulBlock","src":"6242:76:22","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:22"},"nodeType":"YulFunctionCall","src":"6298:12:22"},"nodeType":"YulExpressionStatement","src":"6298:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:22"},"nodeType":"YulFunctionCall","src":"6272:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:22"},"nodeType":"YulFunctionCall","src":"6262:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:22"},"nodeType":"YulFunctionCall","src":"6255:40:22"},"nodeType":"YulIf","src":"6252:60:22"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:22","type":""}],"src":"6202:116:22"},{"body":{"nodeType":"YulBlock","src":"6373:84:22","statements":[{"nodeType":"YulAssignment","src":"6383:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:22"},"nodeType":"YulFunctionCall","src":"6392:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:22"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:22"},"nodeType":"YulFunctionCall","src":"6421:30:22"},"nodeType":"YulExpressionStatement","src":"6421:30:22"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:22","type":""}],"src":"6324:133:22"},{"body":{"nodeType":"YulBlock","src":"6543:388:22","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:22"},"nodeType":"YulFunctionCall","src":"6591:79:22"},"nodeType":"YulExpressionStatement","src":"6591:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:22"},"nodeType":"YulFunctionCall","src":"6560:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:22"},"nodeType":"YulFunctionCall","src":"6556:32:22"},"nodeType":"YulIf","src":"6553:119:22"},{"nodeType":"YulBlock","src":"6682:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:22"},"nodeType":"YulFunctionCall","src":"6757:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:22"},"nodeType":"YulFunctionCall","src":"6736:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:22"}]}]},{"nodeType":"YulBlock","src":"6809:115:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:22"},"nodeType":"YulFunctionCall","src":"6882:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:22"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:22"},"nodeType":"YulFunctionCall","src":"6864:50:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:22","type":""}],"src":"6463:468:22"},{"body":{"nodeType":"YulBlock","src":"7026:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:22"},"nodeType":"YulFunctionCall","src":"7036:12:22"},"nodeType":"YulExpressionStatement","src":"7036:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:22"},{"body":{"nodeType":"YulBlock","src":"7149:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:22"},"nodeType":"YulFunctionCall","src":"7159:12:22"},"nodeType":"YulExpressionStatement","src":"7159:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:22"},{"body":{"nodeType":"YulBlock","src":"7211:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:22"},"nodeType":"YulFunctionCall","src":"7221:88:22"},"nodeType":"YulExpressionStatement","src":"7221:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:22"},"nodeType":"YulFunctionCall","src":"7318:15:22"},"nodeType":"YulExpressionStatement","src":"7318:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:22"},"nodeType":"YulFunctionCall","src":"7342:15:22"},"nodeType":"YulExpressionStatement","src":"7342:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:22"},{"body":{"nodeType":"YulBlock","src":"7412:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:22"},"nodeType":"YulFunctionCall","src":"7452:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:22"},"nodeType":"YulFunctionCall","src":"7440:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:22"},"nodeType":"YulFunctionCall","src":"7593:18:22"},"nodeType":"YulExpressionStatement","src":"7593:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:22"},"nodeType":"YulFunctionCall","src":"7531:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:22"},"nodeType":"YulFunctionCall","src":"7567:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:22"},"nodeType":"YulFunctionCall","src":"7528:62:22"},"nodeType":"YulIf","src":"7525:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:22"},"nodeType":"YulFunctionCall","src":"7622:22:22"},"nodeType":"YulExpressionStatement","src":"7622:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:22","type":""}],"src":"7369:281:22"},{"body":{"nodeType":"YulBlock","src":"7697:88:22","statements":[{"nodeType":"YulAssignment","src":"7707:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:22"},"nodeType":"YulFunctionCall","src":"7717:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:22"},"nodeType":"YulFunctionCall","src":"7746:33:22"},"nodeType":"YulExpressionStatement","src":"7746:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:22","type":""}],"src":"7656:129:22"},{"body":{"nodeType":"YulBlock","src":"7857:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:22"},"nodeType":"YulFunctionCall","src":"7964:18:22"},"nodeType":"YulExpressionStatement","src":"7964:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:22"},"nodeType":"YulFunctionCall","src":"7931:30:22"},"nodeType":"YulIf","src":"7928:56:22"},{"nodeType":"YulAssignment","src":"7994:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:22"},"nodeType":"YulFunctionCall","src":"8002:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:22"}]},{"nodeType":"YulAssignment","src":"8068:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:22"},"nodeType":"YulFunctionCall","src":"8076:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:22"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:22","type":""}],"src":"7791:307:22"},{"body":{"nodeType":"YulBlock","src":"8168:82:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:22"},"nodeType":"YulFunctionCall","src":"8178:30:22"},"nodeType":"YulExpressionStatement","src":"8178:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:22"},"nodeType":"YulFunctionCall","src":"8224:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:22"},"nodeType":"YulFunctionCall","src":"8217:27:22"},"nodeType":"YulExpressionStatement","src":"8217:27:22"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:22","type":""}],"src":"8104:146:22"},{"body":{"nodeType":"YulBlock","src":"8339:340:22","statements":[{"nodeType":"YulAssignment","src":"8349:74:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:22"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:22"},"nodeType":"YulFunctionCall","src":"8374:48:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:22"},"nodeType":"YulFunctionCall","src":"8358:65:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:22"},"nodeType":"YulFunctionCall","src":"8432:21:22"},"nodeType":"YulExpressionStatement","src":"8432:21:22"},{"nodeType":"YulVariableDeclaration","src":"8462:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:22"},"nodeType":"YulFunctionCall","src":"8473:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:22"},"nodeType":"YulFunctionCall","src":"8529:79:22"},"nodeType":"YulExpressionStatement","src":"8529:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:22"},"nodeType":"YulFunctionCall","src":"8504:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:22"},"nodeType":"YulFunctionCall","src":"8501:25:22"},"nodeType":"YulIf","src":"8498:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:22"},"nodeType":"YulFunctionCall","src":"8619:54:22"},"nodeType":"YulExpressionStatement","src":"8619:54:22"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:22","type":""}],"src":"8256:423:22"},{"body":{"nodeType":"YulBlock","src":"8759:277:22","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:22"},"nodeType":"YulFunctionCall","src":"8810:79:22"},"nodeType":"YulExpressionStatement","src":"8810:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:22"},"nodeType":"YulFunctionCall","src":"8783:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:22"},"nodeType":"YulFunctionCall","src":"8779:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:22"},"nodeType":"YulFunctionCall","src":"8772:35:22"},"nodeType":"YulIf","src":"8769:122:22"},{"nodeType":"YulVariableDeclaration","src":"8900:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:22"},"nodeType":"YulFunctionCall","src":"8914:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:22","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:22"},"nodeType":"YulFunctionCall","src":"8999:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:22"},"nodeType":"YulFunctionCall","src":"8952:78:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:22"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:22","type":""}],"src":"8698:338:22"},{"body":{"nodeType":"YulBlock","src":"9168:817:22","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:22"},"nodeType":"YulFunctionCall","src":"9217:79:22"},"nodeType":"YulExpressionStatement","src":"9217:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:22"},"nodeType":"YulFunctionCall","src":"9185:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:22"},"nodeType":"YulFunctionCall","src":"9181:33:22"},"nodeType":"YulIf","src":"9178:120:22"},{"nodeType":"YulBlock","src":"9308:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:22","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:22"},"nodeType":"YulFunctionCall","src":"9383:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:22"},"nodeType":"YulFunctionCall","src":"9362:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:22"}]}]},{"nodeType":"YulBlock","src":"9435:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:22","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:22"},"nodeType":"YulFunctionCall","src":"9511:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:22"},"nodeType":"YulFunctionCall","src":"9490:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:22"}]}]},{"nodeType":"YulBlock","src":"9563:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:22","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:22"},"nodeType":"YulFunctionCall","src":"9639:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:22"},"nodeType":"YulFunctionCall","src":"9618:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:22"}]}]},{"nodeType":"YulBlock","src":"9691:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:22"},"nodeType":"YulFunctionCall","src":"9733:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:22"},"nodeType":"YulFunctionCall","src":"9720:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:22"},"nodeType":"YulFunctionCall","src":"9801:79:22"},"nodeType":"YulExpressionStatement","src":"9801:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:22"},"nodeType":"YulFunctionCall","src":"9768:30:22"},"nodeType":"YulIf","src":"9765:117:22"},{"nodeType":"YulAssignment","src":"9896:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:22"},"nodeType":"YulFunctionCall","src":"9936:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:22"},"nodeType":"YulFunctionCall","src":"9906:62:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:22","type":""}],"src":"9042:943:22"},{"body":{"nodeType":"YulBlock","src":"10074:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:22"},"nodeType":"YulFunctionCall","src":"10122:79:22"},"nodeType":"YulExpressionStatement","src":"10122:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:22"},"nodeType":"YulFunctionCall","src":"10091:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:22"},"nodeType":"YulFunctionCall","src":"10087:32:22"},"nodeType":"YulIf","src":"10084:119:22"},{"nodeType":"YulBlock","src":"10213:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:22","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:22"},"nodeType":"YulFunctionCall","src":"10288:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:22"},"nodeType":"YulFunctionCall","src":"10267:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:22"}]}]},{"nodeType":"YulBlock","src":"10340:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:22","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:22"},"nodeType":"YulFunctionCall","src":"10416:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:22"},"nodeType":"YulFunctionCall","src":"10395:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:22","type":""}],"src":"9991:474:22"},{"body":{"nodeType":"YulBlock","src":"10499:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:22"},"nodeType":"YulFunctionCall","src":"10509:88:22"},"nodeType":"YulExpressionStatement","src":"10509:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:22"},"nodeType":"YulFunctionCall","src":"10606:15:22"},"nodeType":"YulExpressionStatement","src":"10606:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:22"},"nodeType":"YulFunctionCall","src":"10630:15:22"},"nodeType":"YulExpressionStatement","src":"10630:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:22"},{"body":{"nodeType":"YulBlock","src":"10708:269:22","statements":[{"nodeType":"YulAssignment","src":"10718:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:22"},"nodeType":"YulFunctionCall","src":"10728:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:22"},"nodeType":"YulFunctionCall","src":"10775:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:22","statements":[{"nodeType":"YulAssignment","src":"10840:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:22"},"nodeType":"YulFunctionCall","src":"10850:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:22"},"nodeType":"YulFunctionCall","src":"10799:26:22"},"nodeType":"YulIf","src":"10796:81:22"},{"body":{"nodeType":"YulBlock","src":"10929:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:22"},"nodeType":"YulFunctionCall","src":"10943:18:22"},"nodeType":"YulExpressionStatement","src":"10943:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:22"},"nodeType":"YulFunctionCall","src":"10913:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:22"},"nodeType":"YulFunctionCall","src":"10890:38:22"},"nodeType":"YulIf","src":"10887:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:22","type":""}],"src":"10657:320:22"},{"body":{"nodeType":"YulBlock","src":"11089:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11111:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11119:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:22"},"nodeType":"YulFunctionCall","src":"11107:14:22"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11123:34:22","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:22"},"nodeType":"YulFunctionCall","src":"11100:58:22"},"nodeType":"YulExpressionStatement","src":"11100:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11179:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11175:3:22"},"nodeType":"YulFunctionCall","src":"11175:15:22"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11192:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11168:6:22"},"nodeType":"YulFunctionCall","src":"11168:28:22"},"nodeType":"YulExpressionStatement","src":"11168:28:22"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11081:6:22","type":""}],"src":"10983:220:22"},{"body":{"nodeType":"YulBlock","src":"11355:220:22","statements":[{"nodeType":"YulAssignment","src":"11365:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11431:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11436:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11372:58:22"},"nodeType":"YulFunctionCall","src":"11372:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11365:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11537:3:22"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11448:88:22"},"nodeType":"YulFunctionCall","src":"11448:93:22"},"nodeType":"YulExpressionStatement","src":"11448:93:22"},{"nodeType":"YulAssignment","src":"11550:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11561:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11566:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11557:3:22"},"nodeType":"YulFunctionCall","src":"11557:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11550:3:22"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11343:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11351:3:22","type":""}],"src":"11209:366:22"},{"body":{"nodeType":"YulBlock","src":"11752:248:22","statements":[{"nodeType":"YulAssignment","src":"11762:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11774:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11785:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11770:3:22"},"nodeType":"YulFunctionCall","src":"11770:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11762:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11809:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11820:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11805:3:22"},"nodeType":"YulFunctionCall","src":"11805:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11828:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11834:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11824:3:22"},"nodeType":"YulFunctionCall","src":"11824:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11798:6:22"},"nodeType":"YulFunctionCall","src":"11798:47:22"},"nodeType":"YulExpressionStatement","src":"11798:47:22"},{"nodeType":"YulAssignment","src":"11854:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11988:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11862:124:22"},"nodeType":"YulFunctionCall","src":"11862:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11854:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11732:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11747:4:22","type":""}],"src":"11581:419:22"},{"body":{"nodeType":"YulBlock","src":"12112:142:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12134:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12142:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12130:3:22"},"nodeType":"YulFunctionCall","src":"12130:14:22"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12146:34:22","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12123:6:22"},"nodeType":"YulFunctionCall","src":"12123:58:22"},"nodeType":"YulExpressionStatement","src":"12123:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12202:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12210:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12198:3:22"},"nodeType":"YulFunctionCall","src":"12198:15:22"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12215:31:22","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12191:6:22"},"nodeType":"YulFunctionCall","src":"12191:56:22"},"nodeType":"YulExpressionStatement","src":"12191:56:22"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12104:6:22","type":""}],"src":"12006:248:22"},{"body":{"nodeType":"YulBlock","src":"12406:220:22","statements":[{"nodeType":"YulAssignment","src":"12416:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12482:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12487:2:22","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12423:58:22"},"nodeType":"YulFunctionCall","src":"12423:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12416:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12588:3:22"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12499:88:22"},"nodeType":"YulFunctionCall","src":"12499:93:22"},"nodeType":"YulExpressionStatement","src":"12499:93:22"},{"nodeType":"YulAssignment","src":"12601:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12612:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12617:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12608:3:22"},"nodeType":"YulFunctionCall","src":"12608:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12601:3:22"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12394:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12402:3:22","type":""}],"src":"12260:366:22"},{"body":{"nodeType":"YulBlock","src":"12803:248:22","statements":[{"nodeType":"YulAssignment","src":"12813:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12825:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12836:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12821:3:22"},"nodeType":"YulFunctionCall","src":"12821:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12813:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12860:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12871:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12856:3:22"},"nodeType":"YulFunctionCall","src":"12856:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12879:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"12885:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12875:3:22"},"nodeType":"YulFunctionCall","src":"12875:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12849:6:22"},"nodeType":"YulFunctionCall","src":"12849:47:22"},"nodeType":"YulExpressionStatement","src":"12849:47:22"},{"nodeType":"YulAssignment","src":"12905:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13039:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12913:124:22"},"nodeType":"YulFunctionCall","src":"12913:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12905:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12783:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12798:4:22","type":""}],"src":"12632:419:22"},{"body":{"nodeType":"YulBlock","src":"13163:126:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13185:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13193:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13181:3:22"},"nodeType":"YulFunctionCall","src":"13181:14:22"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13197:34:22","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13174:6:22"},"nodeType":"YulFunctionCall","src":"13174:58:22"},"nodeType":"YulExpressionStatement","src":"13174:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13253:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13261:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13249:3:22"},"nodeType":"YulFunctionCall","src":"13249:15:22"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13266:15:22","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13242:6:22"},"nodeType":"YulFunctionCall","src":"13242:40:22"},"nodeType":"YulExpressionStatement","src":"13242:40:22"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13155:6:22","type":""}],"src":"13057:232:22"},{"body":{"nodeType":"YulBlock","src":"13441:220:22","statements":[{"nodeType":"YulAssignment","src":"13451:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13517:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13522:2:22","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13458:58:22"},"nodeType":"YulFunctionCall","src":"13458:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13451:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13623:3:22"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13534:88:22"},"nodeType":"YulFunctionCall","src":"13534:93:22"},"nodeType":"YulExpressionStatement","src":"13534:93:22"},{"nodeType":"YulAssignment","src":"13636:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13647:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13652:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13643:3:22"},"nodeType":"YulFunctionCall","src":"13643:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13636:3:22"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13429:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13437:3:22","type":""}],"src":"13295:366:22"},{"body":{"nodeType":"YulBlock","src":"13838:248:22","statements":[{"nodeType":"YulAssignment","src":"13848:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13860:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13871:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13856:3:22"},"nodeType":"YulFunctionCall","src":"13856:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13848:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13895:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13906:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:22"},"nodeType":"YulFunctionCall","src":"13891:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13914:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13920:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13910:3:22"},"nodeType":"YulFunctionCall","src":"13910:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13884:6:22"},"nodeType":"YulFunctionCall","src":"13884:47:22"},"nodeType":"YulExpressionStatement","src":"13884:47:22"},{"nodeType":"YulAssignment","src":"13940:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14074:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13948:124:22"},"nodeType":"YulFunctionCall","src":"13948:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13940:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13818:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13833:4:22","type":""}],"src":"13667:419:22"},{"body":{"nodeType":"YulBlock","src":"14198:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14220:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"14228:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14216:3:22"},"nodeType":"YulFunctionCall","src":"14216:14:22"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14232:26:22","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14209:6:22"},"nodeType":"YulFunctionCall","src":"14209:50:22"},"nodeType":"YulExpressionStatement","src":"14209:50:22"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14190:6:22","type":""}],"src":"14092:174:22"},{"body":{"nodeType":"YulBlock","src":"14418:220:22","statements":[{"nodeType":"YulAssignment","src":"14428:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14494:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14499:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14435:58:22"},"nodeType":"YulFunctionCall","src":"14435:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14428:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14600:3:22"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14511:88:22"},"nodeType":"YulFunctionCall","src":"14511:93:22"},"nodeType":"YulExpressionStatement","src":"14511:93:22"},{"nodeType":"YulAssignment","src":"14613:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14624:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14629:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14620:3:22"},"nodeType":"YulFunctionCall","src":"14620:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14613:3:22"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14406:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14414:3:22","type":""}],"src":"14272:366:22"},{"body":{"nodeType":"YulBlock","src":"14815:248:22","statements":[{"nodeType":"YulAssignment","src":"14825:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14837:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14848:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14833:3:22"},"nodeType":"YulFunctionCall","src":"14833:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14825:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14872:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14883:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14868:3:22"},"nodeType":"YulFunctionCall","src":"14868:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14891:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14897:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14887:3:22"},"nodeType":"YulFunctionCall","src":"14887:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14861:6:22"},"nodeType":"YulFunctionCall","src":"14861:47:22"},"nodeType":"YulExpressionStatement","src":"14861:47:22"},{"nodeType":"YulAssignment","src":"14917:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15051:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14925:124:22"},"nodeType":"YulFunctionCall","src":"14925:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14917:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14795:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14810:4:22","type":""}],"src":"14644:419:22"},{"body":{"nodeType":"YulBlock","src":"15175:122:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15197:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"15205:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15193:3:22"},"nodeType":"YulFunctionCall","src":"15193:14:22"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15209:34:22","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15186:6:22"},"nodeType":"YulFunctionCall","src":"15186:58:22"},"nodeType":"YulExpressionStatement","src":"15186:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15265:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"15273:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15261:3:22"},"nodeType":"YulFunctionCall","src":"15261:15:22"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15278:11:22","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15254:6:22"},"nodeType":"YulFunctionCall","src":"15254:36:22"},"nodeType":"YulExpressionStatement","src":"15254:36:22"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15167:6:22","type":""}],"src":"15069:228:22"},{"body":{"nodeType":"YulBlock","src":"15449:220:22","statements":[{"nodeType":"YulAssignment","src":"15459:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15525:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15530:2:22","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15466:58:22"},"nodeType":"YulFunctionCall","src":"15466:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15459:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15631:3:22"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15542:88:22"},"nodeType":"YulFunctionCall","src":"15542:93:22"},"nodeType":"YulExpressionStatement","src":"15542:93:22"},{"nodeType":"YulAssignment","src":"15644:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15655:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15660:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15651:3:22"},"nodeType":"YulFunctionCall","src":"15651:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15644:3:22"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15437:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15445:3:22","type":""}],"src":"15303:366:22"},{"body":{"nodeType":"YulBlock","src":"15846:248:22","statements":[{"nodeType":"YulAssignment","src":"15856:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15868:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15879:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15864:3:22"},"nodeType":"YulFunctionCall","src":"15864:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15856:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15903:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15914:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15899:3:22"},"nodeType":"YulFunctionCall","src":"15899:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15922:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15928:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15918:3:22"},"nodeType":"YulFunctionCall","src":"15918:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15892:6:22"},"nodeType":"YulFunctionCall","src":"15892:47:22"},"nodeType":"YulExpressionStatement","src":"15892:47:22"},{"nodeType":"YulAssignment","src":"15948:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16082:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15956:124:22"},"nodeType":"YulFunctionCall","src":"15956:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15948:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15826:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15841:4:22","type":""}],"src":"15675:419:22"},{"body":{"nodeType":"YulBlock","src":"16214:34:22","statements":[{"nodeType":"YulAssignment","src":"16224:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"16239:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16224:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16186:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16191:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16202:11:22","type":""}],"src":"16100:148:22"},{"body":{"nodeType":"YulBlock","src":"16364:280:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16374:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16421:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16388:32:22"},"nodeType":"YulFunctionCall","src":"16388:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16378:6:22","type":""}]},{"nodeType":"YulAssignment","src":"16436:96:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16520:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16525:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16443:76:22"},"nodeType":"YulFunctionCall","src":"16443:89:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16436:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16580:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"16587:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16576:3:22"},"nodeType":"YulFunctionCall","src":"16576:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"16594:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16599:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16541:34:22"},"nodeType":"YulFunctionCall","src":"16541:65:22"},"nodeType":"YulExpressionStatement","src":"16541:65:22"},{"nodeType":"YulAssignment","src":"16615:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16626:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16631:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16622:3:22"},"nodeType":"YulFunctionCall","src":"16622:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16615:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16345:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16352:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16360:3:22","type":""}],"src":"16254:390:22"},{"body":{"nodeType":"YulBlock","src":"16834:251:22","statements":[{"nodeType":"YulAssignment","src":"16845:102:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16934:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"16943:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16852:81:22"},"nodeType":"YulFunctionCall","src":"16852:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16845:3:22"}]},{"nodeType":"YulAssignment","src":"16957:102:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17046:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"17055:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16964:81:22"},"nodeType":"YulFunctionCall","src":"16964:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16957:3:22"}]},{"nodeType":"YulAssignment","src":"17069:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"17076:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17069:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16805:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16811:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16819:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16830:3:22","type":""}],"src":"16650:435:22"},{"body":{"nodeType":"YulBlock","src":"17197:118:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17219:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"17227:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17215:3:22"},"nodeType":"YulFunctionCall","src":"17215:14:22"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17231:34:22","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17208:6:22"},"nodeType":"YulFunctionCall","src":"17208:58:22"},"nodeType":"YulExpressionStatement","src":"17208:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17287:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"17295:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17283:3:22"},"nodeType":"YulFunctionCall","src":"17283:15:22"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17300:7:22","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17276:6:22"},"nodeType":"YulFunctionCall","src":"17276:32:22"},"nodeType":"YulExpressionStatement","src":"17276:32:22"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17189:6:22","type":""}],"src":"17091:224:22"},{"body":{"nodeType":"YulBlock","src":"17467:220:22","statements":[{"nodeType":"YulAssignment","src":"17477:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17543:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"17548:2:22","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17484:58:22"},"nodeType":"YulFunctionCall","src":"17484:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17477:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17649:3:22"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17560:88:22"},"nodeType":"YulFunctionCall","src":"17560:93:22"},"nodeType":"YulExpressionStatement","src":"17560:93:22"},{"nodeType":"YulAssignment","src":"17662:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17673:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"17678:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17669:3:22"},"nodeType":"YulFunctionCall","src":"17669:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17662:3:22"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17455:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17463:3:22","type":""}],"src":"17321:366:22"},{"body":{"nodeType":"YulBlock","src":"17864:248:22","statements":[{"nodeType":"YulAssignment","src":"17874:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17886:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17897:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17882:3:22"},"nodeType":"YulFunctionCall","src":"17882:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17874:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17921:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17932:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17917:3:22"},"nodeType":"YulFunctionCall","src":"17917:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17940:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"17946:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17936:3:22"},"nodeType":"YulFunctionCall","src":"17936:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17910:6:22"},"nodeType":"YulFunctionCall","src":"17910:47:22"},"nodeType":"YulExpressionStatement","src":"17910:47:22"},{"nodeType":"YulAssignment","src":"17966:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18100:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17974:124:22"},"nodeType":"YulFunctionCall","src":"17974:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17966:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17844:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17859:4:22","type":""}],"src":"17693:419:22"},{"body":{"nodeType":"YulBlock","src":"18224:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18246:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18254:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18242:3:22"},"nodeType":"YulFunctionCall","src":"18242:14:22"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18258:34:22","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18235:6:22"},"nodeType":"YulFunctionCall","src":"18235:58:22"},"nodeType":"YulExpressionStatement","src":"18235:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18314:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18322:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18310:3:22"},"nodeType":"YulFunctionCall","src":"18310:15:22"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18327:6:22","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18303:6:22"},"nodeType":"YulFunctionCall","src":"18303:31:22"},"nodeType":"YulExpressionStatement","src":"18303:31:22"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18216:6:22","type":""}],"src":"18118:223:22"},{"body":{"nodeType":"YulBlock","src":"18493:220:22","statements":[{"nodeType":"YulAssignment","src":"18503:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18569:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18574:2:22","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18510:58:22"},"nodeType":"YulFunctionCall","src":"18510:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18503:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18675:3:22"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18586:88:22"},"nodeType":"YulFunctionCall","src":"18586:93:22"},"nodeType":"YulExpressionStatement","src":"18586:93:22"},{"nodeType":"YulAssignment","src":"18688:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18699:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18704:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18695:3:22"},"nodeType":"YulFunctionCall","src":"18695:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18688:3:22"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18481:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18489:3:22","type":""}],"src":"18347:366:22"},{"body":{"nodeType":"YulBlock","src":"18890:248:22","statements":[{"nodeType":"YulAssignment","src":"18900:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18912:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18923:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18908:3:22"},"nodeType":"YulFunctionCall","src":"18908:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18900:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18947:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18958:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18943:3:22"},"nodeType":"YulFunctionCall","src":"18943:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18966:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"18972:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18962:3:22"},"nodeType":"YulFunctionCall","src":"18962:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18936:6:22"},"nodeType":"YulFunctionCall","src":"18936:47:22"},"nodeType":"YulExpressionStatement","src":"18936:47:22"},{"nodeType":"YulAssignment","src":"18992:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19126:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19000:124:22"},"nodeType":"YulFunctionCall","src":"19000:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18992:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18870:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18885:4:22","type":""}],"src":"18719:419:22"},{"body":{"nodeType":"YulBlock","src":"19250:69:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19272:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19280:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19268:3:22"},"nodeType":"YulFunctionCall","src":"19268:14:22"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19284:27:22","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19261:6:22"},"nodeType":"YulFunctionCall","src":"19261:51:22"},"nodeType":"YulExpressionStatement","src":"19261:51:22"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19242:6:22","type":""}],"src":"19144:175:22"},{"body":{"nodeType":"YulBlock","src":"19471:220:22","statements":[{"nodeType":"YulAssignment","src":"19481:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19547:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"19552:2:22","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19488:58:22"},"nodeType":"YulFunctionCall","src":"19488:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19481:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19653:3:22"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19564:88:22"},"nodeType":"YulFunctionCall","src":"19564:93:22"},"nodeType":"YulExpressionStatement","src":"19564:93:22"},{"nodeType":"YulAssignment","src":"19666:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19677:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"19682:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19673:3:22"},"nodeType":"YulFunctionCall","src":"19673:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19666:3:22"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19459:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19467:3:22","type":""}],"src":"19325:366:22"},{"body":{"nodeType":"YulBlock","src":"19868:248:22","statements":[{"nodeType":"YulAssignment","src":"19878:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19890:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19901:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19886:3:22"},"nodeType":"YulFunctionCall","src":"19886:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19878:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19925:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19936:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19921:3:22"},"nodeType":"YulFunctionCall","src":"19921:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19944:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"19950:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19940:3:22"},"nodeType":"YulFunctionCall","src":"19940:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19914:6:22"},"nodeType":"YulFunctionCall","src":"19914:47:22"},"nodeType":"YulExpressionStatement","src":"19914:47:22"},{"nodeType":"YulAssignment","src":"19970:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20104:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19978:124:22"},"nodeType":"YulFunctionCall","src":"19978:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19970:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19848:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19863:4:22","type":""}],"src":"19697:419:22"},{"body":{"nodeType":"YulBlock","src":"20228:131:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20250:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20258:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20246:3:22"},"nodeType":"YulFunctionCall","src":"20246:14:22"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20262:34:22","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20239:6:22"},"nodeType":"YulFunctionCall","src":"20239:58:22"},"nodeType":"YulExpressionStatement","src":"20239:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20318:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20326:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20314:3:22"},"nodeType":"YulFunctionCall","src":"20314:15:22"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20331:20:22","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20307:6:22"},"nodeType":"YulFunctionCall","src":"20307:45:22"},"nodeType":"YulExpressionStatement","src":"20307:45:22"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20220:6:22","type":""}],"src":"20122:237:22"},{"body":{"nodeType":"YulBlock","src":"20511:220:22","statements":[{"nodeType":"YulAssignment","src":"20521:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20587:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"20592:2:22","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20528:58:22"},"nodeType":"YulFunctionCall","src":"20528:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20521:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20693:3:22"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20604:88:22"},"nodeType":"YulFunctionCall","src":"20604:93:22"},"nodeType":"YulExpressionStatement","src":"20604:93:22"},{"nodeType":"YulAssignment","src":"20706:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20717:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"20722:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20713:3:22"},"nodeType":"YulFunctionCall","src":"20713:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20706:3:22"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20499:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20507:3:22","type":""}],"src":"20365:366:22"},{"body":{"nodeType":"YulBlock","src":"20908:248:22","statements":[{"nodeType":"YulAssignment","src":"20918:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20930:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20941:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20926:3:22"},"nodeType":"YulFunctionCall","src":"20926:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20918:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20965:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20976:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20961:3:22"},"nodeType":"YulFunctionCall","src":"20961:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20984:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"20990:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20980:3:22"},"nodeType":"YulFunctionCall","src":"20980:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20954:6:22"},"nodeType":"YulFunctionCall","src":"20954:47:22"},"nodeType":"YulExpressionStatement","src":"20954:47:22"},{"nodeType":"YulAssignment","src":"21010:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21144:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21018:124:22"},"nodeType":"YulFunctionCall","src":"21018:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21010:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20888:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20903:4:22","type":""}],"src":"20737:419:22"},{"body":{"nodeType":"YulBlock","src":"21190:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21207:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21210:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21200:6:22"},"nodeType":"YulFunctionCall","src":"21200:88:22"},"nodeType":"YulExpressionStatement","src":"21200:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21304:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21307:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21297:6:22"},"nodeType":"YulFunctionCall","src":"21297:15:22"},"nodeType":"YulExpressionStatement","src":"21297:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21328:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21331:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21321:6:22"},"nodeType":"YulFunctionCall","src":"21321:15:22"},"nodeType":"YulExpressionStatement","src":"21321:15:22"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21162:180:22"},{"body":{"nodeType":"YulBlock","src":"21406:40:22","statements":[{"nodeType":"YulAssignment","src":"21417:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21433:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21427:5:22"},"nodeType":"YulFunctionCall","src":"21427:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21417:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21389:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21399:6:22","type":""}],"src":"21348:98:22"},{"body":{"nodeType":"YulBlock","src":"21547:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21564:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21569:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21557:6:22"},"nodeType":"YulFunctionCall","src":"21557:19:22"},"nodeType":"YulExpressionStatement","src":"21557:19:22"},{"nodeType":"YulAssignment","src":"21585:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21604:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"21609:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21600:3:22"},"nodeType":"YulFunctionCall","src":"21600:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21585:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21519:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"21524:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21535:11:22","type":""}],"src":"21452:168:22"},{"body":{"nodeType":"YulBlock","src":"21716:283:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21726:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21772:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21740:31:22"},"nodeType":"YulFunctionCall","src":"21740:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21730:6:22","type":""}]},{"nodeType":"YulAssignment","src":"21787:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21852:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21857:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21794:57:22"},"nodeType":"YulFunctionCall","src":"21794:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21787:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21912:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"21919:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21908:3:22"},"nodeType":"YulFunctionCall","src":"21908:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"21926:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21931:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21873:34:22"},"nodeType":"YulFunctionCall","src":"21873:65:22"},"nodeType":"YulExpressionStatement","src":"21873:65:22"},{"nodeType":"YulAssignment","src":"21947:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21958:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21985:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21963:21:22"},"nodeType":"YulFunctionCall","src":"21963:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21954:3:22"},"nodeType":"YulFunctionCall","src":"21954:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21947:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21697:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21704:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21712:3:22","type":""}],"src":"21626:373:22"},{"body":{"nodeType":"YulBlock","src":"22205:440:22","statements":[{"nodeType":"YulAssignment","src":"22215:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22227:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22238:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22223:3:22"},"nodeType":"YulFunctionCall","src":"22223:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22215:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22296:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22309:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22320:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22305:3:22"},"nodeType":"YulFunctionCall","src":"22305:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22252:43:22"},"nodeType":"YulFunctionCall","src":"22252:71:22"},"nodeType":"YulExpressionStatement","src":"22252:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22377:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22390:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22401:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22386:3:22"},"nodeType":"YulFunctionCall","src":"22386:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22333:43:22"},"nodeType":"YulFunctionCall","src":"22333:72:22"},"nodeType":"YulExpressionStatement","src":"22333:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22459:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22472:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22483:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22468:3:22"},"nodeType":"YulFunctionCall","src":"22468:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22415:43:22"},"nodeType":"YulFunctionCall","src":"22415:72:22"},"nodeType":"YulExpressionStatement","src":"22415:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22508:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22519:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22504:3:22"},"nodeType":"YulFunctionCall","src":"22504:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22528:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"22534:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22524:3:22"},"nodeType":"YulFunctionCall","src":"22524:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22497:6:22"},"nodeType":"YulFunctionCall","src":"22497:48:22"},"nodeType":"YulExpressionStatement","src":"22497:48:22"},{"nodeType":"YulAssignment","src":"22554:84:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22624:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"22633:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22562:61:22"},"nodeType":"YulFunctionCall","src":"22562:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22554:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22153:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22165:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22173:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22181:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22189:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22200:4:22","type":""}],"src":"22005:640:22"},{"body":{"nodeType":"YulBlock","src":"22713:79:22","statements":[{"nodeType":"YulAssignment","src":"22723:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22738:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22732:5:22"},"nodeType":"YulFunctionCall","src":"22732:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22723:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22780:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"22754:25:22"},"nodeType":"YulFunctionCall","src":"22754:32:22"},"nodeType":"YulExpressionStatement","src":"22754:32:22"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22691:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"22699:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22707:5:22","type":""}],"src":"22651:141:22"},{"body":{"nodeType":"YulBlock","src":"22874:273:22","statements":[{"body":{"nodeType":"YulBlock","src":"22920:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22922:77:22"},"nodeType":"YulFunctionCall","src":"22922:79:22"},"nodeType":"YulExpressionStatement","src":"22922:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22895:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"22904:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22891:3:22"},"nodeType":"YulFunctionCall","src":"22891:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"22916:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22887:3:22"},"nodeType":"YulFunctionCall","src":"22887:32:22"},"nodeType":"YulIf","src":"22884:119:22"},{"nodeType":"YulBlock","src":"23013:127:22","statements":[{"nodeType":"YulVariableDeclaration","src":"23028:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"23042:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23032:6:22","type":""}]},{"nodeType":"YulAssignment","src":"23057:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23102:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"23113:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23098:3:22"},"nodeType":"YulFunctionCall","src":"23098:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23122:7:22"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23067:30:22"},"nodeType":"YulFunctionCall","src":"23067:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23057:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22844:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22855:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22867:6:22","type":""}],"src":"22798:349:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220eb2a84e35df6eb3f92f928cc23bf3936fbcfb565b2a61899374599662fb15ef864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x2A DUP5 0xE3 0x5D 0xF6 0xEB EXTCODEHASH SWAP3 0xF9 0x28 0xCC 0x23 0xBF CODECOPY CALLDATASIZE 0xFB 0xCF 0xB5 PUSH6 0xB2A618993745 SWAP10 PUSH7 0x2FB15EF864736F PUSH13 0x63430008110033000000000000 ","sourceMap":"628:16377:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:1:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;12572:171:1:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;447:696:7:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7120:126:1:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;10139:916:10:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:5:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:174::-;14232:26;14228:1;14220:6;14216:14;14209:50;14092:174;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:228::-;15209:34;15205:1;15197:6;15193:14;15186:58;15278:11;15273:2;15265:6;15261:15;15254:36;15069:228;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:148::-;16202:11;16239:3;16224:18;;16100:148;;;;:::o;16254:390::-;16360:3;16388:39;16421:5;16388:39;:::i;:::-;16443:89;16525:6;16520:3;16443:89;:::i;:::-;16436:96;;16541:65;16599:6;16594:3;16587:4;16580:5;16576:16;16541:65;:::i;:::-;16631:6;16626:3;16622:16;16615:23;;16364:280;16254:390;;;;:::o;16650:435::-;16830:3;16852:95;16943:3;16934:6;16852:95;:::i;:::-;16845:102;;16964:95;17055:3;17046:6;16964:95;:::i;:::-;16957:102;;17076:3;17069:10;;16650:435;;;;;:::o;17091:224::-;17231:34;17227:1;17219:6;17215:14;17208:58;17300:7;17295:2;17287:6;17283:15;17276:32;17091:224;:::o;17321:366::-;17463:3;17484:67;17548:2;17543:3;17484:67;:::i;:::-;17477:74;;17560:93;17649:3;17560:93;:::i;:::-;17678:2;17673:3;17669:12;17662:19;;17321:366;;;:::o;17693:419::-;17859:4;17897:2;17886:9;17882:18;17874:26;;17946:9;17940:4;17936:20;17932:1;17921:9;17917:17;17910:47;17974:131;18100:4;17974:131;:::i;:::-;17966:139;;17693:419;;;:::o;18118:223::-;18258:34;18254:1;18246:6;18242:14;18235:58;18327:6;18322:2;18314:6;18310:15;18303:31;18118:223;:::o;18347:366::-;18489:3;18510:67;18574:2;18569:3;18510:67;:::i;:::-;18503:74;;18586:93;18675:3;18586:93;:::i;:::-;18704:2;18699:3;18695:12;18688:19;;18347:366;;;:::o;18719:419::-;18885:4;18923:2;18912:9;18908:18;18900:26;;18972:9;18966:4;18962:20;18958:1;18947:9;18943:17;18936:47;19000:131;19126:4;19000:131;:::i;:::-;18992:139;;18719:419;;;:::o;19144:175::-;19284:27;19280:1;19272:6;19268:14;19261:51;19144:175;:::o;19325:366::-;19467:3;19488:67;19552:2;19547:3;19488:67;:::i;:::-;19481:74;;19564:93;19653:3;19564:93;:::i;:::-;19682:2;19677:3;19673:12;19666:19;;19325:366;;;:::o;19697:419::-;19863:4;19901:2;19890:9;19886:18;19878:26;;19950:9;19944:4;19940:20;19936:1;19925:9;19921:17;19914:47;19978:131;20104:4;19978:131;:::i;:::-;19970:139;;19697:419;;;:::o;20122:237::-;20262:34;20258:1;20250:6;20246:14;20239:58;20331:20;20326:2;20318:6;20314:15;20307:45;20122:237;:::o;20365:366::-;20507:3;20528:67;20592:2;20587:3;20528:67;:::i;:::-;20521:74;;20604:93;20693:3;20604:93;:::i;:::-;20722:2;20717:3;20713:12;20706:19;;20365:366;;;:::o;20737:419::-;20903:4;20941:2;20930:9;20926:18;20918:26;;20990:9;20984:4;20980:20;20976:1;20965:9;20961:17;20954:47;21018:131;21144:4;21018:131;:::i;:::-;21010:139;;20737:419;;;:::o;21162:180::-;21210:77;21207:1;21200:88;21307:4;21304:1;21297:15;21331:4;21328:1;21321:15;21348:98;21399:6;21433:5;21427:12;21417:22;;21348:98;;;:::o;21452:168::-;21535:11;21569:6;21564:3;21557:19;21609:4;21604:3;21600:14;21585:29;;21452:168;;;;:::o;21626:373::-;21712:3;21740:38;21772:5;21740:38;:::i;:::-;21794:70;21857:6;21852:3;21794:70;:::i;:::-;21787:77;;21873:65;21931:6;21926:3;21919:4;21912:5;21908:16;21873:65;:::i;:::-;21963:29;21985:6;21963:29;:::i;:::-;21958:3;21954:39;21947:46;;21716:283;21626:373;;;;:::o;22005:640::-;22200:4;22238:3;22227:9;22223:19;22215:27;;22252:71;22320:1;22309:9;22305:17;22296:6;22252:71;:::i;:::-;22333:72;22401:2;22390:9;22386:18;22377:6;22333:72;:::i;:::-;22415;22483:2;22472:9;22468:18;22459:6;22415:72;:::i;:::-;22534:9;22528:4;22524:20;22519:2;22508:9;22504:18;22497:48;22562:76;22633:4;22624:6;22562:76;:::i;:::-;22554:84;;22005:640;;;;;;;:::o;22651:141::-;22707:5;22738:6;22732:13;22723:22;;22754:32;22780:5;22754:32;:::i;:::-;22651:141;;;;:::o;22798:349::-;22867:6;22916:2;22904:9;22895:7;22891:23;22887:32;22884:119;;;22922:79;;:::i;:::-;22884:119;23042:1;23067:63;23122:7;23113:6;23102:9;23098:22;23067:63;:::i;:::-;23057:73;;23013:127;22798:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1696000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2921","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3022","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3459","transferFrom(address,address,uint256)":"infinite"},"internal":{"__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"17","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":90,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":92,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":96,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":100,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":104,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":110,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a371a0024febf5a667fed16c680abfdcdc3342faad0550392932423ce1a4ceba64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH18 0xA0024FEBF5A667FED16C680ABFDCDC3342FA 0xAD SDIV POP CODECOPY 0x29 ORIGIN TIMESTAMP EXTCODECOPY 0xE1 LOG4 0xCE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a371a0024febf5a667fed16c680abfdcdc3342faad0550392932423ce1a4ceba64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH18 0xA0024FEBF5A667FED16C680ABFDCDC3342FA 0xAD SDIV POP CODECOPY 0x29 ORIGIN TIMESTAMP EXTCODECOPY 0xE1 LOG4 0xCE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:9169:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c29294e9a7945ee1c17aea97a4c738ac270bec445d37cd6cae443fc0caddb41264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SWAP3 SWAP5 0xE9 0xA7 SWAP5 0x5E 0xE1 0xC1 PUSH27 0xEA97A4C738AC270BEC445D37CD6CAE443FC0CADDB41264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"220:2559:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d49866380d66d8d35d4a9114da523643ad70362ac2115bf943870317c5f76df964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 SWAP9 PUSH7 0x380D66D8D35D4A SWAP2 EQ 0xDA MSTORE CALLDATASIZE NUMBER 0xAD PUSH17 0x362AC2115BF943870317C5F76DF964736F PUSH13 0x63430008110033000000000000 ","sourceMap":"202:12582:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f629ff033a0960039f8fa55117e2507e2e6b7ce094b0faef9e4566377b8c5c964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x629FF033A0960039F8FA55117E2507E2 0xE6 0xB7 0xCE MULMOD 0x4B 0xF 0xAE 0xF9 0xE4 JUMP PUSH4 0x77B8C5C9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ImarketPlace.sol":{"INftMarketPlace":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"_pA","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"_pB","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"_pC","type":"uint256[2]"},{"internalType":"uint256","name":"nullHash","type":"uint256"},{"internalType":"uint256","name":"com","type":"uint256"}],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"withdrawProceeds(uint256[2],uint256[2][2],uint256[2],uint256,uint256)":"6be4a002"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_pA\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"_pB\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_pC\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"nullHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ImarketPlace.sol\":\"INftMarketPlace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ImarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface INftMarketPlace {\\n    function withdrawProceeds(\\n        uint[2] calldata _pA,\\n        uint[2][2] calldata _pB, \\n        uint[2] calldata _pC, \\n        uint nullHash,\\n        uint256 com) external;\\n}\",\"keccak256\":\"0x174868cef30b7e79013b370c020c84df92c4a71bb7d2fda04da86c94551dd2e5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/InewBasicNft.sol":{"INewBasicNFT":{"abi":[{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"mintNft(string)":"da86f4a9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InewBasicNft.sol\":\"INewBasicNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/InewBasicNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface INewBasicNFT{\\n    function mintNft(string memory uri) external;\\n}\",\"keccak256\":\"0x0306d7eef5fe882b8f1092cef8ee08c1803eb3b92958b4c3f45ff49b53e91d97\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Iverifier.sol":{"IVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"a","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"b","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"c","type":"uint256[2]"},{"internalType":"uint256[3]","name":"input","type":"uint256[3]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[3])":"11479fea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[3]\",\"name\":\"input\",\"type\":\"uint256[3]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Iverifier.sol\":\"IVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Iverifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IVerifier {\\n    function verifyProof(uint[2] memory a, uint[2][2] memory b, uint[2] memory c, uint[3] memory input) external returns(bool);\\n}\",\"keccak256\":\"0x6f6efcb379858a6cd446511257cea576a45d13b733da4272100c5f6637fcdc66\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Izknft.sol":{"IZkNFT":{"abi":[{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"},{"internalType":"address","name":"op","type":"address"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"deleteZkNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"getApprovedAdd","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"getTokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ownerNul","type":"uint256"},{"internalType":"uint256","name":"buyerNul","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"},{"internalType":"uint256","name":"nullifierHash","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"}],"name":"transferNFT","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(uint256,address)":"febe4909","deleteZkNft(uint256,address)":"263c7868","getApprovedAdd(uint256)":"d7809252","getTokenURI(uint256)":"3bb3a24d","name()":"06fdde03","ownerOf(uint256)":"6352211e","symbol()":"95d89b41","transferFrom(uint256,uint256,address,uint256)":"a50348dc","transferNFT(uint256,uint256,address)":"8894c446"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"op\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deleteZkNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getApprovedAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerNul\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerNul\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"transferNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Izknft.sol\":\"IZkNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Izknft.sol\":{\"content\":\"//SPDX-License-Indentifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IZkNFT {\\n    \\n    function approve(uint256 _tokenID, address op) external;\\n    function getApprovedAdd(uint256 _tokenID) external view returns(address);    \\n    function ownerOf(uint256 _tokenID) external view returns (uint256);\\n    function transferNFT(uint256 _tokenID, uint256 nullifierHash, address buyer) external;\\n    function transferFrom(uint256 ownerNul, uint256 buyerNul, address buyer, uint256 _tokenID) external;\\n    function getTokenURI(uint256 _tokenID) external view returns(string memory);\\n    function name() external view  returns (string memory);\\n    function symbol() external view  returns (string memory);\\n    function deleteZkNft(uint256 tokenID, address owner) external;\\n}\",\"keccak256\":\"0x084b5a9fe01e11230cb9cfda5b7342a947dd854f62e84e3c697d7b8073d42b4a\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MIMCSponge.sol":{"Hasher":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"_ins","type":"uint256[2]"},{"internalType":"uint256","name":"_k","type":"uint256"}],"name":"MiMC5Sponge","outputs":[{"internalType":"uint256","name":"h","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001600055604051806102800160405280600081526020017f391768a085a953882c2200e315dc6b6353e4791466d524980f97b786716ef44c81526020017f9d4f50cb64b2c7a8f7b2c17065bac3a4ef451cd9718db14693cc75cbb863089081526020017f71504526d8cd57565fca39e86feeb52100fecb23f9b81ab0ac066aef68328e3e81526020017f935b8800cf73aa9b083a4bdbfea0f4efeb5e0b1bb927455b4bc8a4bcc58e9a6681526020017f65731fa0feccca6cba08c176f5443dbaea0de6ae20993a97f6b709785897d20f81526020017f1fd61c6b69084af504ea1fa012821bb4af507d64efd9934b9bbf36705290f12d81526020017f40f253aa05d71624fe6759a1f5edd323d110996b3fcfba07abdf171a5f9de39981526020017f1e70e5f07fda6b0119e5c8f11aa869db08e948e2bc688cb4db0b4ee543c46f3e81526020017f790b360b1e8223e3834cfd88dd07eb3e4fb59e8bd83626fbdc9583d8877a15af81526020017f37a0de4d2c56628d40f1638628efb49c4c741fe881cf8a6e865ec71688b4487a81526020017fc7cb9fe85afe2450c4da8a32983cc0e6070d253c86e59bfd1fd24fcaa91c658a81526020017fcb6e8649b6a56e9277be3bf1d943244b79048284cdd78743a74863e58b9e198781526020017f594448aa40d994274590a8a5c4ab87b374317b4bbc013841ce844e4bf19805bb81526020017f01ff873d84b64b0d73eddd73625d1b5686a3d1f31db8d0086b3101bdb5a6f7ff81526020017ff810e1e9fad9cdb55d70a243eccd090c85f836ce991bb2190b0f0aab32d8e0b381526020017ffdcf72e9d11d20a02478305a7183c50ed3ddde3c9e80b2bf5efdaca8f87d651d81526020017ff66144aed21cec88adbe8c8f6cd05ee5407d8c06d39607d62584909149d3403c81526020017f8fa16e2ad5a7a87d70003c61c1d2a08fc9ab669e6b95350f28e01a15745c274581526020017fd99c9018257d4ec8c901b111feb6857c4219c3340ac68bf54ce4448a530375f9815250600190601461031b92919061032e565b5034801561032857600080fd5b5061038b565b826014810192821561035d579160200282015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b5b8082111561038757600081600090555060010161036f565b5090565b6104bd8061039a6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d622e5a414610030575b600080fd5b61004a6004803603810190610045919061035a565b610060565b60405161005791906103a9565b60405180910390f35b600080600090506000805b60028160ff1610156100cd5760005480610088576100876103c4565b5b868260ff166002811061009e5761009d6103f3565b5b6020020151840892506100b28383876100d9565b809350819450505080806100c59061045e565b91505061006b565b50819250505092915050565b6000806000601490506000869050600086905060008060008060005b8760ff168160ff1610156101b85760005480610114576101136103c4565b5b8b870894506000548061012a576101296103c4565b5b60018260ff1660148110610141576101406103f3565b5b01548608945060005480610158576101576103c4565b5b85860993506000548061016e5761016d6103c4565b5b848509925060005480610184576101836103c4565b5b85840994508591506000548061019d5761019c6103c4565b5b858808955081965080806101b09061045e565b9150506100f5565b5085859850985050505050505050935093915050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61022b826101e2565b810181811067ffffffffffffffff8211171561024a576102496101f3565b5b80604052505050565b600061025d6101ce565b90506102698282610222565b919050565b600067ffffffffffffffff821115610289576102886101f3565b5b602082029050919050565b600080fd5b6000819050919050565b6102ac81610299565b81146102b757600080fd5b50565b6000813590506102c9816102a3565b92915050565b60006102e26102dd8461026e565b610253565b905080602084028301858111156102fc576102fb610294565b5b835b81811015610325578061031188826102ba565b8452602084019350506020810190506102fe565b5050509392505050565b600082601f830112610344576103436101dd565b5b60026103518482856102cf565b91505092915050565b60008060608385031215610371576103706101d8565b5b600061037f8582860161032f565b9250506040610390858286016102ba565b9150509250929050565b6103a381610299565b82525050565b60006020820190506103be600083018461039a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff82169050919050565b600061046982610451565b915060ff820361047c5761047b610422565b5b60018201905091905056fea26469706673582212209c80260998a273fd38fe3b824a16713a4dfe07ec4a0e709cfa9c59b0ef6f1b8b64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x391768A085A953882C2200E315DC6B6353E4791466D524980F97B786716EF44C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x9D4F50CB64B2C7A8F7B2C17065BAC3A4EF451CD9718DB14693CC75CBB8630890 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x71504526D8CD57565FCA39E86FEEB52100FECB23F9B81AB0AC066AEF68328E3E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x935B8800CF73AA9B083A4BDBFEA0F4EFEB5E0B1BB927455B4BC8A4BCC58E9A66 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x65731FA0FECCCA6CBA08C176F5443DBAEA0DE6AE20993A97F6B709785897D20F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x1FD61C6B69084AF504EA1FA012821BB4AF507D64EFD9934B9BBF36705290F12D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x40F253AA05D71624FE6759A1F5EDD323D110996B3FCFBA07ABDF171A5F9DE399 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x1E70E5F07FDA6B0119E5C8F11AA869DB08E948E2BC688CB4DB0B4EE543C46F3E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x790B360B1E8223E3834CFD88DD07EB3E4FB59E8BD83626FBDC9583D8877A15AF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x37A0DE4D2C56628D40F1638628EFB49C4C741FE881CF8A6E865EC71688B4487A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xC7CB9FE85AFE2450C4DA8A32983CC0E6070D253C86E59BFD1FD24FCAA91C658A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xCB6E8649B6A56E9277BE3BF1D943244B79048284CDD78743A74863E58B9E1987 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x594448AA40D994274590A8A5C4AB87B374317B4BBC013841CE844E4BF19805BB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x1FF873D84B64B0D73EDDD73625D1B5686A3D1F31DB8D0086B3101BDB5A6F7FF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xF810E1E9FAD9CDB55D70A243ECCD090C85F836CE991BB2190B0F0AAB32D8E0B3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFDCF72E9D11D20A02478305A7183C50ED3DDDE3C9E80B2BF5EFDACA8F87D651D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xF66144AED21CEC88ADBE8C8F6CD05EE5407D8C06D39607D62584909149D3403C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x8FA16E2AD5A7A87D70003C61C1D2A08FC9AB669E6B95350F28E01A15745C2745 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xD99C9018257D4EC8C901B111FEB6857C4219C3340AC68BF54CE4448A530375F9 DUP2 MSTORE POP PUSH1 0x1 SWAP1 PUSH1 0x14 PUSH2 0x31B SWAP3 SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B JUMP JUMPDEST DUP3 PUSH1 0x14 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x35D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x35C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x341 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x36F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x4BD DUP1 PUSH2 0x39A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD622E5A4 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 SLOAD DUP1 PUSH2 0x88 JUMPI PUSH2 0x87 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP7 DUP3 PUSH1 0xFF AND PUSH1 0x2 DUP2 LT PUSH2 0x9E JUMPI PUSH2 0x9D PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 ADDMOD SWAP3 POP PUSH2 0xB2 DUP4 DUP4 DUP8 PUSH2 0xD9 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP1 DUP1 PUSH2 0xC5 SWAP1 PUSH2 0x45E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x14 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP8 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 SLOAD DUP1 PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP12 DUP8 ADDMOD SWAP5 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x12A JUMPI PUSH2 0x129 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 PUSH1 0xFF AND PUSH1 0x14 DUP2 LT PUSH2 0x141 JUMPI PUSH2 0x140 PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP7 ADDMOD SWAP5 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x158 JUMPI PUSH2 0x157 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP6 DUP7 MULMOD SWAP4 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP5 DUP6 MULMOD SWAP3 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x184 JUMPI PUSH2 0x183 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP6 DUP5 MULMOD SWAP5 POP DUP6 SWAP2 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x19D JUMPI PUSH2 0x19C PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP6 DUP9 ADDMOD SWAP6 POP DUP2 SWAP7 POP DUP1 DUP1 PUSH2 0x1B0 SWAP1 PUSH2 0x45E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF5 JUMP JUMPDEST POP DUP6 DUP6 SWAP9 POP SWAP9 POP POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22B DUP3 PUSH2 0x1E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x24A JUMPI PUSH2 0x249 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP PUSH2 0x269 DUP3 DUP3 PUSH2 0x222 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x299 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C9 DUP2 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 PUSH2 0x2DD DUP5 PUSH2 0x26E JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x294 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI DUP1 PUSH2 0x311 DUP9 DUP3 PUSH2 0x2BA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x344 JUMPI PUSH2 0x343 PUSH2 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH2 0x351 DUP5 DUP3 DUP6 PUSH2 0x2CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x371 JUMPI PUSH2 0x370 PUSH2 0x1D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP6 DUP3 DUP7 ADD PUSH2 0x32F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x390 DUP6 DUP3 DUP7 ADD PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A3 DUP2 PUSH2 0x299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x469 DUP3 PUSH2 0x451 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x47C JUMPI PUSH2 0x47B PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 DUP1 0x26 MULMOD SWAP9 LOG2 PUSH20 0xFD38FE3B824A16713A4DFE07EC4A0E709CFA9C59 0xB0 0xEF PUSH16 0x1B8B64736F6C63430008110033000000 ","sourceMap":"57:2845:16:-:0;;;91:77;79:89;;174:1687;;;;;;;;200:1;174:1687;;;;211:77;174:1687;;;;298:77;174:1687;;;;385:77;174:1687;;;;472:77;174:1687;;;;559:77;174:1687;;;;646:77;174:1687;;;;733:77;174:1687;;;;820:77;174:1687;;;;907:77;174:1687;;;;994:77;174:1687;;;;1081:77;174:1687;;;;1168:77;174:1687;;;;1255:77;174:1687;;;;1342:75;174:1687;;;;1427:78;174:1687;;;;1515:78;174:1687;;;;1603:78;174:1687;;;;1691:77;174:1687;;;;1778:77;174:1687;;;;;;;;;;;:::i;:::-;;57:2845;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MiMC5Feistel_3008":{"entryPoint":217,"id":3008,"parameterSlots":3,"returnSlots":2},"@MiMC5Sponge_3065":{"entryPoint":96,"id":3065,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":719,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptrt_uint256":{"entryPoint":858,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":922,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":937,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":595,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":462,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":622,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":665,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1105,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":546,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint8":{"entryPoint":1118,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1058,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":964,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1011,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":499,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":477,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":660,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":472,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":482,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":675,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4635:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"423:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:22"},"nodeType":"YulFunctionCall","src":"433:12:22"},"nodeType":"YulExpressionStatement","src":"433:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:22"},{"body":{"nodeType":"YulBlock","src":"505:54:22","statements":[{"nodeType":"YulAssignment","src":"515:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"533:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"540:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"529:3:22"},"nodeType":"YulFunctionCall","src":"529:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"549:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"545:3:22"},"nodeType":"YulFunctionCall","src":"545:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"525:3:22"},"nodeType":"YulFunctionCall","src":"525:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"515:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"488:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"498:6:22","type":""}],"src":"457:102:22"},{"body":{"nodeType":"YulBlock","src":"593:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"603:6:22"},"nodeType":"YulFunctionCall","src":"603:88:22"},"nodeType":"YulExpressionStatement","src":"603:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"710:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"700:6:22"},"nodeType":"YulFunctionCall","src":"700:15:22"},"nodeType":"YulExpressionStatement","src":"700:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"731:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"724:6:22"},"nodeType":"YulFunctionCall","src":"724:15:22"},"nodeType":"YulExpressionStatement","src":"724:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"565:180:22"},{"body":{"nodeType":"YulBlock","src":"794:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"804:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"826:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"856:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"834:21:22"},"nodeType":"YulFunctionCall","src":"834:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"822:3:22"},"nodeType":"YulFunctionCall","src":"822:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"808:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"973:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"975:16:22"},"nodeType":"YulFunctionCall","src":"975:18:22"},"nodeType":"YulExpressionStatement","src":"975:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"916:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"928:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"913:2:22"},"nodeType":"YulFunctionCall","src":"913:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"952:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"964:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"949:2:22"},"nodeType":"YulFunctionCall","src":"949:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"910:2:22"},"nodeType":"YulFunctionCall","src":"910:62:22"},"nodeType":"YulIf","src":"907:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1011:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1015:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1004:6:22"},"nodeType":"YulFunctionCall","src":"1004:22:22"},"nodeType":"YulExpressionStatement","src":"1004:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"780:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"788:4:22","type":""}],"src":"751:281:22"},{"body":{"nodeType":"YulBlock","src":"1079:88:22","statements":[{"nodeType":"YulAssignment","src":"1089:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1099:18:22"},"nodeType":"YulFunctionCall","src":"1099:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1089:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1148:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"1156:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1128:19:22"},"nodeType":"YulFunctionCall","src":"1128:33:22"},"nodeType":"YulExpressionStatement","src":"1128:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1063:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1072:6:22","type":""}],"src":"1038:129:22"},{"body":{"nodeType":"YulBlock","src":"1253:169:22","statements":[{"body":{"nodeType":"YulBlock","src":"1358:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1360:16:22"},"nodeType":"YulFunctionCall","src":"1360:18:22"},"nodeType":"YulExpressionStatement","src":"1360:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1330:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1338:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1327:2:22"},"nodeType":"YulFunctionCall","src":"1327:30:22"},"nodeType":"YulIf","src":"1324:56:22"},{"nodeType":"YulAssignment","src":"1390:25:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1402:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1410:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1398:3:22"},"nodeType":"YulFunctionCall","src":"1398:17:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1390:4:22"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1237:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1248:4:22","type":""}],"src":"1173:249:22"},{"body":{"nodeType":"YulBlock","src":"1517:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1537:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1527:6:22"},"nodeType":"YulFunctionCall","src":"1527:12:22"},"nodeType":"YulExpressionStatement","src":"1527:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1428:117:22"},{"body":{"nodeType":"YulBlock","src":"1596:32:22","statements":[{"nodeType":"YulAssignment","src":"1606:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1617:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1606:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1578:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1588:7:22","type":""}],"src":"1551:77:22"},{"body":{"nodeType":"YulBlock","src":"1677:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"1734:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1743:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1746:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1736:6:22"},"nodeType":"YulFunctionCall","src":"1736:12:22"},"nodeType":"YulExpressionStatement","src":"1736:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1700:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1725:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1707:17:22"},"nodeType":"YulFunctionCall","src":"1707:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1697:2:22"},"nodeType":"YulFunctionCall","src":"1697:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1690:6:22"},"nodeType":"YulFunctionCall","src":"1690:43:22"},"nodeType":"YulIf","src":"1687:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1670:5:22","type":""}],"src":"1634:122:22"},{"body":{"nodeType":"YulBlock","src":"1814:87:22","statements":[{"nodeType":"YulAssignment","src":"1824:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1846:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1833:12:22"},"nodeType":"YulFunctionCall","src":"1833:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1824:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1889:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1862:26:22"},"nodeType":"YulFunctionCall","src":"1862:33:22"},"nodeType":"YulExpressionStatement","src":"1862:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1792:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1800:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1808:5:22","type":""}],"src":"1762:139:22"},{"body":{"nodeType":"YulBlock","src":"2025:543:22","statements":[{"nodeType":"YulAssignment","src":"2035:88:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2115:6:22"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"2060:54:22"},"nodeType":"YulFunctionCall","src":"2060:62:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2044:15:22"},"nodeType":"YulFunctionCall","src":"2044:79:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2035:5:22"}]},{"nodeType":"YulVariableDeclaration","src":"2132:16:22","value":{"name":"array","nodeType":"YulIdentifier","src":"2143:5:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2136:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2158:44:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2176:6:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2188:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2196:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2184:3:22"},"nodeType":"YulFunctionCall","src":"2184:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2172:3:22"},"nodeType":"YulFunctionCall","src":"2172:30:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2162:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2230:103:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2244:77:22"},"nodeType":"YulFunctionCall","src":"2244:79:22"},"nodeType":"YulExpressionStatement","src":"2244:79:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2217:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"2225:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2214:2:22"},"nodeType":"YulFunctionCall","src":"2214:15:22"},"nodeType":"YulIf","src":"2211:122:22"},{"body":{"nodeType":"YulBlock","src":"2418:144:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2433:21:22","value":{"name":"src","nodeType":"YulIdentifier","src":"2451:3:22"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"2437:10:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2475:3:22"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"2501:10:22"},{"name":"end","nodeType":"YulIdentifier","src":"2513:3:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2480:20:22"},"nodeType":"YulFunctionCall","src":"2480:37:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2468:6:22"},"nodeType":"YulFunctionCall","src":"2468:50:22"},"nodeType":"YulExpressionStatement","src":"2468:50:22"},{"nodeType":"YulAssignment","src":"2531:21:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2542:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2547:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:22"},"nodeType":"YulFunctionCall","src":"2538:14:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2531:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2371:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2376:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:22"},"nodeType":"YulFunctionCall","src":"2368:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2384:25:22","statements":[{"nodeType":"YulAssignment","src":"2386:21:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2397:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2402:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2393:3:22"},"nodeType":"YulFunctionCall","src":"2393:14:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2386:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"2346:21:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2348:17:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"2359:6:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2352:3:22","type":""}]}]},"src":"2342:220:22"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1995:6:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"2003:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2011:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2019:5:22","type":""}],"src":"1925:643:22"},{"body":{"nodeType":"YulBlock","src":"2667:264:22","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2718:77:22"},"nodeType":"YulFunctionCall","src":"2718:79:22"},"nodeType":"YulExpressionStatement","src":"2718:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2695:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2703:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:22"},"nodeType":"YulFunctionCall","src":"2691:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"2710:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2687:3:22"},"nodeType":"YulFunctionCall","src":"2687:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2680:6:22"},"nodeType":"YulFunctionCall","src":"2680:35:22"},"nodeType":"YulIf","src":"2677:122:22"},{"nodeType":"YulVariableDeclaration","src":"2808:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2822:4:22","type":"","value":"0x02"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2812:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2835:90:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2905:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"2913:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"2921:3:22"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"2844:60:22"},"nodeType":"YulFunctionCall","src":"2844:81:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2835:5:22"}]}]},"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2645:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2653:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2661:5:22","type":""}],"src":"2592:339:22"},{"body":{"nodeType":"YulBlock","src":"3043:414:22","statements":[{"body":{"nodeType":"YulBlock","src":"3089:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3091:77:22"},"nodeType":"YulFunctionCall","src":"3091:79:22"},"nodeType":"YulExpressionStatement","src":"3091:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3064:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3073:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3060:3:22"},"nodeType":"YulFunctionCall","src":"3060:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3085:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3056:3:22"},"nodeType":"YulFunctionCall","src":"3056:32:22"},"nodeType":"YulIf","src":"3053:119:22"},{"nodeType":"YulBlock","src":"3182:140:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3197:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3211:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3201:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3226:86:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:22"},"nodeType":"YulFunctionCall","src":"3280:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"3236:43:22"},"nodeType":"YulFunctionCall","src":"3236:76:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3226:6:22"}]}]},{"nodeType":"YulBlock","src":"3332:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:22"},"nodeType":"YulFunctionCall","src":"3408:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3387:20:22"},"nodeType":"YulFunctionCall","src":"3387:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3005:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3016:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3028:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3036:6:22","type":""}],"src":"2937:520:22"},{"body":{"nodeType":"YulBlock","src":"3528:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3545:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3568:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3550:17:22"},"nodeType":"YulFunctionCall","src":"3550:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3538:6:22"},"nodeType":"YulFunctionCall","src":"3538:37:22"},"nodeType":"YulExpressionStatement","src":"3538:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3516:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3523:3:22","type":""}],"src":"3463:118:22"},{"body":{"nodeType":"YulBlock","src":"3685:124:22","statements":[{"nodeType":"YulAssignment","src":"3695:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3707:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3718:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3703:3:22"},"nodeType":"YulFunctionCall","src":"3703:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3695:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3775:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3788:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3799:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3784:3:22"},"nodeType":"YulFunctionCall","src":"3784:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3731:43:22"},"nodeType":"YulFunctionCall","src":"3731:71:22"},"nodeType":"YulExpressionStatement","src":"3731:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3657:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3669:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3680:4:22","type":""}],"src":"3587:222:22"},{"body":{"nodeType":"YulBlock","src":"3843:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3863:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3853:6:22"},"nodeType":"YulFunctionCall","src":"3853:88:22"},"nodeType":"YulExpressionStatement","src":"3853:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3957:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3960:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3950:6:22"},"nodeType":"YulFunctionCall","src":"3950:15:22"},"nodeType":"YulExpressionStatement","src":"3950:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3981:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3984:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3974:6:22"},"nodeType":"YulFunctionCall","src":"3974:15:22"},"nodeType":"YulExpressionStatement","src":"3974:15:22"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"3815:180:22"},{"body":{"nodeType":"YulBlock","src":"4029:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4046:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4049:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4039:6:22"},"nodeType":"YulFunctionCall","src":"4039:88:22"},"nodeType":"YulExpressionStatement","src":"4039:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4143:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4146:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4136:6:22"},"nodeType":"YulFunctionCall","src":"4136:15:22"},"nodeType":"YulExpressionStatement","src":"4136:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4167:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4170:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4160:6:22"},"nodeType":"YulFunctionCall","src":"4160:15:22"},"nodeType":"YulExpressionStatement","src":"4160:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4001:180:22"},{"body":{"nodeType":"YulBlock","src":"4215:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4232:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4235:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4225:6:22"},"nodeType":"YulFunctionCall","src":"4225:88:22"},"nodeType":"YulExpressionStatement","src":"4225:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4329:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4332:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4322:6:22"},"nodeType":"YulFunctionCall","src":"4322:15:22"},"nodeType":"YulExpressionStatement","src":"4322:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4353:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4356:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4346:6:22"},"nodeType":"YulFunctionCall","src":"4346:15:22"},"nodeType":"YulExpressionStatement","src":"4346:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4187:180:22"},{"body":{"nodeType":"YulBlock","src":"4416:43:22","statements":[{"nodeType":"YulAssignment","src":"4426:27:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4441:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4448:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4437:3:22"},"nodeType":"YulFunctionCall","src":"4437:16:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4426:7:22"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4398:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4408:7:22","type":""}],"src":"4373:86:22"},{"body":{"nodeType":"YulBlock","src":"4506:126:22","statements":[{"nodeType":"YulAssignment","src":"4516:31:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4541:5:22"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4525:15:22"},"nodeType":"YulFunctionCall","src":"4525:22:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4516:5:22"}]},{"body":{"nodeType":"YulBlock","src":"4575:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4577:16:22"},"nodeType":"YulFunctionCall","src":"4577:18:22"},"nodeType":"YulExpressionStatement","src":"4577:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4562:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4569:4:22","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4559:2:22"},"nodeType":"YulFunctionCall","src":"4559:15:22"},"nodeType":"YulIf","src":"4556:41:22"},{"nodeType":"YulAssignment","src":"4606:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4617:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4624:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4613:3:22"},"nodeType":"YulFunctionCall","src":"4613:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4606:3:22"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4492:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4502:3:22","type":""}],"src":"4465:167:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$2_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[2]\n    function abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$2_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[2]\n    function abi_decode_t_array$_t_uint256_$2_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x02\n        array := abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr(offset, length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$2_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d622e5a414610030575b600080fd5b61004a6004803603810190610045919061035a565b610060565b60405161005791906103a9565b60405180910390f35b600080600090506000805b60028160ff1610156100cd5760005480610088576100876103c4565b5b868260ff166002811061009e5761009d6103f3565b5b6020020151840892506100b28383876100d9565b809350819450505080806100c59061045e565b91505061006b565b50819250505092915050565b6000806000601490506000869050600086905060008060008060005b8760ff168160ff1610156101b85760005480610114576101136103c4565b5b8b870894506000548061012a576101296103c4565b5b60018260ff1660148110610141576101406103f3565b5b01548608945060005480610158576101576103c4565b5b85860993506000548061016e5761016d6103c4565b5b848509925060005480610184576101836103c4565b5b85840994508591506000548061019d5761019c6103c4565b5b858808955081965080806101b09061045e565b9150506100f5565b5085859850985050505050505050935093915050565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61022b826101e2565b810181811067ffffffffffffffff8211171561024a576102496101f3565b5b80604052505050565b600061025d6101ce565b90506102698282610222565b919050565b600067ffffffffffffffff821115610289576102886101f3565b5b602082029050919050565b600080fd5b6000819050919050565b6102ac81610299565b81146102b757600080fd5b50565b6000813590506102c9816102a3565b92915050565b60006102e26102dd8461026e565b610253565b905080602084028301858111156102fc576102fb610294565b5b835b81811015610325578061031188826102ba565b8452602084019350506020810190506102fe565b5050509392505050565b600082601f830112610344576103436101dd565b5b60026103518482856102cf565b91505092915050565b60008060608385031215610371576103706101d8565b5b600061037f8582860161032f565b9250506040610390858286016102ba565b9150509250929050565b6103a381610299565b82525050565b60006020820190506103be600083018461039a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff82169050919050565b600061046982610451565b915060ff820361047c5761047b610422565b5b60018201905091905056fea26469706673582212209c80260998a273fd38fe3b824a16713a4dfe07ec4a0e709cfa9c59b0ef6f1b8b64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD622E5A4 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 SLOAD DUP1 PUSH2 0x88 JUMPI PUSH2 0x87 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP7 DUP3 PUSH1 0xFF AND PUSH1 0x2 DUP2 LT PUSH2 0x9E JUMPI PUSH2 0x9D PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 ADDMOD SWAP3 POP PUSH2 0xB2 DUP4 DUP4 DUP8 PUSH2 0xD9 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP1 DUP1 PUSH2 0xC5 SWAP1 PUSH2 0x45E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x14 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP8 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 SLOAD DUP1 PUSH2 0x114 JUMPI PUSH2 0x113 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP12 DUP8 ADDMOD SWAP5 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x12A JUMPI PUSH2 0x129 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 PUSH1 0xFF AND PUSH1 0x14 DUP2 LT PUSH2 0x141 JUMPI PUSH2 0x140 PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP7 ADDMOD SWAP5 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x158 JUMPI PUSH2 0x157 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP6 DUP7 MULMOD SWAP4 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x16E JUMPI PUSH2 0x16D PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP5 DUP6 MULMOD SWAP3 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x184 JUMPI PUSH2 0x183 PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP6 DUP5 MULMOD SWAP5 POP DUP6 SWAP2 POP PUSH1 0x0 SLOAD DUP1 PUSH2 0x19D JUMPI PUSH2 0x19C PUSH2 0x3C4 JUMP JUMPDEST JUMPDEST DUP6 DUP9 ADDMOD SWAP6 POP DUP2 SWAP7 POP DUP1 DUP1 PUSH2 0x1B0 SWAP1 PUSH2 0x45E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF5 JUMP JUMPDEST POP DUP6 DUP6 SWAP9 POP SWAP9 POP POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22B DUP3 PUSH2 0x1E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x24A JUMPI PUSH2 0x249 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP PUSH2 0x269 DUP3 DUP3 PUSH2 0x222 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x299 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C9 DUP2 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 PUSH2 0x2DD DUP5 PUSH2 0x26E JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x294 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x325 JUMPI DUP1 PUSH2 0x311 DUP9 DUP3 PUSH2 0x2BA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x344 JUMPI PUSH2 0x343 PUSH2 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH2 0x351 DUP5 DUP3 DUP6 PUSH2 0x2CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x371 JUMPI PUSH2 0x370 PUSH2 0x1D8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP6 DUP3 DUP7 ADD PUSH2 0x32F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x390 DUP6 DUP3 DUP7 ADD PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A3 DUP2 PUSH2 0x299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x469 DUP3 PUSH2 0x451 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x47C JUMPI PUSH2 0x47B PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 DUP1 0x26 MULMOD SWAP9 LOG2 PUSH20 0xFD38FE3B824A16713A4DFE07EC4A0E709CFA9C59 0xB0 0xEF PUSH16 0x1B8B64736F6C63430008110033000000 ","sourceMap":"57:2845:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:338;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2641:9;2662:13;2678:1;2662:17;;2689:13;2721:7;2717:157;2738:11;2734:1;:15;;;2717:157;;;2800:1;;2777:25;;;;;:::i;:::-;;2791:4;2796:1;2791:7;;;;;;;;;:::i;:::-;;;;;;2784:5;2777:25;2769:33;;2833:30;2846:5;2853;2860:2;2833:12;:30::i;:::-;2816:47;;;;;;;;2751:3;;;;;:::i;:::-;;;;2717:157;;;;2888:5;2884:9;;2652:248;;2562:338;;;;:::o;1868:689::-;1950:10;1962;1984:13;2000:2;1984:18;;2013:13;2029:3;2013:19;;2042:13;2058:3;2042:19;;2072:12;2094:13;2117;2140:12;2167:7;2163:356;2184:7;2180:11;;:1;:11;;;2163:356;;;2236:1;;2218:20;;;;;:::i;:::-;;2232:2;2225:5;2218:20;2211:27;;2278:1;;2259:21;;;;;:::i;:::-;;2272:1;2274;2272:4;;;;;;;;;:::i;:::-;;;;2266;2259:21;2252:28;;2321:1;;2302:21;;;;;:::i;:::-;;2315:4;2309;2302:21;2294:29;;2366:1;;2345:23;;;;;:::i;:::-;;2359:5;2352;2345:23;2337:31;;2409:1;;2389:22;;;;;:::i;:::-;;2403:4;2396:5;2389:22;2382:29;;2433:5;2426:12;;2480:1;;2460:22;;;;;:::i;:::-;;2474:4;2467:5;2460:22;2452:30;;2504:4;2496:12;;2193:3;;;;;:::i;:::-;;;;2163:356;;;;2537:5;2544;2529:21;;;;;;;;;;;1868:689;;;;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:249::-;1248:4;1338:18;1330:6;1327:30;1324:56;;;1360:18;;:::i;:::-;1324:56;1410:4;1402:6;1398:17;1390:25;;1173:249;;;:::o;1428:117::-;1537:1;1534;1527:12;1551:77;1588:7;1617:5;1606:16;;1551:77;;;:::o;1634:122::-;1707:24;1725:5;1707:24;:::i;:::-;1700:5;1697:35;1687:63;;1746:1;1743;1736:12;1687:63;1634:122;:::o;1762:139::-;1808:5;1846:6;1833:20;1824:29;;1862:33;1889:5;1862:33;:::i;:::-;1762:139;;;;:::o;1925:643::-;2019:5;2044:79;2060:62;2115:6;2060:62;:::i;:::-;2044:79;:::i;:::-;2035:88;;2143:5;2196:4;2188:6;2184:17;2176:6;2172:30;2225:3;2217:6;2214:15;2211:122;;;2244:79;;:::i;:::-;2211:122;2359:6;2342:220;2376:6;2371:3;2368:15;2342:220;;;2451:3;2480:37;2513:3;2501:10;2480:37;:::i;:::-;2475:3;2468:50;2547:4;2542:3;2538:14;2531:21;;2418:144;2402:4;2397:3;2393:14;2386:21;;2342:220;;;2346:21;2025:543;;1925:643;;;;;:::o;2592:339::-;2661:5;2710:3;2703:4;2695:6;2691:17;2687:27;2677:122;;2718:79;;:::i;:::-;2677:122;2822:4;2844:81;2921:3;2913:6;2905;2844:81;:::i;:::-;2835:90;;2667:264;2592:339;;;;:::o;2937:520::-;3028:6;3036;3085:2;3073:9;3064:7;3060:23;3056:32;3053:119;;;3091:79;;:::i;:::-;3053:119;3211:1;3236:76;3304:7;3295:6;3284:9;3280:22;3236:76;:::i;:::-;3226:86;;3182:140;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;2937:520;;;;;:::o;3463:118::-;3550:24;3568:5;3550:24;:::i;:::-;3545:3;3538:37;3463:118;;:::o;3587:222::-;3680:4;3718:2;3707:9;3703:18;3695:26;;3731:71;3799:1;3788:9;3784:17;3775:6;3731:71;:::i;:::-;3587:222;;;;:::o;3815:180::-;3863:77;3860:1;3853:88;3960:4;3957:1;3950:15;3984:4;3981:1;3974:15;4001:180;4049:77;4046:1;4039:88;4146:4;4143:1;4136:15;4170:4;4167:1;4160:15;4187:180;4235:77;4232:1;4225:88;4332:4;4329:1;4322:15;4356:4;4353:1;4346:15;4373:86;4408:7;4448:4;4441:5;4437:16;4426:27;;4373:86;;;:::o;4465:167::-;4502:3;4525:22;4541:5;4525:22;:::i;:::-;4516:31;;4569:4;4562:5;4559:15;4556:41;;4577:18;;:::i;:::-;4556:41;4624:1;4617:5;4613:13;4606:20;;4465:167;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"242600","executionCost":"infinite","totalCost":"infinite"},"external":{"MiMC5Sponge(uint256[2],uint256)":"infinite"},"internal":{"MiMC5Feistel(uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{"MiMC5Sponge(uint256[2],uint256)":"d622e5a4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_ins\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"}],\"name\":\"MiMC5Sponge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"h\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MIMCSponge.sol\":\"Hasher\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MIMCSponge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ncontract Hasher {\\n    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    uint256[20] c = [\\n        0,\\n        25823191961023811529686723375255045606187170120624741056268890390838310270028,\\n        71153255768872006974285801937521995907343848376936063113800887806988124358800,\\n        51253176922899201987938365653129780755804051536550826601168630951148399005246,\\n        66651710483985382365580181188706173532487386392003341306307921015066514594406,\\n        45887003413921204775397977044284378920236104620216194900669591190628189327887,\\n        14399999722617037892747232478295923748665564430258345135947757381904956977453,\\n        29376176727758177809204424209125257629638239807319618360680345079470240949145,\\n        13768859312518298840937540532277016512087005174650120937309279832230513110846,\\n        54749662990362840569021981534456448557155682756506853240029023635346061661615,\\n        25161436470718351277017231215227846535148280460947816286575563945185127975034,\\n        90370030464179443930112165274275271350651484239155016554738639197417116558730,\\n        92014788260850167582827910417652439562305280453223492851660096740204889381255,\\n        40376490640073034398204558905403523738912091909516510156577526370637723469243,\\n        903792244391531377123276432892896247924738784402045372115602887103675299839,\\n        112203415202699791888928570309186854585561656615192232544262649073999791317171,\\n        114801681136748880679062548782792743842998635558909635247841799223004802934045,\\n        111440818948676816539978930514468038603327388809824089593328295503672011604028,\\n        64965960071752809090438003157362764845283225351402746675238539375404528707397,\\n        98428510787134995495896453413714864789970336245473413374424598985988309743097\\n    ];\\n\\n    function MiMC5Feistel(uint256 _iL, uint256 _iR, uint256 _k) internal view returns(uint256 oL, uint256 oR) {\\n        uint8 nRounds = 20;\\n\\n        uint256 lastL = _iL;\\n        uint256 lastR = _iR;\\n\\n        uint256 mask;\\n        uint256 mask2;\\n        uint256 mask4;\\n        uint256 temp;\\n\\n        for(uint8 i = 0; i < nRounds; i++){\\n            mask = addmod(lastR, _k, p);\\n            mask = addmod(mask, c[i], p);\\n            mask2 = mulmod(mask, mask, p);\\n            mask4 = mulmod(mask2, mask2, p);\\n            mask = mulmod(mask4, mask, p);\\n\\n            temp = lastR;\\n            lastR = addmod(lastL, mask, p);\\n            lastL = temp;\\n        }\\n\\n        return (lastL, lastR);\\n    }\\n    function MiMC5Sponge(uint256[2] memory _ins, uint256 _k) external view returns(uint256 h) {\\n        uint256 lastR = 0;\\n        uint256 lastC = 0;\\n\\n        for(uint8 i = 0; i < _ins.length; i++){\\n            lastR = addmod(lastR, _ins[i], p);\\n            (lastR, lastC) = MiMC5Feistel(lastR, lastC, _k);\\n        }\\n\\n        h = lastR;\\n    }\\n}\",\"keccak256\":\"0x4282af99f3cdbd1943657894e287a58acf550868b1c3565d67c412247a08819e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2871,"contract":"contracts/MIMCSponge.sol:Hasher","label":"p","offset":0,"slot":"0","type":"t_uint256"},{"astId":2896,"contract":"contracts/MIMCSponge.sol:Hasher","label":"c","offset":0,"slot":"1","type":"t_array(t_uint256)20_storage"}],"types":{"t_array(t_uint256)20_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[20]","numberOfBytes":"640"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/convertToERC721.sol":{"ConvertToERC721":{"abi":[{"inputs":[{"internalType":"string","name":"str1","type":"string"},{"internalType":"string","name":"str2","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_127":{"entryPoint":null,"id":127,"parameterSlots":2,"returnSlots":0},"@_3096":{"entryPoint":null,"id":3096,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":388,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":514,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":259,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":111,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":290,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":758,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":647,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1079,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":894,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1040,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":914,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":344,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":779,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":705,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1204,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":205,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":904,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1172,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":658,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":158,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":954,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":131,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":136,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":126,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":121,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":141,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":795,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1159,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1012,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":808,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":964,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1007,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"423:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:22"},"nodeType":"YulFunctionCall","src":"433:12:22"},"nodeType":"YulExpressionStatement","src":"433:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:22"},{"body":{"nodeType":"YulBlock","src":"546:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:22"},"nodeType":"YulFunctionCall","src":"556:12:22"},"nodeType":"YulExpressionStatement","src":"556:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:22"},{"body":{"nodeType":"YulBlock","src":"628:54:22","statements":[{"nodeType":"YulAssignment","src":"638:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:22"},"nodeType":"YulFunctionCall","src":"652:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:22"},"nodeType":"YulFunctionCall","src":"668:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:22"},"nodeType":"YulFunctionCall","src":"648:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:22","type":""}],"src":"580:102:22"},{"body":{"nodeType":"YulBlock","src":"716:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:22"},"nodeType":"YulFunctionCall","src":"726:88:22"},"nodeType":"YulExpressionStatement","src":"726:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:22"},"nodeType":"YulFunctionCall","src":"823:15:22"},"nodeType":"YulExpressionStatement","src":"823:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:22"},"nodeType":"YulFunctionCall","src":"847:15:22"},"nodeType":"YulExpressionStatement","src":"847:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:22"},{"body":{"nodeType":"YulBlock","src":"917:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:22"},"nodeType":"YulFunctionCall","src":"957:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:22"},"nodeType":"YulFunctionCall","src":"945:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:22"},"nodeType":"YulFunctionCall","src":"1098:18:22"},"nodeType":"YulExpressionStatement","src":"1098:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:22"},"nodeType":"YulFunctionCall","src":"1036:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:22"},"nodeType":"YulFunctionCall","src":"1072:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:22"},"nodeType":"YulFunctionCall","src":"1033:62:22"},"nodeType":"YulIf","src":"1030:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:22"},"nodeType":"YulFunctionCall","src":"1127:22:22"},"nodeType":"YulExpressionStatement","src":"1127:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:22","type":""}],"src":"874:281:22"},{"body":{"nodeType":"YulBlock","src":"1202:88:22","statements":[{"nodeType":"YulAssignment","src":"1212:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:22"},"nodeType":"YulFunctionCall","src":"1222:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:22"},"nodeType":"YulFunctionCall","src":"1251:33:22"},"nodeType":"YulExpressionStatement","src":"1251:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:22","type":""}],"src":"1161:129:22"},{"body":{"nodeType":"YulBlock","src":"1363:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:22"},"nodeType":"YulFunctionCall","src":"1470:18:22"},"nodeType":"YulExpressionStatement","src":"1470:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:22"},"nodeType":"YulFunctionCall","src":"1437:30:22"},"nodeType":"YulIf","src":"1434:56:22"},{"nodeType":"YulAssignment","src":"1500:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:22"},"nodeType":"YulFunctionCall","src":"1508:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:22"}]},{"nodeType":"YulAssignment","src":"1574:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:22"},"nodeType":"YulFunctionCall","src":"1582:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:22","type":""}],"src":"1296:308:22"},{"body":{"nodeType":"YulBlock","src":"1672:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:22"},"nodeType":"YulFunctionCall","src":"1772:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:22"},"nodeType":"YulFunctionCall","src":"1791:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:22"},"nodeType":"YulFunctionCall","src":"1785:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:22"},"nodeType":"YulFunctionCall","src":"1765:39:22"},"nodeType":"YulExpressionStatement","src":"1765:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:22"},"nodeType":"YulFunctionCall","src":"1709:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:22","statements":[{"nodeType":"YulAssignment","src":"1725:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:22"},"nodeType":"YulFunctionCall","src":"1730:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:22","statements":[]},"src":"1701:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:22"},"nodeType":"YulFunctionCall","src":"1830:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:22"},"nodeType":"YulFunctionCall","src":"1823:27:22"},"nodeType":"YulExpressionStatement","src":"1823:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:22","type":""}],"src":"1610:246:22"},{"body":{"nodeType":"YulBlock","src":"1957:339:22","statements":[{"nodeType":"YulAssignment","src":"1967:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:22"},"nodeType":"YulFunctionCall","src":"1992:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:22"},"nodeType":"YulFunctionCall","src":"1976:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:22"},"nodeType":"YulFunctionCall","src":"2051:21:22"},"nodeType":"YulExpressionStatement","src":"2051:21:22"},{"nodeType":"YulVariableDeclaration","src":"2081:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:22"},"nodeType":"YulFunctionCall","src":"2092:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:22"},"nodeType":"YulFunctionCall","src":"2148:79:22"},"nodeType":"YulExpressionStatement","src":"2148:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:22"},"nodeType":"YulFunctionCall","src":"2123:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:22"},"nodeType":"YulFunctionCall","src":"2120:25:22"},"nodeType":"YulIf","src":"2117:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:22"},"nodeType":"YulFunctionCall","src":"2238:52:22"},"nodeType":"YulExpressionStatement","src":"2238:52:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:22","type":""}],"src":"1862:434:22"},{"body":{"nodeType":"YulBlock","src":"2389:282:22","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:22"},"nodeType":"YulFunctionCall","src":"2440:79:22"},"nodeType":"YulExpressionStatement","src":"2440:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:22"},"nodeType":"YulFunctionCall","src":"2413:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:22"},"nodeType":"YulFunctionCall","src":"2409:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:22"},"nodeType":"YulFunctionCall","src":"2402:35:22"},"nodeType":"YulIf","src":"2399:122:22"},{"nodeType":"YulVariableDeclaration","src":"2530:27:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:22"},"nodeType":"YulFunctionCall","src":"2544:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:22"},"nodeType":"YulFunctionCall","src":"2634:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:22"},"nodeType":"YulFunctionCall","src":"2575:90:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:22","type":""}],"src":"2316:355:22"},{"body":{"nodeType":"YulBlock","src":"2791:739:22","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:22"},"nodeType":"YulFunctionCall","src":"2839:79:22"},"nodeType":"YulExpressionStatement","src":"2839:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:22"},"nodeType":"YulFunctionCall","src":"2808:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:22"},"nodeType":"YulFunctionCall","src":"2804:32:22"},"nodeType":"YulIf","src":"2801:119:22"},{"nodeType":"YulBlock","src":"2930:291:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:22"},"nodeType":"YulFunctionCall","src":"2965:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:22"},"nodeType":"YulFunctionCall","src":"2959:24:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:22"},"nodeType":"YulFunctionCall","src":"3032:79:22"},"nodeType":"YulExpressionStatement","src":"3032:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:22"},"nodeType":"YulFunctionCall","src":"2999:30:22"},"nodeType":"YulIf","src":"2996:117:22"},{"nodeType":"YulAssignment","src":"3127:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:22"},"nodeType":"YulFunctionCall","src":"3179:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:22"},"nodeType":"YulFunctionCall","src":"3137:74:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:22"}]}]},{"nodeType":"YulBlock","src":"3231:292:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:22"},"nodeType":"YulFunctionCall","src":"3266:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:22"},"nodeType":"YulFunctionCall","src":"3260:25:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:22"},"nodeType":"YulFunctionCall","src":"3334:79:22"},"nodeType":"YulExpressionStatement","src":"3334:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:22"},"nodeType":"YulFunctionCall","src":"3301:30:22"},"nodeType":"YulIf","src":"3298:117:22"},{"nodeType":"YulAssignment","src":"3429:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:22"},"nodeType":"YulFunctionCall","src":"3481:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:22"},"nodeType":"YulFunctionCall","src":"3439:74:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:22"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:22","type":""}],"src":"2677:853:22"},{"body":{"nodeType":"YulBlock","src":"3595:40:22","statements":[{"nodeType":"YulAssignment","src":"3606:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:22"},"nodeType":"YulFunctionCall","src":"3616:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:22","type":""}],"src":"3536:99:22"},{"body":{"nodeType":"YulBlock","src":"3669:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:22"},"nodeType":"YulFunctionCall","src":"3679:88:22"},"nodeType":"YulExpressionStatement","src":"3679:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:22"},"nodeType":"YulFunctionCall","src":"3776:15:22"},"nodeType":"YulExpressionStatement","src":"3776:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:22"},"nodeType":"YulFunctionCall","src":"3800:15:22"},"nodeType":"YulExpressionStatement","src":"3800:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:22"},{"body":{"nodeType":"YulBlock","src":"3878:269:22","statements":[{"nodeType":"YulAssignment","src":"3888:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:22"},"nodeType":"YulFunctionCall","src":"3898:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:22"},"nodeType":"YulFunctionCall","src":"3945:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:22","statements":[{"nodeType":"YulAssignment","src":"4010:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:22"},"nodeType":"YulFunctionCall","src":"4020:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:22"},"nodeType":"YulFunctionCall","src":"3969:26:22"},"nodeType":"YulIf","src":"3966:81:22"},{"body":{"nodeType":"YulBlock","src":"4099:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:22"},"nodeType":"YulFunctionCall","src":"4113:18:22"},"nodeType":"YulExpressionStatement","src":"4113:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:22"},"nodeType":"YulFunctionCall","src":"4083:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:22"},"nodeType":"YulFunctionCall","src":"4060:38:22"},"nodeType":"YulIf","src":"4057:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:22","type":""}],"src":"3827:320:22"},{"body":{"nodeType":"YulBlock","src":"4207:87:22","statements":[{"nodeType":"YulAssignment","src":"4217:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:22"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:22"},"nodeType":"YulFunctionCall","src":"4238:14:22"},"nodeType":"YulExpressionStatement","src":"4238:14:22"},{"nodeType":"YulAssignment","src":"4261:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:22"},"nodeType":"YulFunctionCall","src":"4269:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:22"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:22","type":""}],"src":"4153:141:22"},{"body":{"nodeType":"YulBlock","src":"4344:49:22","statements":[{"nodeType":"YulAssignment","src":"4354:33:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:22"},"nodeType":"YulFunctionCall","src":"4368:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:22","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:22"},"nodeType":"YulFunctionCall","src":"4364:23:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:22"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:22","type":""}],"src":"4300:93:22"},{"body":{"nodeType":"YulBlock","src":"4452:54:22","statements":[{"nodeType":"YulAssignment","src":"4462:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:22"},"nodeType":"YulFunctionCall","src":"4483:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:22"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:22","type":""}],"src":"4399:107:22"},{"body":{"nodeType":"YulBlock","src":"4588:317:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:22","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:22"},"nodeType":"YulFunctionCall","src":"4615:18:22"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:22"},"nodeType":"YulFunctionCall","src":"4654:97:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:22","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:22"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:22"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:22"},"nodeType":"YulFunctionCall","src":"4772:39:22"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:22"}]},{"nodeType":"YulAssignment","src":"4820:30:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:22"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:22"},"nodeType":"YulFunctionCall","src":"4840:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:22"},"nodeType":"YulFunctionCall","src":"4829:21:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:22"}]},{"nodeType":"YulAssignment","src":"4859:40:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:22"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:22"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:22"},"nodeType":"YulFunctionCall","src":"4879:19:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:22"},"nodeType":"YulFunctionCall","src":"4869:30:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:22"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:22","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:22","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:22","type":""}],"src":"4512:393:22"},{"body":{"nodeType":"YulBlock","src":"4956:32:22","statements":[{"nodeType":"YulAssignment","src":"4966:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:22","type":""}],"src":"4911:77:22"},{"body":{"nodeType":"YulBlock","src":"5026:28:22","statements":[{"nodeType":"YulAssignment","src":"5036:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:22","type":""}],"src":"4994:60:22"},{"body":{"nodeType":"YulBlock","src":"5120:82:22","statements":[{"nodeType":"YulAssignment","src":"5130:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:22"},"nodeType":"YulFunctionCall","src":"5170:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:22"},"nodeType":"YulFunctionCall","src":"5161:34:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:22"},"nodeType":"YulFunctionCall","src":"5143:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:22","type":""}],"src":"5060:142:22"},{"body":{"nodeType":"YulBlock","src":"5255:28:22","statements":[{"nodeType":"YulAssignment","src":"5265:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:22"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:22","type":""}],"src":"5208:75:22"},{"body":{"nodeType":"YulBlock","src":"5365:193:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:22","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:22"},"nodeType":"YulFunctionCall","src":"5399:39:22"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:22"},"nodeType":"YulFunctionCall","src":"5488:11:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:22"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:22"},"nodeType":"YulFunctionCall","src":"5509:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:22"},"nodeType":"YulFunctionCall","src":"5460:91:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:22"},"nodeType":"YulFunctionCall","src":"5447:105:22"},"nodeType":"YulExpressionStatement","src":"5447:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:22","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:22","type":""}],"src":"5289:269:22"},{"body":{"nodeType":"YulBlock","src":"5613:24:22","statements":[{"nodeType":"YulAssignment","src":"5623:8:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:22","type":""}],"src":"5564:73:22"},{"body":{"nodeType":"YulBlock","src":"5696:136:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:22"},"nodeType":"YulFunctionCall","src":"5720:32:22"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:22"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:22"},"nodeType":"YulFunctionCall","src":"5761:65:22"},"nodeType":"YulExpressionStatement","src":"5761:65:22"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:22","type":""}],"src":"5643:189:22"},{"body":{"nodeType":"YulBlock","src":"5888:136:22","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:22"},"nodeType":"YulFunctionCall","src":"5969:39:22"},"nodeType":"YulExpressionStatement","src":"5969:39:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:22"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:22"},"nodeType":"YulFunctionCall","src":"5905:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:22","statements":[{"nodeType":"YulAssignment","src":"5922:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:22"},"nodeType":"YulFunctionCall","src":"5931:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:22","statements":[]},"src":"5898:120:22"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:22","type":""}],"src":"5838:186:22"},{"body":{"nodeType":"YulBlock","src":"6109:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:22"},"nodeType":"YulFunctionCall","src":"6165:38:22"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:22","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:22"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:22"},"nodeType":"YulFunctionCall","src":"6249:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:22"},"nodeType":"YulFunctionCall","src":"6235:44:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:22","statements":[{"nodeType":"YulAssignment","src":"6438:23:22","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:22"},"nodeType":"YulFunctionCall","src":"6417:18:22"},"nodeType":"YulIf","src":"6414:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:22"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:22"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:22"},"nodeType":"YulFunctionCall","src":"6532:22:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:22"},"nodeType":"YulFunctionCall","src":"6518:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:22"},"nodeType":"YulFunctionCall","src":"6476:80:22"},"nodeType":"YulExpressionStatement","src":"6476:80:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:22"},"nodeType":"YulFunctionCall","src":"6123:11:22"},"nodeType":"YulIf","src":"6120:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:22","type":""}],"src":"6030:543:22"},{"body":{"nodeType":"YulBlock","src":"6642:54:22","statements":[{"nodeType":"YulAssignment","src":"6652:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:22"},"nodeType":"YulFunctionCall","src":"6673:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:22","type":""}],"src":"6579:117:22"},{"body":{"nodeType":"YulBlock","src":"6753:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:22","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:22"},"nodeType":"YulFunctionCall","src":"6808:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:22"},"nodeType":"YulFunctionCall","src":"6823:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:22"},"nodeType":"YulFunctionCall","src":"6779:51:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:22"},"nodeType":"YulFunctionCall","src":"6775:56:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:22","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:22"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:22"},"nodeType":"YulFunctionCall","src":"6850:15:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:22"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:22","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:22","type":""}],"src":"6702:169:22"},{"body":{"nodeType":"YulBlock","src":"6957:214:22","statements":[{"nodeType":"YulAssignment","src":"7090:37:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:22"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:22"},"nodeType":"YulFunctionCall","src":"7098:29:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:22"}]},{"nodeType":"YulAssignment","src":"7136:29:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:22","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:22"},"nodeType":"YulFunctionCall","src":"7153:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:22"},"nodeType":"YulFunctionCall","src":"7144:21:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:22","type":""}],"src":"6876:295:22"},{"body":{"nodeType":"YulBlock","src":"7268:1303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:22"},"nodeType":"YulFunctionCall","src":"7293:37:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:22"},"nodeType":"YulFunctionCall","src":"7417:18:22"},"nodeType":"YulExpressionStatement","src":"7417:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:22"},"nodeType":"YulFunctionCall","src":"7384:30:22"},"nodeType":"YulIf","src":"7381:56:22"},{"nodeType":"YulVariableDeclaration","src":"7447:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:22"},"nodeType":"YulFunctionCall","src":"7487:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:22"},"nodeType":"YulFunctionCall","src":"7461:38:22"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:22"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:22"},"nodeType":"YulFunctionCall","src":"7546:67:22"},"nodeType":"YulExpressionStatement","src":"7546:67:22"},{"nodeType":"YulVariableDeclaration","src":"7623:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:22","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:22"},"nodeType":"YulFunctionCall","src":"7756:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:22"},"nodeType":"YulFunctionCall","src":"7744:22:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:22"},"nodeType":"YulFunctionCall","src":"7794:37:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:22"},"nodeType":"YulFunctionCall","src":"7951:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:22"},"nodeType":"YulFunctionCall","src":"7945:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:22"},"nodeType":"YulFunctionCall","src":"7930:42:22"},"nodeType":"YulExpressionStatement","src":"7930:42:22"},{"nodeType":"YulAssignment","src":"7989:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:22"},"nodeType":"YulFunctionCall","src":"7999:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:22"}]},{"nodeType":"YulAssignment","src":"8030:31:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:22"},"nodeType":"YulFunctionCall","src":"8043:18:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:22"},"nodeType":"YulFunctionCall","src":"7875:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:22","statements":[{"nodeType":"YulAssignment","src":"7892:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:22"},"nodeType":"YulFunctionCall","src":"7897:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:22","statements":[]},"src":"7867:208:22"},{"body":{"nodeType":"YulBlock","src":"8111:156:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:22"},"nodeType":"YulFunctionCall","src":"8152:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:22"},"nodeType":"YulFunctionCall","src":"8146:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:22"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:22"},"nodeType":"YulFunctionCall","src":"8234:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:22"},"nodeType":"YulFunctionCall","src":"8204:48:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:22"},"nodeType":"YulFunctionCall","src":"8189:64:22"},"nodeType":"YulExpressionStatement","src":"8189:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:22"},"nodeType":"YulFunctionCall","src":"8091:19:22"},"nodeType":"YulIf","src":"8088:179:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:22"},"nodeType":"YulFunctionCall","src":"8297:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:22"},"nodeType":"YulFunctionCall","src":"8293:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:22"},"nodeType":"YulFunctionCall","src":"8280:36:22"},"nodeType":"YulExpressionStatement","src":"8280:36:22"}]},"nodeType":"YulCase","src":"7708:618:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:22","statements":[{"nodeType":"YulAssignment","src":"8412:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:22"},"nodeType":"YulFunctionCall","src":"8427:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:22"},"nodeType":"YulFunctionCall","src":"8421:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:22"},"nodeType":"YulIf","src":"8384:77:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:22"},"nodeType":"YulFunctionCall","src":"8487:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:22"},"nodeType":"YulFunctionCall","src":"8474:81:22"},"nodeType":"YulExpressionStatement","src":"8474:81:22"}]},"nodeType":"YulCase","src":"8335:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:22"},"nodeType":"YulFunctionCall","src":"7685:14:22"},"nodeType":"YulSwitch","src":"7678:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:22","type":""}],"src":"7176:1395:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620028e2380380620028e2833981810160405281019062000037919062000202565b818181600090816200004a9190620004d2565b5080600190816200005c9190620004d2565b50505060006006819055505050620005b9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d8826200008d565b810181811067ffffffffffffffff82111715620000fa57620000f96200009e565b5b80604052505050565b60006200010f6200006f565b90506200011d8282620000cd565b919050565b600067ffffffffffffffff82111562000140576200013f6200009e565b5b6200014b826200008d565b9050602081019050919050565b60005b83811015620001785780820151818401526020810190506200015b565b60008484015250505050565b60006200019b620001958462000122565b62000103565b905082815260208101848484011115620001ba57620001b962000088565b5b620001c784828562000158565b509392505050565b600082601f830112620001e757620001e662000083565b5b8151620001f984826020860162000184565b91505092915050565b600080604083850312156200021c576200021b62000079565b5b600083015167ffffffffffffffff8111156200023d576200023c6200007e565b5b6200024b85828601620001cf565b925050602083015167ffffffffffffffff8111156200026f576200026e6200007e565b5b6200027d85828601620001cf565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002da57607f821691505b602082108103620002f057620002ef62000292565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200031b565b6200036686836200031b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003b3620003ad620003a7846200037e565b62000388565b6200037e565b9050919050565b6000819050919050565b620003cf8362000392565b620003e7620003de82620003ba565b84845462000328565b825550505050565b600090565b620003fe620003ef565b6200040b818484620003c4565b505050565b5b81811015620004335762000427600082620003f4565b60018101905062000411565b5050565b601f82111562000482576200044c81620002f6565b62000457846200030b565b8101602085101562000467578190505b6200047f62000476856200030b565b83018262000410565b50505b505050565b600082821c905092915050565b6000620004a76000198460080262000487565b1980831691505092915050565b6000620004c2838362000494565b9150826002028217905092915050565b620004dd8262000287565b67ffffffffffffffff811115620004f957620004f86200009e565b5b620005058254620002c1565b6200051282828562000437565b600060209050601f8311600181146200054a576000841562000535578287015190505b620005418582620004b4565b865550620005b1565b601f1984166200055a86620002f6565b60005b8281101562000584578489015182556001820191506020850194506020810190506200055d565b86831015620005a45784890151620005a0601f89168262000494565b8355505b6001600288020188555050505b505050505050565b61231980620005c96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c87b56dd11610066578063c87b56dd14610282578063d082e381146102b2578063da86f4a9146102d0578063e985e9c5146102ec576100f5565b806370a08231146101fc57806395d89b411461022c578063a22cb4651461024a578063b88d4fde14610266576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806342842e0e146101b05780636352211e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f919061139d565b61031c565b60405161012191906113e5565b60405180910390f35b6101326103fe565b60405161013f9190611490565b60405180910390f35b610162600480360381019061015d91906114e8565b610490565b60405161016f9190611556565b60405180910390f35b610192600480360381019061018d919061159d565b6104d6565b005b6101ae60048036038101906101a991906115dd565b6105ed565b005b6101ca60048036038101906101c591906115dd565b61064d565b005b6101e660048036038101906101e191906114e8565b61066d565b6040516101f39190611556565b60405180910390f35b61021660048036038101906102119190611630565b6106f3565b604051610223919061166c565b60405180910390f35b6102346107aa565b6040516102419190611490565b60405180910390f35b610264600480360381019061025f91906116b3565b61083c565b005b610280600480360381019061027b9190611828565b610852565b005b61029c600480360381019061029791906114e8565b6108b4565b6040516102a99190611490565b60405180910390f35b6102ba610959565b6040516102c7919061166c565b60405180910390f35b6102ea60048036038101906102e5919061194c565b61095f565b005b61030660048036038101906103019190611995565b61099d565b60405161031391906113e5565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f757506103f682610a31565b5b9050919050565b60606000805461040d90611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461043990611a04565b80156104865780601f1061045b57610100808354040283529160200191610486565b820191906000526020600020905b81548152906001019060200180831161046957829003601f168201915b5050505050905090565b600061049b82610a9b565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104e18261066d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890611aa7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610570610ae6565b73ffffffffffffffffffffffffffffffffffffffff16148061059f575061059e81610599610ae6565b61099d565b5b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b39565b60405180910390fd5b6105e88383610aee565b505050565b6105fe6105f8610ae6565b82610ba7565b61063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490611bcb565b60405180910390fd5b610648838383610c3c565b505050565b61066883838360405180602001604052806000815250610852565b505050565b60008061067983610f35565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190611c37565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a90611cc9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107b990611a04565b80601f01602080910402602001604051908101604052809291908181526020018280546107e590611a04565b80156108325780601f1061080757610100808354040283529160200191610832565b820191906000526020600020905b81548152906001019060200180831161081557829003601f168201915b5050505050905090565b61084e610847610ae6565b8383610f72565b5050565b61086361085d610ae6565b83610ba7565b6108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089990611bcb565b60405180910390fd5b6108ae848484846110de565b50505050565b60606007600083815260200190815260200160002080546108d490611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461090090611a04565b801561094d5780601f106109225761010080835404028352916020019161094d565b820191906000526020600020905b81548152906001019060200180831161093057829003601f168201915b50505050509050919050565b60065481565b8060076000600654815260200190815260200160002090816109819190611e95565b506006600081548092919061099590611f96565b919050555050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610aa48161113a565b610ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada90611c37565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b618361066d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bb38361066d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bf55750610bf4818561099d565b5b80610c3357508373ffffffffffffffffffffffffffffffffffffffff16610c1b84610490565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c5c8261066d565b73ffffffffffffffffffffffffffffffffffffffff1614610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990612050565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d18906120e2565b60405180910390fd5b610d2e838383600161117b565b8273ffffffffffffffffffffffffffffffffffffffff16610d4e8261066d565b73ffffffffffffffffffffffffffffffffffffffff1614610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b90612050565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f308383836001611181565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd79061214e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110d191906113e5565b60405180910390a3505050565b6110e9848484610c3c565b6110f584848484611187565b611134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112b906121e0565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff1661115c83610f35565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111a88473ffffffffffffffffffffffffffffffffffffffff1661130e565b15611301578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d1610ae6565b8786866040518563ffffffff1660e01b81526004016111f39493929190612255565b6020604051808303816000875af192505050801561122f57506040513d601f19601f8201168201806040525081019061122c91906122b6565b60015b6112b1573d806000811461125f576040519150601f19603f3d011682016040523d82523d6000602084013e611264565b606091505b5060008151036112a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a0906121e0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611306565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61137a81611345565b811461138557600080fd5b50565b60008135905061139781611371565b92915050565b6000602082840312156113b3576113b261133b565b5b60006113c184828501611388565b91505092915050565b60008115159050919050565b6113df816113ca565b82525050565b60006020820190506113fa60008301846113d6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561143a57808201518184015260208101905061141f565b60008484015250505050565b6000601f19601f8301169050919050565b600061146282611400565b61146c818561140b565b935061147c81856020860161141c565b61148581611446565b840191505092915050565b600060208201905081810360008301526114aa8184611457565b905092915050565b6000819050919050565b6114c5816114b2565b81146114d057600080fd5b50565b6000813590506114e2816114bc565b92915050565b6000602082840312156114fe576114fd61133b565b5b600061150c848285016114d3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061154082611515565b9050919050565b61155081611535565b82525050565b600060208201905061156b6000830184611547565b92915050565b61157a81611535565b811461158557600080fd5b50565b60008135905061159781611571565b92915050565b600080604083850312156115b4576115b361133b565b5b60006115c285828601611588565b92505060206115d3858286016114d3565b9150509250929050565b6000806000606084860312156115f6576115f561133b565b5b600061160486828701611588565b935050602061161586828701611588565b9250506040611626868287016114d3565b9150509250925092565b6000602082840312156116465761164561133b565b5b600061165484828501611588565b91505092915050565b611666816114b2565b82525050565b6000602082019050611681600083018461165d565b92915050565b611690816113ca565b811461169b57600080fd5b50565b6000813590506116ad81611687565b92915050565b600080604083850312156116ca576116c961133b565b5b60006116d885828601611588565b92505060206116e98582860161169e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61173582611446565b810181811067ffffffffffffffff82111715611754576117536116fd565b5b80604052505050565b6000611767611331565b9050611773828261172c565b919050565b600067ffffffffffffffff821115611793576117926116fd565b5b61179c82611446565b9050602081019050919050565b82818337600083830152505050565b60006117cb6117c684611778565b61175d565b9050828152602081018484840111156117e7576117e66116f8565b5b6117f28482856117a9565b509392505050565b600082601f83011261180f5761180e6116f3565b5b813561181f8482602086016117b8565b91505092915050565b600080600080608085870312156118425761184161133b565b5b600061185087828801611588565b945050602061186187828801611588565b9350506040611872878288016114d3565b925050606085013567ffffffffffffffff81111561189357611892611340565b5b61189f878288016117fa565b91505092959194509250565b600067ffffffffffffffff8211156118c6576118c56116fd565b5b6118cf82611446565b9050602081019050919050565b60006118ef6118ea846118ab565b61175d565b90508281526020810184848401111561190b5761190a6116f8565b5b6119168482856117a9565b509392505050565b600082601f830112611933576119326116f3565b5b81356119438482602086016118dc565b91505092915050565b6000602082840312156119625761196161133b565b5b600082013567ffffffffffffffff8111156119805761197f611340565b5b61198c8482850161191e565b91505092915050565b600080604083850312156119ac576119ab61133b565b5b60006119ba85828601611588565b92505060206119cb85828601611588565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a1c57607f821691505b602082108103611a2f57611a2e6119d5565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a9160218361140b565b9150611a9c82611a35565b604082019050919050565b60006020820190508181036000830152611ac081611a84565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b23603d8361140b565b9150611b2e82611ac7565b604082019050919050565b60006020820190508181036000830152611b5281611b16565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611bb5602d8361140b565b9150611bc082611b59565b604082019050919050565b60006020820190508181036000830152611be481611ba8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c2160188361140b565b9150611c2c82611beb565b602082019050919050565b60006020820190508181036000830152611c5081611c14565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611cb360298361140b565b9150611cbe82611c57565b604082019050919050565b60006020820190508181036000830152611ce281611ca6565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d4b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d0e565b611d558683611d0e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d92611d8d611d88846114b2565b611d6d565b6114b2565b9050919050565b6000819050919050565b611dac83611d77565b611dc0611db882611d99565b848454611d1b565b825550505050565b600090565b611dd5611dc8565b611de0818484611da3565b505050565b5b81811015611e0457611df9600082611dcd565b600181019050611de6565b5050565b601f821115611e4957611e1a81611ce9565b611e2384611cfe565b81016020851015611e32578190505b611e46611e3e85611cfe565b830182611de5565b50505b505050565b600082821c905092915050565b6000611e6c60001984600802611e4e565b1980831691505092915050565b6000611e858383611e5b565b9150826002028217905092915050565b611e9e82611400565b67ffffffffffffffff811115611eb757611eb66116fd565b5b611ec18254611a04565b611ecc828285611e08565b600060209050601f831160018114611eff5760008415611eed578287015190505b611ef78582611e79565b865550611f5f565b601f198416611f0d86611ce9565b60005b82811015611f3557848901518255600182019150602085019450602081019050611f10565b86831015611f525784890151611f4e601f891682611e5b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fa1826114b2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fd357611fd2611f67565b5b600182019050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061203a60258361140b565b915061204582611fde565b604082019050919050565b600060208201905081810360008301526120698161202d565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006120cc60248361140b565b91506120d782612070565b604082019050919050565b600060208201905081810360008301526120fb816120bf565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061213860198361140b565b915061214382612102565b602082019050919050565b600060208201905081810360008301526121678161212b565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006121ca60328361140b565b91506121d58261216e565b604082019050919050565b600060208201905081810360008301526121f9816121bd565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061222782612200565b612231818561220b565b935061224181856020860161141c565b61224a81611446565b840191505092915050565b600060808201905061226a6000830187611547565b6122776020830186611547565b612284604083018561165d565b8181036060830152612296818461221c565b905095945050505050565b6000815190506122b081611371565b92915050565b6000602082840312156122cc576122cb61133b565b5b60006122da848285016122a1565b9150509291505056fea26469706673582212204f6c8e6d32ec7b6571188a7c27933c28fb2f5f47bd3dfb9ba6f762d2bcaa856264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28E2 CODESIZE SUB DUP1 PUSH3 0x28E2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x202 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x4D2 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xD8 DUP3 PUSH3 0x8D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xFA JUMPI PUSH3 0xF9 PUSH3 0x9E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10F PUSH3 0x6F JUMP JUMPDEST SWAP1 POP PUSH3 0x11D DUP3 DUP3 PUSH3 0xCD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x140 JUMPI PUSH3 0x13F PUSH3 0x9E JUMP JUMPDEST JUMPDEST PUSH3 0x14B DUP3 PUSH3 0x8D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x178 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x15B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x19B PUSH3 0x195 DUP5 PUSH3 0x122 JUMP JUMPDEST PUSH3 0x103 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1BA JUMPI PUSH3 0x1B9 PUSH3 0x88 JUMP JUMPDEST JUMPDEST PUSH3 0x1C7 DUP5 DUP3 DUP6 PUSH3 0x158 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1E7 JUMPI PUSH3 0x1E6 PUSH3 0x83 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1F9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x184 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x21C JUMPI PUSH3 0x21B PUSH3 0x79 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x23D JUMPI PUSH3 0x23C PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH3 0x24B DUP6 DUP3 DUP7 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x26F JUMPI PUSH3 0x26E PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH3 0x27D DUP6 DUP3 DUP7 ADD PUSH3 0x1CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2F0 JUMPI PUSH3 0x2EF PUSH3 0x292 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x35A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x31B JUMP JUMPDEST PUSH3 0x366 DUP7 DUP4 PUSH3 0x31B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B3 PUSH3 0x3AD PUSH3 0x3A7 DUP5 PUSH3 0x37E JUMP JUMPDEST PUSH3 0x388 JUMP JUMPDEST PUSH3 0x37E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3CF DUP4 PUSH3 0x392 JUMP JUMPDEST PUSH3 0x3E7 PUSH3 0x3DE DUP3 PUSH3 0x3BA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x328 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3FE PUSH3 0x3EF JUMP JUMPDEST PUSH3 0x40B DUP2 DUP5 DUP5 PUSH3 0x3C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x433 JUMPI PUSH3 0x427 PUSH1 0x0 DUP3 PUSH3 0x3F4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x411 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x482 JUMPI PUSH3 0x44C DUP2 PUSH3 0x2F6 JUMP JUMPDEST PUSH3 0x457 DUP5 PUSH3 0x30B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x467 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x47F PUSH3 0x476 DUP6 PUSH3 0x30B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x410 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x487 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4C2 DUP4 DUP4 PUSH3 0x494 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4DD DUP3 PUSH3 0x287 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F9 JUMPI PUSH3 0x4F8 PUSH3 0x9E JUMP JUMPDEST JUMPDEST PUSH3 0x505 DUP3 SLOAD PUSH3 0x2C1 JUMP JUMPDEST PUSH3 0x512 DUP3 DUP3 DUP6 PUSH3 0x437 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x54A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x535 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x541 DUP6 DUP3 PUSH3 0x4B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5B1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x55A DUP7 PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x584 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x55D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5A4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5A0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x494 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2319 DUP1 PUSH3 0x5C9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD082E381 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDA86F4A9 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x266 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F7 JUMPI POP PUSH2 0x3F6 DUP3 PUSH2 0xA31 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x40D SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x439 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x486 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x486 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x469 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1 DUP3 PUSH2 0x66D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x570 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x59F JUMPI POP PUSH2 0x59E DUP2 PUSH2 0x599 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 PUSH2 0xAEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x5F8 PUSH2 0xAE6 JUMP JUMPDEST DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xC3C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x668 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x852 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x679 DUP4 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E1 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75A SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E5 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x832 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x807 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x832 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x815 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84E PUSH2 0x847 PUSH2 0xAE6 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF72 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x863 PUSH2 0x85D PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AE DUP5 DUP5 DUP5 DUP5 PUSH2 0x10DE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x8D4 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x900 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x94D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x922 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x94D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x930 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x995 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA4 DUP2 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB61 DUP4 PUSH2 0x66D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBB3 DUP4 PUSH2 0x66D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBF5 JUMPI POP PUSH2 0xBF4 DUP2 DUP6 PUSH2 0x99D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC33 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC1B DUP5 PUSH2 0x490 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5C DUP3 PUSH2 0x66D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD18 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD4E DUP3 PUSH2 0x66D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF30 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1181 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD7 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10E9 DUP5 DUP5 DUP5 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x10F5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1187 JUMP JUMPDEST PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x115C DUP4 PUSH2 0xF35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x130E JUMP JUMPDEST ISZERO PUSH2 0x1301 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D1 PUSH2 0xAE6 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x122F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122C SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x1345 JUMP JUMPDEST DUP2 EQ PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1397 DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH2 0x13B2 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1388 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x13CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x143A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1462 DUP3 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x146C DUP2 DUP6 PUSH2 0x140B JUMP JUMPDEST SWAP4 POP PUSH2 0x147C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1485 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14AA DUP2 DUP5 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C5 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x14D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E2 DUP2 PUSH2 0x14BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FE JUMPI PUSH2 0x14FD PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x150C DUP5 DUP3 DUP6 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1540 DUP3 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x157A DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1597 DUP2 PUSH2 0x1571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B4 JUMPI PUSH2 0x15B3 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15D3 DUP6 DUP3 DUP7 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1604 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1615 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1626 DUP7 DUP3 DUP8 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP5 DUP3 DUP6 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1666 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1681 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1690 DUP2 PUSH2 0x13CA JUMP JUMPDEST DUP2 EQ PUSH2 0x169B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AD DUP2 PUSH2 0x1687 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E9 DUP6 DUP3 DUP7 ADD PUSH2 0x169E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1735 DUP3 PUSH2 0x1446 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1754 JUMPI PUSH2 0x1753 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1767 PUSH2 0x1331 JUMP JUMPDEST SWAP1 POP PUSH2 0x1773 DUP3 DUP3 PUSH2 0x172C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST PUSH2 0x179C DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CB PUSH2 0x17C6 DUP5 PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17E7 JUMPI PUSH2 0x17E6 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH2 0x17F2 DUP5 DUP3 DUP6 PUSH2 0x17A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x16F3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x181F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1850 DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1861 DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1872 DUP8 DUP3 DUP9 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1893 JUMPI PUSH2 0x1892 PUSH2 0x1340 JUMP JUMPDEST JUMPDEST PUSH2 0x189F DUP8 DUP3 DUP9 ADD PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18C6 JUMPI PUSH2 0x18C5 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST PUSH2 0x18CF DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EF PUSH2 0x18EA DUP5 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x190B JUMPI PUSH2 0x190A PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1916 DUP5 DUP3 DUP6 PUSH2 0x17A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x16F3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1943 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x1340 JUMP JUMPDEST JUMPDEST PUSH2 0x198C DUP5 DUP3 DUP6 ADD PUSH2 0x191E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CB DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A1C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A2F JUMPI PUSH2 0x1A2E PUSH2 0x19D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A91 PUSH1 0x21 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9C DUP3 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC0 DUP2 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B23 PUSH1 0x3D DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B52 DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB5 PUSH1 0x2D DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC0 DUP3 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE4 DUP2 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 PUSH1 0x18 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C50 DUP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB3 PUSH1 0x29 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBE DUP3 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE2 DUP2 PUSH2 0x1CA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1D4B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x1D55 DUP7 DUP4 PUSH2 0x1D0E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH2 0x1D8D PUSH2 0x1D88 DUP5 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DAC DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1DC0 PUSH2 0x1DB8 DUP3 PUSH2 0x1D99 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1D1B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1DD5 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x1DE0 DUP2 DUP5 DUP5 PUSH2 0x1DA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E04 JUMPI PUSH2 0x1DF9 PUSH1 0x0 DUP3 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1E49 JUMPI PUSH2 0x1E1A DUP2 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x1E23 DUP5 PUSH2 0x1CFE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1E32 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1E46 PUSH2 0x1E3E DUP6 PUSH2 0x1CFE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1DE5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1E4E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E85 DUP4 DUP4 PUSH2 0x1E5B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9E DUP3 PUSH2 0x1400 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB7 JUMPI PUSH2 0x1EB6 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST PUSH2 0x1EC1 DUP3 SLOAD PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0x1ECC DUP3 DUP3 DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EFF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EED JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1EF7 DUP6 DUP3 PUSH2 0x1E79 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1F0D DUP7 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F35 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F10 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1F52 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1F4E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1E5B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FA1 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1FD3 JUMPI PUSH2 0x1FD2 PUSH2 0x1F67 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203A PUSH1 0x25 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x2045 DUP3 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2069 DUP2 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CC PUSH1 0x24 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP3 PUSH2 0x2070 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20FB DUP2 PUSH2 0x20BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2138 PUSH1 0x19 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x2143 DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2167 DUP2 PUSH2 0x212B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CA PUSH1 0x32 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x21D5 DUP3 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F9 DUP2 PUSH2 0x21BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2227 DUP3 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x2231 DUP2 DUP6 PUSH2 0x220B JUMP JUMPDEST SWAP4 POP PUSH2 0x2241 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST PUSH2 0x224A DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x226A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x2277 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x2284 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x165D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2296 DUP2 DUP5 PUSH2 0x221C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B0 DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22CC JUMPI PUSH2 0x22CB PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22DA DUP5 DUP3 DUP6 ADD PUSH2 0x22A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH13 0x8E6D32EC7B6571188A7C27933C 0x28 0xFB 0x2F 0x5F SELFBALANCE 0xBD RETURNDATASIZE 0xFB SWAP12 0xA6 0xF7 PUSH3 0xD2BCAA DUP6 PUSH3 0x64736F PUSH13 0x63430008110033000000000000 ","sourceMap":"145:505:17:-:0;;;285:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:4;349;1464:5:1;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;379:1:17::1;364:12;:16;;;;285:102:::0;;145:505;;7:75:22;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;145:505:17:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_975":{"entryPoint":4481,"id":975,"parameterSlots":4,"returnSlots":0},"@_approve_841":{"entryPoint":2798,"id":841,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_962":{"entryPoint":4475,"id":962,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_949":{"entryPoint":4487,"id":949,"parameterSlots":4,"returnSlots":1},"@_exists_510":{"entryPoint":4410,"id":510,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_544":{"entryPoint":2983,"id":544,"parameterSlots":2,"returnSlots":1},"@_msgSender_1494":{"entryPoint":2790,"id":1494,"parameterSlots":0,"returnSlots":1},"@_ownerOf_492":{"entryPoint":3893,"id":492,"parameterSlots":1,"returnSlots":1},"@_requireMinted_887":{"entryPoint":2715,"id":887,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_479":{"entryPoint":4318,"id":479,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_873":{"entryPoint":3954,"id":873,"parameterSlots":3,"returnSlots":0},"@_transfer_817":{"entryPoint":3132,"id":817,"parameterSlots":3,"returnSlots":0},"@approve_321":{"entryPoint":1238,"id":321,"parameterSlots":2,"returnSlots":0},"@balanceOf_182":{"entryPoint":1779,"id":182,"parameterSlots":1,"returnSlots":1},"@getApproved_339":{"entryPoint":1168,"id":339,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_374":{"entryPoint":2461,"id":374,"parameterSlots":2,"returnSlots":1},"@isContract_1170":{"entryPoint":4878,"id":1170,"parameterSlots":1,"returnSlots":1},"@mintNft_3125":{"entryPoint":2399,"id":3125,"parameterSlots":1,"returnSlots":0},"@name_220":{"entryPoint":1022,"id":220,"parameterSlots":0,"returnSlots":1},"@ownerOf_210":{"entryPoint":1645,"id":210,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_420":{"entryPoint":1613,"id":420,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_450":{"entryPoint":2130,"id":450,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_356":{"entryPoint":2108,"id":356,"parameterSlots":2,"returnSlots":0},"@supportsInterface_158":{"entryPoint":796,"id":158,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1756":{"entryPoint":2609,"id":1756,"parameterSlots":1,"returnSlots":1},"@symbol_230":{"entryPoint":1962,"id":230,"parameterSlots":0,"returnSlots":1},"@tokenCounter_3076":{"entryPoint":2393,"id":3076,"parameterSlots":0,"returnSlots":0},"@tokenURI_3109":{"entryPoint":2228,"id":3109,"parameterSlots":1,"returnSlots":1},"@transferFrom_401":{"entryPoint":1517,"id":401,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6072,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":6364,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5790,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8865,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6138,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":6430,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5597,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6184,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5811,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5533,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5447,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5078,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5207,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7080,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":8237,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8383,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7188,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6788,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":6934,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5725,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8789,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5093,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7115,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8272,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8418,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8526,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7369,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6823,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6969,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5740,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5981,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4913,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6008,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":6315,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":7401,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8704,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5120,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8715,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5131,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":7688,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":5429,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5066,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4933,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5397,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5298,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":7653,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":7543,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7829,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6057,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5148,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":7422,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6660,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":7801,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5932,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":7533,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8086,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":7771,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":8039,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6613,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5885,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":7577,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5875,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5880,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4928,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4923,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5190,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":7438,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":7758,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":7629,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7001,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8558,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8158,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8304,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8450,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7255,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7147,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6709,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":6855,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":7451,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":7587,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5489,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5767,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":4977,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5308,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":7624,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28359:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"378:105:22","statements":[{"nodeType":"YulAssignment","src":"388:89:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:22","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:22"},"nodeType":"YulFunctionCall","src":"399:78:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:22"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:22","type":""}],"src":"334:149:22"},{"body":{"nodeType":"YulBlock","src":"531:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:22"},"nodeType":"YulFunctionCall","src":"589:12:22"},"nodeType":"YulExpressionStatement","src":"589:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:22"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:22"},"nodeType":"YulFunctionCall","src":"561:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:22"},"nodeType":"YulFunctionCall","src":"551:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:22"},"nodeType":"YulFunctionCall","src":"544:42:22"},"nodeType":"YulIf","src":"541:62:22"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:22","type":""}],"src":"489:120:22"},{"body":{"nodeType":"YulBlock","src":"666:86:22","statements":[{"nodeType":"YulAssignment","src":"676:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:22"},"nodeType":"YulFunctionCall","src":"685:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:22"},"nodeType":"YulFunctionCall","src":"714:32:22"},"nodeType":"YulExpressionStatement","src":"714:32:22"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:22","type":""}],"src":"615:137:22"},{"body":{"nodeType":"YulBlock","src":"823:262:22","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:22"},"nodeType":"YulFunctionCall","src":"871:79:22"},"nodeType":"YulExpressionStatement","src":"871:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:22"},"nodeType":"YulFunctionCall","src":"840:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:22"},"nodeType":"YulFunctionCall","src":"836:32:22"},"nodeType":"YulIf","src":"833:119:22"},{"nodeType":"YulBlock","src":"962:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:22"},"nodeType":"YulFunctionCall","src":"1036:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:22"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:22"},"nodeType":"YulFunctionCall","src":"1016:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:22","type":""}],"src":"758:327:22"},{"body":{"nodeType":"YulBlock","src":"1133:48:22","statements":[{"nodeType":"YulAssignment","src":"1143:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:22"},"nodeType":"YulFunctionCall","src":"1161:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:22"},"nodeType":"YulFunctionCall","src":"1154:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:22","type":""}],"src":"1091:90:22"},{"body":{"nodeType":"YulBlock","src":"1246:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:22"},"nodeType":"YulFunctionCall","src":"1268:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:22"},"nodeType":"YulFunctionCall","src":"1256:34:22"},"nodeType":"YulExpressionStatement","src":"1256:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:22","type":""}],"src":"1187:109:22"},{"body":{"nodeType":"YulBlock","src":"1394:118:22","statements":[{"nodeType":"YulAssignment","src":"1404:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:22"},"nodeType":"YulFunctionCall","src":"1412:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:22"},"nodeType":"YulFunctionCall","src":"1487:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:22"},"nodeType":"YulFunctionCall","src":"1440:65:22"},"nodeType":"YulExpressionStatement","src":"1440:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:22","type":""}],"src":"1302:210:22"},{"body":{"nodeType":"YulBlock","src":"1577:40:22","statements":[{"nodeType":"YulAssignment","src":"1588:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:22"},"nodeType":"YulFunctionCall","src":"1598:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:22","type":""}],"src":"1518:99:22"},{"body":{"nodeType":"YulBlock","src":"1719:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:22"},"nodeType":"YulFunctionCall","src":"1729:19:22"},"nodeType":"YulExpressionStatement","src":"1729:19:22"},{"nodeType":"YulAssignment","src":"1757:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:22"},"nodeType":"YulFunctionCall","src":"1772:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:22","type":""}],"src":"1623:169:22"},{"body":{"nodeType":"YulBlock","src":"1860:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:22"},"nodeType":"YulFunctionCall","src":"1960:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:22"},"nodeType":"YulFunctionCall","src":"1979:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:22"},"nodeType":"YulFunctionCall","src":"1973:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:22"},"nodeType":"YulFunctionCall","src":"1953:39:22"},"nodeType":"YulExpressionStatement","src":"1953:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:22"},"nodeType":"YulFunctionCall","src":"1897:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:22","statements":[{"nodeType":"YulAssignment","src":"1913:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:22"},"nodeType":"YulFunctionCall","src":"1918:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:22","statements":[]},"src":"1889:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:22"},"nodeType":"YulFunctionCall","src":"2018:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:22"},"nodeType":"YulFunctionCall","src":"2011:27:22"},"nodeType":"YulExpressionStatement","src":"2011:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:22","type":""}],"src":"1798:246:22"},{"body":{"nodeType":"YulBlock","src":"2098:54:22","statements":[{"nodeType":"YulAssignment","src":"2108:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:22"},"nodeType":"YulFunctionCall","src":"2122:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:22"},"nodeType":"YulFunctionCall","src":"2138:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:22"},"nodeType":"YulFunctionCall","src":"2118:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:22","type":""}],"src":"2050:102:22"},{"body":{"nodeType":"YulBlock","src":"2250:285:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:22"},"nodeType":"YulFunctionCall","src":"2274:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:22"},"nodeType":"YulFunctionCall","src":"2329:71:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:22"},"nodeType":"YulFunctionCall","src":"2444:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:22"},"nodeType":"YulFunctionCall","src":"2409:65:22"},"nodeType":"YulExpressionStatement","src":"2409:65:22"},{"nodeType":"YulAssignment","src":"2483:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:22"},"nodeType":"YulFunctionCall","src":"2499:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:22"},"nodeType":"YulFunctionCall","src":"2490:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:22","type":""}],"src":"2158:377:22"},{"body":{"nodeType":"YulBlock","src":"2659:195:22","statements":[{"nodeType":"YulAssignment","src":"2669:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:22"},"nodeType":"YulFunctionCall","src":"2677:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:22"},"nodeType":"YulFunctionCall","src":"2712:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:22"},"nodeType":"YulFunctionCall","src":"2731:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:22"},"nodeType":"YulFunctionCall","src":"2705:47:22"},"nodeType":"YulExpressionStatement","src":"2705:47:22"},{"nodeType":"YulAssignment","src":"2761:86:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:22"},"nodeType":"YulFunctionCall","src":"2769:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:22","type":""}],"src":"2541:313:22"},{"body":{"nodeType":"YulBlock","src":"2905:32:22","statements":[{"nodeType":"YulAssignment","src":"2915:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:22","type":""}],"src":"2860:77:22"},{"body":{"nodeType":"YulBlock","src":"2986:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:22"},"nodeType":"YulFunctionCall","src":"3045:12:22"},"nodeType":"YulExpressionStatement","src":"3045:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:22"},"nodeType":"YulFunctionCall","src":"3016:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:22"},"nodeType":"YulFunctionCall","src":"3006:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:22"},"nodeType":"YulFunctionCall","src":"2999:43:22"},"nodeType":"YulIf","src":"2996:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:22","type":""}],"src":"2943:122:22"},{"body":{"nodeType":"YulBlock","src":"3123:87:22","statements":[{"nodeType":"YulAssignment","src":"3133:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:22"},"nodeType":"YulFunctionCall","src":"3142:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:22"},"nodeType":"YulFunctionCall","src":"3171:33:22"},"nodeType":"YulExpressionStatement","src":"3171:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:22","type":""}],"src":"3071:139:22"},{"body":{"nodeType":"YulBlock","src":"3282:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:22"},"nodeType":"YulFunctionCall","src":"3330:79:22"},"nodeType":"YulExpressionStatement","src":"3330:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:22"},"nodeType":"YulFunctionCall","src":"3299:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:22"},"nodeType":"YulFunctionCall","src":"3295:32:22"},"nodeType":"YulIf","src":"3292:119:22"},{"nodeType":"YulBlock","src":"3421:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:22"},"nodeType":"YulFunctionCall","src":"3496:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:22"},"nodeType":"YulFunctionCall","src":"3475:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:22","type":""}],"src":"3216:329:22"},{"body":{"nodeType":"YulBlock","src":"3596:81:22","statements":[{"nodeType":"YulAssignment","src":"3606:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:22"},"nodeType":"YulFunctionCall","src":"3617:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:22","type":""}],"src":"3551:126:22"},{"body":{"nodeType":"YulBlock","src":"3728:51:22","statements":[{"nodeType":"YulAssignment","src":"3738:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:22"},"nodeType":"YulFunctionCall","src":"3749:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:22","type":""}],"src":"3683:96:22"},{"body":{"nodeType":"YulBlock","src":"3850:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:22"},"nodeType":"YulFunctionCall","src":"3872:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:22"},"nodeType":"YulFunctionCall","src":"3860:37:22"},"nodeType":"YulExpressionStatement","src":"3860:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:22","type":""}],"src":"3785:118:22"},{"body":{"nodeType":"YulBlock","src":"4007:124:22","statements":[{"nodeType":"YulAssignment","src":"4017:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:22"},"nodeType":"YulFunctionCall","src":"4025:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:22"},"nodeType":"YulFunctionCall","src":"4106:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:22"},"nodeType":"YulFunctionCall","src":"4053:71:22"},"nodeType":"YulExpressionStatement","src":"4053:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:22","type":""}],"src":"3909:222:22"},{"body":{"nodeType":"YulBlock","src":"4180:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:22"},"nodeType":"YulFunctionCall","src":"4239:12:22"},"nodeType":"YulExpressionStatement","src":"4239:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:22"},"nodeType":"YulFunctionCall","src":"4210:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:22"},"nodeType":"YulFunctionCall","src":"4200:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:22"},"nodeType":"YulFunctionCall","src":"4193:43:22"},"nodeType":"YulIf","src":"4190:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:22","type":""}],"src":"4137:122:22"},{"body":{"nodeType":"YulBlock","src":"4317:87:22","statements":[{"nodeType":"YulAssignment","src":"4327:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:22"},"nodeType":"YulFunctionCall","src":"4336:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:22"},"nodeType":"YulFunctionCall","src":"4365:33:22"},"nodeType":"YulExpressionStatement","src":"4365:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:22","type":""}],"src":"4265:139:22"},{"body":{"nodeType":"YulBlock","src":"4493:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:22"},"nodeType":"YulFunctionCall","src":"4541:79:22"},"nodeType":"YulExpressionStatement","src":"4541:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:22"},"nodeType":"YulFunctionCall","src":"4510:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:22"},"nodeType":"YulFunctionCall","src":"4506:32:22"},"nodeType":"YulIf","src":"4503:119:22"},{"nodeType":"YulBlock","src":"4632:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:22"},"nodeType":"YulFunctionCall","src":"4707:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:22"},"nodeType":"YulFunctionCall","src":"4686:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:22"}]}]},{"nodeType":"YulBlock","src":"4759:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:22"},"nodeType":"YulFunctionCall","src":"4835:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:22"},"nodeType":"YulFunctionCall","src":"4814:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:22","type":""}],"src":"4410:474:22"},{"body":{"nodeType":"YulBlock","src":"4990:519:22","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:22"},"nodeType":"YulFunctionCall","src":"5038:79:22"},"nodeType":"YulExpressionStatement","src":"5038:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:22"},"nodeType":"YulFunctionCall","src":"5007:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:22"},"nodeType":"YulFunctionCall","src":"5003:32:22"},"nodeType":"YulIf","src":"5000:119:22"},{"nodeType":"YulBlock","src":"5129:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:22"},"nodeType":"YulFunctionCall","src":"5204:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:22"},"nodeType":"YulFunctionCall","src":"5183:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:22"}]}]},{"nodeType":"YulBlock","src":"5256:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:22"},"nodeType":"YulFunctionCall","src":"5332:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:22"},"nodeType":"YulFunctionCall","src":"5311:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:22"}]}]},{"nodeType":"YulBlock","src":"5384:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:22"},"nodeType":"YulFunctionCall","src":"5460:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:22"},"nodeType":"YulFunctionCall","src":"5439:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:22","type":""}],"src":"4890:619:22"},{"body":{"nodeType":"YulBlock","src":"5581:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:22"},"nodeType":"YulFunctionCall","src":"5629:79:22"},"nodeType":"YulExpressionStatement","src":"5629:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:22"},"nodeType":"YulFunctionCall","src":"5598:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:22"},"nodeType":"YulFunctionCall","src":"5594:32:22"},"nodeType":"YulIf","src":"5591:119:22"},{"nodeType":"YulBlock","src":"5720:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:22"},"nodeType":"YulFunctionCall","src":"5795:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:22"},"nodeType":"YulFunctionCall","src":"5774:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:22","type":""}],"src":"5515:329:22"},{"body":{"nodeType":"YulBlock","src":"5915:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:22"},"nodeType":"YulFunctionCall","src":"5937:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:22"},"nodeType":"YulFunctionCall","src":"5925:37:22"},"nodeType":"YulExpressionStatement","src":"5925:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:22","type":""}],"src":"5850:118:22"},{"body":{"nodeType":"YulBlock","src":"6072:124:22","statements":[{"nodeType":"YulAssignment","src":"6082:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:22"},"nodeType":"YulFunctionCall","src":"6090:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:22"},"nodeType":"YulFunctionCall","src":"6171:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:22"},"nodeType":"YulFunctionCall","src":"6118:71:22"},"nodeType":"YulExpressionStatement","src":"6118:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:22","type":""}],"src":"5974:222:22"},{"body":{"nodeType":"YulBlock","src":"6242:76:22","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:22"},"nodeType":"YulFunctionCall","src":"6298:12:22"},"nodeType":"YulExpressionStatement","src":"6298:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:22"},"nodeType":"YulFunctionCall","src":"6272:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:22"},"nodeType":"YulFunctionCall","src":"6262:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:22"},"nodeType":"YulFunctionCall","src":"6255:40:22"},"nodeType":"YulIf","src":"6252:60:22"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:22","type":""}],"src":"6202:116:22"},{"body":{"nodeType":"YulBlock","src":"6373:84:22","statements":[{"nodeType":"YulAssignment","src":"6383:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:22"},"nodeType":"YulFunctionCall","src":"6392:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:22"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:22"},"nodeType":"YulFunctionCall","src":"6421:30:22"},"nodeType":"YulExpressionStatement","src":"6421:30:22"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:22","type":""}],"src":"6324:133:22"},{"body":{"nodeType":"YulBlock","src":"6543:388:22","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:22"},"nodeType":"YulFunctionCall","src":"6591:79:22"},"nodeType":"YulExpressionStatement","src":"6591:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:22"},"nodeType":"YulFunctionCall","src":"6560:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:22"},"nodeType":"YulFunctionCall","src":"6556:32:22"},"nodeType":"YulIf","src":"6553:119:22"},{"nodeType":"YulBlock","src":"6682:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:22"},"nodeType":"YulFunctionCall","src":"6757:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:22"},"nodeType":"YulFunctionCall","src":"6736:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:22"}]}]},{"nodeType":"YulBlock","src":"6809:115:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:22"},"nodeType":"YulFunctionCall","src":"6882:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:22"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:22"},"nodeType":"YulFunctionCall","src":"6864:50:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:22","type":""}],"src":"6463:468:22"},{"body":{"nodeType":"YulBlock","src":"7026:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:22"},"nodeType":"YulFunctionCall","src":"7036:12:22"},"nodeType":"YulExpressionStatement","src":"7036:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:22"},{"body":{"nodeType":"YulBlock","src":"7149:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:22"},"nodeType":"YulFunctionCall","src":"7159:12:22"},"nodeType":"YulExpressionStatement","src":"7159:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:22"},{"body":{"nodeType":"YulBlock","src":"7211:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:22"},"nodeType":"YulFunctionCall","src":"7221:88:22"},"nodeType":"YulExpressionStatement","src":"7221:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:22"},"nodeType":"YulFunctionCall","src":"7318:15:22"},"nodeType":"YulExpressionStatement","src":"7318:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:22"},"nodeType":"YulFunctionCall","src":"7342:15:22"},"nodeType":"YulExpressionStatement","src":"7342:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:22"},{"body":{"nodeType":"YulBlock","src":"7412:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:22"},"nodeType":"YulFunctionCall","src":"7452:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:22"},"nodeType":"YulFunctionCall","src":"7440:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:22"},"nodeType":"YulFunctionCall","src":"7593:18:22"},"nodeType":"YulExpressionStatement","src":"7593:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:22"},"nodeType":"YulFunctionCall","src":"7531:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:22"},"nodeType":"YulFunctionCall","src":"7567:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:22"},"nodeType":"YulFunctionCall","src":"7528:62:22"},"nodeType":"YulIf","src":"7525:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:22"},"nodeType":"YulFunctionCall","src":"7622:22:22"},"nodeType":"YulExpressionStatement","src":"7622:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:22","type":""}],"src":"7369:281:22"},{"body":{"nodeType":"YulBlock","src":"7697:88:22","statements":[{"nodeType":"YulAssignment","src":"7707:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:22"},"nodeType":"YulFunctionCall","src":"7717:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:22"},"nodeType":"YulFunctionCall","src":"7746:33:22"},"nodeType":"YulExpressionStatement","src":"7746:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:22","type":""}],"src":"7656:129:22"},{"body":{"nodeType":"YulBlock","src":"7857:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:22"},"nodeType":"YulFunctionCall","src":"7964:18:22"},"nodeType":"YulExpressionStatement","src":"7964:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:22"},"nodeType":"YulFunctionCall","src":"7931:30:22"},"nodeType":"YulIf","src":"7928:56:22"},{"nodeType":"YulAssignment","src":"7994:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:22"},"nodeType":"YulFunctionCall","src":"8002:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:22"}]},{"nodeType":"YulAssignment","src":"8068:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:22"},"nodeType":"YulFunctionCall","src":"8076:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:22"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:22","type":""}],"src":"7791:307:22"},{"body":{"nodeType":"YulBlock","src":"8168:82:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:22"},"nodeType":"YulFunctionCall","src":"8178:30:22"},"nodeType":"YulExpressionStatement","src":"8178:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:22"},"nodeType":"YulFunctionCall","src":"8224:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:22"},"nodeType":"YulFunctionCall","src":"8217:27:22"},"nodeType":"YulExpressionStatement","src":"8217:27:22"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:22","type":""}],"src":"8104:146:22"},{"body":{"nodeType":"YulBlock","src":"8339:340:22","statements":[{"nodeType":"YulAssignment","src":"8349:74:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:22"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:22"},"nodeType":"YulFunctionCall","src":"8374:48:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:22"},"nodeType":"YulFunctionCall","src":"8358:65:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:22"},"nodeType":"YulFunctionCall","src":"8432:21:22"},"nodeType":"YulExpressionStatement","src":"8432:21:22"},{"nodeType":"YulVariableDeclaration","src":"8462:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:22"},"nodeType":"YulFunctionCall","src":"8473:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:22"},"nodeType":"YulFunctionCall","src":"8529:79:22"},"nodeType":"YulExpressionStatement","src":"8529:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:22"},"nodeType":"YulFunctionCall","src":"8504:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:22"},"nodeType":"YulFunctionCall","src":"8501:25:22"},"nodeType":"YulIf","src":"8498:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:22"},"nodeType":"YulFunctionCall","src":"8619:54:22"},"nodeType":"YulExpressionStatement","src":"8619:54:22"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:22","type":""}],"src":"8256:423:22"},{"body":{"nodeType":"YulBlock","src":"8759:277:22","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:22"},"nodeType":"YulFunctionCall","src":"8810:79:22"},"nodeType":"YulExpressionStatement","src":"8810:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:22"},"nodeType":"YulFunctionCall","src":"8783:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:22"},"nodeType":"YulFunctionCall","src":"8779:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:22"},"nodeType":"YulFunctionCall","src":"8772:35:22"},"nodeType":"YulIf","src":"8769:122:22"},{"nodeType":"YulVariableDeclaration","src":"8900:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:22"},"nodeType":"YulFunctionCall","src":"8914:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:22","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:22"},"nodeType":"YulFunctionCall","src":"8999:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:22"},"nodeType":"YulFunctionCall","src":"8952:78:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:22"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:22","type":""}],"src":"8698:338:22"},{"body":{"nodeType":"YulBlock","src":"9168:817:22","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:22"},"nodeType":"YulFunctionCall","src":"9217:79:22"},"nodeType":"YulExpressionStatement","src":"9217:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:22"},"nodeType":"YulFunctionCall","src":"9185:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:22"},"nodeType":"YulFunctionCall","src":"9181:33:22"},"nodeType":"YulIf","src":"9178:120:22"},{"nodeType":"YulBlock","src":"9308:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:22","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:22"},"nodeType":"YulFunctionCall","src":"9383:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:22"},"nodeType":"YulFunctionCall","src":"9362:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:22"}]}]},{"nodeType":"YulBlock","src":"9435:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:22","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:22"},"nodeType":"YulFunctionCall","src":"9511:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:22"},"nodeType":"YulFunctionCall","src":"9490:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:22"}]}]},{"nodeType":"YulBlock","src":"9563:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:22","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:22"},"nodeType":"YulFunctionCall","src":"9639:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:22"},"nodeType":"YulFunctionCall","src":"9618:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:22"}]}]},{"nodeType":"YulBlock","src":"9691:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:22"},"nodeType":"YulFunctionCall","src":"9733:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:22"},"nodeType":"YulFunctionCall","src":"9720:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:22"},"nodeType":"YulFunctionCall","src":"9801:79:22"},"nodeType":"YulExpressionStatement","src":"9801:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:22"},"nodeType":"YulFunctionCall","src":"9768:30:22"},"nodeType":"YulIf","src":"9765:117:22"},{"nodeType":"YulAssignment","src":"9896:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:22"},"nodeType":"YulFunctionCall","src":"9936:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:22"},"nodeType":"YulFunctionCall","src":"9906:62:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:22","type":""}],"src":"9042:943:22"},{"body":{"nodeType":"YulBlock","src":"10058:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"10163:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10165:16:22"},"nodeType":"YulFunctionCall","src":"10165:18:22"},"nodeType":"YulExpressionStatement","src":"10165:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10135:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10143:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10132:2:22"},"nodeType":"YulFunctionCall","src":"10132:30:22"},"nodeType":"YulIf","src":"10129:56:22"},{"nodeType":"YulAssignment","src":"10195:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10225:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10203:21:22"},"nodeType":"YulFunctionCall","src":"10203:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10195:4:22"}]},{"nodeType":"YulAssignment","src":"10269:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10281:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"10287:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10277:3:22"},"nodeType":"YulFunctionCall","src":"10277:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10269:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10042:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10053:4:22","type":""}],"src":"9991:308:22"},{"body":{"nodeType":"YulBlock","src":"10389:341:22","statements":[{"nodeType":"YulAssignment","src":"10399:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10466:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10424:41:22"},"nodeType":"YulFunctionCall","src":"10424:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10408:15:22"},"nodeType":"YulFunctionCall","src":"10408:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10399:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10490:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"10497:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10483:6:22"},"nodeType":"YulFunctionCall","src":"10483:21:22"},"nodeType":"YulExpressionStatement","src":"10483:21:22"},{"nodeType":"YulVariableDeclaration","src":"10513:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10528:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"10535:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10524:3:22"},"nodeType":"YulFunctionCall","src":"10524:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10517:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10578:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10580:77:22"},"nodeType":"YulFunctionCall","src":"10580:79:22"},"nodeType":"YulExpressionStatement","src":"10580:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10559:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"10564:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10555:3:22"},"nodeType":"YulFunctionCall","src":"10555:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"10573:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10552:2:22"},"nodeType":"YulFunctionCall","src":"10552:25:22"},"nodeType":"YulIf","src":"10549:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10707:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"10712:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"10717:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10670:36:22"},"nodeType":"YulFunctionCall","src":"10670:54:22"},"nodeType":"YulExpressionStatement","src":"10670:54:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10362:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"10367:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"10375:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10383:5:22","type":""}],"src":"10305:425:22"},{"body":{"nodeType":"YulBlock","src":"10812:278:22","statements":[{"body":{"nodeType":"YulBlock","src":"10861:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10863:77:22"},"nodeType":"YulFunctionCall","src":"10863:79:22"},"nodeType":"YulExpressionStatement","src":"10863:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10840:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10848:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10836:3:22"},"nodeType":"YulFunctionCall","src":"10836:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"10855:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10832:3:22"},"nodeType":"YulFunctionCall","src":"10832:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10825:6:22"},"nodeType":"YulFunctionCall","src":"10825:35:22"},"nodeType":"YulIf","src":"10822:122:22"},{"nodeType":"YulVariableDeclaration","src":"10953:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10980:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10967:12:22"},"nodeType":"YulFunctionCall","src":"10967:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10957:6:22","type":""}]},{"nodeType":"YulAssignment","src":"10996:88:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11057:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11065:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11053:3:22"},"nodeType":"YulFunctionCall","src":"11053:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"11072:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"11080:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11005:47:22"},"nodeType":"YulFunctionCall","src":"11005:79:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10996:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10790:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"10798:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10806:5:22","type":""}],"src":"10750:340:22"},{"body":{"nodeType":"YulBlock","src":"11172:433:22","statements":[{"body":{"nodeType":"YulBlock","src":"11218:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11220:77:22"},"nodeType":"YulFunctionCall","src":"11220:79:22"},"nodeType":"YulExpressionStatement","src":"11220:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11193:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11202:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11189:3:22"},"nodeType":"YulFunctionCall","src":"11189:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"11214:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11185:3:22"},"nodeType":"YulFunctionCall","src":"11185:32:22"},"nodeType":"YulIf","src":"11182:119:22"},{"nodeType":"YulBlock","src":"11311:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11326:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11357:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11368:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11353:3:22"},"nodeType":"YulFunctionCall","src":"11353:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11340:12:22"},"nodeType":"YulFunctionCall","src":"11340:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11330:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11418:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11420:77:22"},"nodeType":"YulFunctionCall","src":"11420:79:22"},"nodeType":"YulExpressionStatement","src":"11420:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11390:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11398:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11387:2:22"},"nodeType":"YulFunctionCall","src":"11387:30:22"},"nodeType":"YulIf","src":"11384:117:22"},{"nodeType":"YulAssignment","src":"11515:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11560:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"11571:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11556:3:22"},"nodeType":"YulFunctionCall","src":"11556:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11580:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11525:30:22"},"nodeType":"YulFunctionCall","src":"11525:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11515:6:22"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11142:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11153:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11165:6:22","type":""}],"src":"11096:509:22"},{"body":{"nodeType":"YulBlock","src":"11694:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"11740:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11742:77:22"},"nodeType":"YulFunctionCall","src":"11742:79:22"},"nodeType":"YulExpressionStatement","src":"11742:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11715:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11724:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11711:3:22"},"nodeType":"YulFunctionCall","src":"11711:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"11736:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11707:3:22"},"nodeType":"YulFunctionCall","src":"11707:32:22"},"nodeType":"YulIf","src":"11704:119:22"},{"nodeType":"YulBlock","src":"11833:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11848:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11862:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11852:6:22","type":""}]},{"nodeType":"YulAssignment","src":"11877:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11912:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"11923:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11908:3:22"},"nodeType":"YulFunctionCall","src":"11908:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11932:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11887:20:22"},"nodeType":"YulFunctionCall","src":"11887:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11877:6:22"}]}]},{"nodeType":"YulBlock","src":"11960:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11975:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11989:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11979:6:22","type":""}]},{"nodeType":"YulAssignment","src":"12005:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12040:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"12051:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12036:3:22"},"nodeType":"YulFunctionCall","src":"12036:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12060:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12015:20:22"},"nodeType":"YulFunctionCall","src":"12015:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12005:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11656:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11667:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11679:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11687:6:22","type":""}],"src":"11611:474:22"},{"body":{"nodeType":"YulBlock","src":"12119:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12136:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12139:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12129:6:22"},"nodeType":"YulFunctionCall","src":"12129:88:22"},"nodeType":"YulExpressionStatement","src":"12129:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12233:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12236:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12226:6:22"},"nodeType":"YulFunctionCall","src":"12226:15:22"},"nodeType":"YulExpressionStatement","src":"12226:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12257:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12260:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12250:6:22"},"nodeType":"YulFunctionCall","src":"12250:15:22"},"nodeType":"YulExpressionStatement","src":"12250:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12091:180:22"},{"body":{"nodeType":"YulBlock","src":"12328:269:22","statements":[{"nodeType":"YulAssignment","src":"12338:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12352:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"12358:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12348:3:22"},"nodeType":"YulFunctionCall","src":"12348:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12338:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"12369:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12399:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"12405:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12395:3:22"},"nodeType":"YulFunctionCall","src":"12395:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12373:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12446:51:22","statements":[{"nodeType":"YulAssignment","src":"12460:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12474:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12482:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12470:3:22"},"nodeType":"YulFunctionCall","src":"12470:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12460:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12426:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12419:6:22"},"nodeType":"YulFunctionCall","src":"12419:26:22"},"nodeType":"YulIf","src":"12416:81:22"},{"body":{"nodeType":"YulBlock","src":"12549:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12563:16:22"},"nodeType":"YulFunctionCall","src":"12563:18:22"},"nodeType":"YulExpressionStatement","src":"12563:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12513:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12536:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12544:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12533:2:22"},"nodeType":"YulFunctionCall","src":"12533:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12510:2:22"},"nodeType":"YulFunctionCall","src":"12510:38:22"},"nodeType":"YulIf","src":"12507:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12312:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12321:6:22","type":""}],"src":"12277:320:22"},{"body":{"nodeType":"YulBlock","src":"12709:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12731:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12739:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12727:3:22"},"nodeType":"YulFunctionCall","src":"12727:14:22"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"12743:34:22","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12720:6:22"},"nodeType":"YulFunctionCall","src":"12720:58:22"},"nodeType":"YulExpressionStatement","src":"12720:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12799:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12807:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12795:3:22"},"nodeType":"YulFunctionCall","src":"12795:15:22"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"12812:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12788:6:22"},"nodeType":"YulFunctionCall","src":"12788:28:22"},"nodeType":"YulExpressionStatement","src":"12788:28:22"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12701:6:22","type":""}],"src":"12603:220:22"},{"body":{"nodeType":"YulBlock","src":"12975:220:22","statements":[{"nodeType":"YulAssignment","src":"12985:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13051:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13056:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12992:58:22"},"nodeType":"YulFunctionCall","src":"12992:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12985:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13157:3:22"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"13068:88:22"},"nodeType":"YulFunctionCall","src":"13068:93:22"},"nodeType":"YulExpressionStatement","src":"13068:93:22"},{"nodeType":"YulAssignment","src":"13170:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13181:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13186:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13177:3:22"},"nodeType":"YulFunctionCall","src":"13177:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13170:3:22"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12963:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12971:3:22","type":""}],"src":"12829:366:22"},{"body":{"nodeType":"YulBlock","src":"13372:248:22","statements":[{"nodeType":"YulAssignment","src":"13382:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13394:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13405:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13390:3:22"},"nodeType":"YulFunctionCall","src":"13390:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13382:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13429:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13440:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13425:3:22"},"nodeType":"YulFunctionCall","src":"13425:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13448:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13454:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13444:3:22"},"nodeType":"YulFunctionCall","src":"13444:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13418:6:22"},"nodeType":"YulFunctionCall","src":"13418:47:22"},"nodeType":"YulExpressionStatement","src":"13418:47:22"},{"nodeType":"YulAssignment","src":"13474:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13608:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13482:124:22"},"nodeType":"YulFunctionCall","src":"13482:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13474:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13352:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13367:4:22","type":""}],"src":"13201:419:22"},{"body":{"nodeType":"YulBlock","src":"13732:142:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13754:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13762:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13750:3:22"},"nodeType":"YulFunctionCall","src":"13750:14:22"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"13766:34:22","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13743:6:22"},"nodeType":"YulFunctionCall","src":"13743:58:22"},"nodeType":"YulExpressionStatement","src":"13743:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13822:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13830:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13818:3:22"},"nodeType":"YulFunctionCall","src":"13818:15:22"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"13835:31:22","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13811:6:22"},"nodeType":"YulFunctionCall","src":"13811:56:22"},"nodeType":"YulExpressionStatement","src":"13811:56:22"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13724:6:22","type":""}],"src":"13626:248:22"},{"body":{"nodeType":"YulBlock","src":"14026:220:22","statements":[{"nodeType":"YulAssignment","src":"14036:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14102:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14107:2:22","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14043:58:22"},"nodeType":"YulFunctionCall","src":"14043:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14036:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14208:3:22"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"14119:88:22"},"nodeType":"YulFunctionCall","src":"14119:93:22"},"nodeType":"YulExpressionStatement","src":"14119:93:22"},{"nodeType":"YulAssignment","src":"14221:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14232:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14237:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14228:3:22"},"nodeType":"YulFunctionCall","src":"14228:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14221:3:22"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14014:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14022:3:22","type":""}],"src":"13880:366:22"},{"body":{"nodeType":"YulBlock","src":"14423:248:22","statements":[{"nodeType":"YulAssignment","src":"14433:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14445:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14456:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14441:3:22"},"nodeType":"YulFunctionCall","src":"14441:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14433:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14480:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14491:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14476:3:22"},"nodeType":"YulFunctionCall","src":"14476:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14499:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14505:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14495:3:22"},"nodeType":"YulFunctionCall","src":"14495:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14469:6:22"},"nodeType":"YulFunctionCall","src":"14469:47:22"},"nodeType":"YulExpressionStatement","src":"14469:47:22"},{"nodeType":"YulAssignment","src":"14525:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14659:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14533:124:22"},"nodeType":"YulFunctionCall","src":"14533:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14525:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14403:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14418:4:22","type":""}],"src":"14252:419:22"},{"body":{"nodeType":"YulBlock","src":"14783:126:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14805:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"14813:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14801:3:22"},"nodeType":"YulFunctionCall","src":"14801:14:22"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"14817:34:22","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14794:6:22"},"nodeType":"YulFunctionCall","src":"14794:58:22"},"nodeType":"YulExpressionStatement","src":"14794:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14873:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"14881:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14869:3:22"},"nodeType":"YulFunctionCall","src":"14869:15:22"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"14886:15:22","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14862:6:22"},"nodeType":"YulFunctionCall","src":"14862:40:22"},"nodeType":"YulExpressionStatement","src":"14862:40:22"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14775:6:22","type":""}],"src":"14677:232:22"},{"body":{"nodeType":"YulBlock","src":"15061:220:22","statements":[{"nodeType":"YulAssignment","src":"15071:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15137:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15142:2:22","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15078:58:22"},"nodeType":"YulFunctionCall","src":"15078:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15071:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15243:3:22"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"15154:88:22"},"nodeType":"YulFunctionCall","src":"15154:93:22"},"nodeType":"YulExpressionStatement","src":"15154:93:22"},{"nodeType":"YulAssignment","src":"15256:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15267:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15272:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15263:3:22"},"nodeType":"YulFunctionCall","src":"15263:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15256:3:22"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15049:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15057:3:22","type":""}],"src":"14915:366:22"},{"body":{"nodeType":"YulBlock","src":"15458:248:22","statements":[{"nodeType":"YulAssignment","src":"15468:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15480:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15491:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15476:3:22"},"nodeType":"YulFunctionCall","src":"15476:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15468:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15515:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15526:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15511:3:22"},"nodeType":"YulFunctionCall","src":"15511:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15534:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15540:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15530:3:22"},"nodeType":"YulFunctionCall","src":"15530:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15504:6:22"},"nodeType":"YulFunctionCall","src":"15504:47:22"},"nodeType":"YulExpressionStatement","src":"15504:47:22"},{"nodeType":"YulAssignment","src":"15560:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15694:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15568:124:22"},"nodeType":"YulFunctionCall","src":"15568:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15560:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15438:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15453:4:22","type":""}],"src":"15287:419:22"},{"body":{"nodeType":"YulBlock","src":"15818:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15840:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"15848:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15836:3:22"},"nodeType":"YulFunctionCall","src":"15836:14:22"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"15852:26:22","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15829:6:22"},"nodeType":"YulFunctionCall","src":"15829:50:22"},"nodeType":"YulExpressionStatement","src":"15829:50:22"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15810:6:22","type":""}],"src":"15712:174:22"},{"body":{"nodeType":"YulBlock","src":"16038:220:22","statements":[{"nodeType":"YulAssignment","src":"16048:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16114:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16119:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16055:58:22"},"nodeType":"YulFunctionCall","src":"16055:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16048:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16220:3:22"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"16131:88:22"},"nodeType":"YulFunctionCall","src":"16131:93:22"},"nodeType":"YulExpressionStatement","src":"16131:93:22"},{"nodeType":"YulAssignment","src":"16233:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16244:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16249:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16240:3:22"},"nodeType":"YulFunctionCall","src":"16240:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16233:3:22"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16026:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16034:3:22","type":""}],"src":"15892:366:22"},{"body":{"nodeType":"YulBlock","src":"16435:248:22","statements":[{"nodeType":"YulAssignment","src":"16445:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16457:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16468:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16453:3:22"},"nodeType":"YulFunctionCall","src":"16453:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16445:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16492:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16503:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16488:3:22"},"nodeType":"YulFunctionCall","src":"16488:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16511:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"16517:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16507:3:22"},"nodeType":"YulFunctionCall","src":"16507:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16481:6:22"},"nodeType":"YulFunctionCall","src":"16481:47:22"},"nodeType":"YulExpressionStatement","src":"16481:47:22"},{"nodeType":"YulAssignment","src":"16537:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16671:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16545:124:22"},"nodeType":"YulFunctionCall","src":"16545:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16537:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16415:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16430:4:22","type":""}],"src":"16264:419:22"},{"body":{"nodeType":"YulBlock","src":"16795:122:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16817:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16825:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16813:3:22"},"nodeType":"YulFunctionCall","src":"16813:14:22"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"16829:34:22","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16806:6:22"},"nodeType":"YulFunctionCall","src":"16806:58:22"},"nodeType":"YulExpressionStatement","src":"16806:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16885:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16893:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16881:3:22"},"nodeType":"YulFunctionCall","src":"16881:15:22"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"16898:11:22","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16874:6:22"},"nodeType":"YulFunctionCall","src":"16874:36:22"},"nodeType":"YulExpressionStatement","src":"16874:36:22"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16787:6:22","type":""}],"src":"16689:228:22"},{"body":{"nodeType":"YulBlock","src":"17069:220:22","statements":[{"nodeType":"YulAssignment","src":"17079:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17145:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"17150:2:22","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17086:58:22"},"nodeType":"YulFunctionCall","src":"17086:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17079:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17251:3:22"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"17162:88:22"},"nodeType":"YulFunctionCall","src":"17162:93:22"},"nodeType":"YulExpressionStatement","src":"17162:93:22"},{"nodeType":"YulAssignment","src":"17264:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17275:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"17280:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17271:3:22"},"nodeType":"YulFunctionCall","src":"17271:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17264:3:22"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17057:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17065:3:22","type":""}],"src":"16923:366:22"},{"body":{"nodeType":"YulBlock","src":"17466:248:22","statements":[{"nodeType":"YulAssignment","src":"17476:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17488:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17499:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17484:3:22"},"nodeType":"YulFunctionCall","src":"17484:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17476:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17523:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17534:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17519:3:22"},"nodeType":"YulFunctionCall","src":"17519:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17542:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"17548:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17538:3:22"},"nodeType":"YulFunctionCall","src":"17538:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17512:6:22"},"nodeType":"YulFunctionCall","src":"17512:47:22"},"nodeType":"YulExpressionStatement","src":"17512:47:22"},{"nodeType":"YulAssignment","src":"17568:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17702:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17576:124:22"},"nodeType":"YulFunctionCall","src":"17576:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17568:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17446:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17461:4:22","type":""}],"src":"17295:419:22"},{"body":{"nodeType":"YulBlock","src":"17774:87:22","statements":[{"nodeType":"YulAssignment","src":"17784:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17792:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17784:4:22"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17812:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"17815:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17805:6:22"},"nodeType":"YulFunctionCall","src":"17805:14:22"},"nodeType":"YulExpressionStatement","src":"17805:14:22"},{"nodeType":"YulAssignment","src":"17828:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17846:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17849:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17836:9:22"},"nodeType":"YulFunctionCall","src":"17836:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17828:4:22"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17761:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17769:4:22","type":""}],"src":"17720:141:22"},{"body":{"nodeType":"YulBlock","src":"17911:49:22","statements":[{"nodeType":"YulAssignment","src":"17921:33:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17939:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"17946:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17935:3:22"},"nodeType":"YulFunctionCall","src":"17935:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"17951:2:22","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17931:3:22"},"nodeType":"YulFunctionCall","src":"17931:23:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17921:6:22"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17894:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"17904:6:22","type":""}],"src":"17867:93:22"},{"body":{"nodeType":"YulBlock","src":"18019:54:22","statements":[{"nodeType":"YulAssignment","src":"18029:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"18054:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"18060:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18050:3:22"},"nodeType":"YulFunctionCall","src":"18050:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18029:8:22"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"17994:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"18000:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18010:8:22","type":""}],"src":"17966:107:22"},{"body":{"nodeType":"YulBlock","src":"18155:317:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18165:35:22","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"18186:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"18198:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18182:3:22"},"nodeType":"YulFunctionCall","src":"18182:18:22"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"18169:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18209:109:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18240:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18251:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18221:18:22"},"nodeType":"YulFunctionCall","src":"18221:97:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"18213:4:22","type":""}]},{"nodeType":"YulAssignment","src":"18327:51:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"18358:9:22"},{"name":"toInsert","nodeType":"YulIdentifier","src":"18369:8:22"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18339:18:22"},"nodeType":"YulFunctionCall","src":"18339:39:22"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18327:8:22"}]},{"nodeType":"YulAssignment","src":"18387:30:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18400:5:22"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"18411:4:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18407:3:22"},"nodeType":"YulFunctionCall","src":"18407:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18396:3:22"},"nodeType":"YulFunctionCall","src":"18396:21:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18387:5:22"}]},{"nodeType":"YulAssignment","src":"18426:40:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18439:5:22"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"18450:8:22"},{"name":"mask","nodeType":"YulIdentifier","src":"18460:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18446:3:22"},"nodeType":"YulFunctionCall","src":"18446:19:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18436:2:22"},"nodeType":"YulFunctionCall","src":"18436:30:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18426:6:22"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18116:5:22","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"18123:10:22","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"18135:8:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18148:6:22","type":""}],"src":"18079:393:22"},{"body":{"nodeType":"YulBlock","src":"18510:28:22","statements":[{"nodeType":"YulAssignment","src":"18520:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"18527:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18520:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18496:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18506:3:22","type":""}],"src":"18478:60:22"},{"body":{"nodeType":"YulBlock","src":"18604:82:22","statements":[{"nodeType":"YulAssignment","src":"18614:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18672:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18654:17:22"},"nodeType":"YulFunctionCall","src":"18654:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"18645:8:22"},"nodeType":"YulFunctionCall","src":"18645:34:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18627:17:22"},"nodeType":"YulFunctionCall","src":"18627:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18614:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18584:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18594:9:22","type":""}],"src":"18544:142:22"},{"body":{"nodeType":"YulBlock","src":"18739:28:22","statements":[{"nodeType":"YulAssignment","src":"18749:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"18756:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18749:3:22"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18725:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18735:3:22","type":""}],"src":"18692:75:22"},{"body":{"nodeType":"YulBlock","src":"18849:193:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18859:63:22","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"18914:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18883:30:22"},"nodeType":"YulFunctionCall","src":"18883:39:22"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"18863:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18938:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"18978:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18972:5:22"},"nodeType":"YulFunctionCall","src":"18972:11:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18985:6:22"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"19017:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"18993:23:22"},"nodeType":"YulFunctionCall","src":"18993:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"18944:27:22"},"nodeType":"YulFunctionCall","src":"18944:91:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18931:6:22"},"nodeType":"YulFunctionCall","src":"18931:105:22"},"nodeType":"YulExpressionStatement","src":"18931:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"18826:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"18832:6:22","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"18840:7:22","type":""}],"src":"18773:269:22"},{"body":{"nodeType":"YulBlock","src":"19097:24:22","statements":[{"nodeType":"YulAssignment","src":"19107:8:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19114:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19107:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19093:3:22","type":""}],"src":"19048:73:22"},{"body":{"nodeType":"YulBlock","src":"19180:136:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19190:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"19204:30:22"},"nodeType":"YulFunctionCall","src":"19204:32:22"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"19194:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19289:4:22"},{"name":"offset","nodeType":"YulIdentifier","src":"19295:6:22"},{"name":"zero_0","nodeType":"YulIdentifier","src":"19303:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19245:43:22"},"nodeType":"YulFunctionCall","src":"19245:65:22"},"nodeType":"YulExpressionStatement","src":"19245:65:22"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19166:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19172:6:22","type":""}],"src":"19127:189:22"},{"body":{"nodeType":"YulBlock","src":"19372:136:22","statements":[{"body":{"nodeType":"YulBlock","src":"19439:63:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19483:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19490:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"19453:29:22"},"nodeType":"YulFunctionCall","src":"19453:39:22"},"nodeType":"YulExpressionStatement","src":"19453:39:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19392:5:22"},{"name":"end","nodeType":"YulIdentifier","src":"19399:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19389:2:22"},"nodeType":"YulFunctionCall","src":"19389:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19404:26:22","statements":[{"nodeType":"YulAssignment","src":"19406:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19419:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19426:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19415:3:22"},"nodeType":"YulFunctionCall","src":"19415:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"19406:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"19386:2:22","statements":[]},"src":"19382:120:22"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"19360:5:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"19367:3:22","type":""}],"src":"19322:186:22"},{"body":{"nodeType":"YulBlock","src":"19593:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"19619:431:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19633:54:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19681:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"19649:31:22"},"nodeType":"YulFunctionCall","src":"19649:38:22"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"19637:8:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19700:63:22","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"19723:8:22"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19751:10:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"19733:17:22"},"nodeType":"YulFunctionCall","src":"19733:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19719:3:22"},"nodeType":"YulFunctionCall","src":"19719:44:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"19704:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"19920:27:22","statements":[{"nodeType":"YulAssignment","src":"19922:23:22","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"19937:8:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19922:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19904:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"19916:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19901:2:22"},"nodeType":"YulFunctionCall","src":"19901:18:22"},"nodeType":"YulIf","src":"19898:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19989:11:22"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20006:8:22"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20034:3:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20016:17:22"},"nodeType":"YulFunctionCall","src":"20016:22:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20002:3:22"},"nodeType":"YulFunctionCall","src":"20002:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"19960:28:22"},"nodeType":"YulFunctionCall","src":"19960:80:22"},"nodeType":"YulExpressionStatement","src":"19960:80:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19610:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"19615:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19607:2:22"},"nodeType":"YulFunctionCall","src":"19607:11:22"},"nodeType":"YulIf","src":"19604:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"19569:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"19576:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"19581:10:22","type":""}],"src":"19514:543:22"},{"body":{"nodeType":"YulBlock","src":"20126:54:22","statements":[{"nodeType":"YulAssignment","src":"20136:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"20161:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"20167:5:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20157:3:22"},"nodeType":"YulFunctionCall","src":"20157:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20136:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"20101:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"20107:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20117:8:22","type":""}],"src":"20063:117:22"},{"body":{"nodeType":"YulBlock","src":"20237:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20247:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20296:1:22","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"20299:5:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20292:3:22"},"nodeType":"YulFunctionCall","src":"20292:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20311:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20307:3:22"},"nodeType":"YulFunctionCall","src":"20307:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"20263:28:22"},"nodeType":"YulFunctionCall","src":"20263:51:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20259:3:22"},"nodeType":"YulFunctionCall","src":"20259:56:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"20251:4:22","type":""}]},{"nodeType":"YulAssignment","src":"20324:25:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20338:4:22"},{"name":"mask","nodeType":"YulIdentifier","src":"20344:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20334:3:22"},"nodeType":"YulFunctionCall","src":"20334:15:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20324:6:22"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20214:4:22","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"20220:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20230:6:22","type":""}],"src":"20186:169:22"},{"body":{"nodeType":"YulBlock","src":"20441:214:22","statements":[{"nodeType":"YulAssignment","src":"20574:37:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20601:4:22"},{"name":"len","nodeType":"YulIdentifier","src":"20607:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"20582:18:22"},"nodeType":"YulFunctionCall","src":"20582:29:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"20574:4:22"}]},{"nodeType":"YulAssignment","src":"20620:29:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20631:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20641:1:22","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"20644:3:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20637:3:22"},"nodeType":"YulFunctionCall","src":"20637:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20628:2:22"},"nodeType":"YulFunctionCall","src":"20628:21:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"20620:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20422:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"20428:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"20436:4:22","type":""}],"src":"20360:295:22"},{"body":{"nodeType":"YulBlock","src":"20752:1303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20763:51:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20810:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20777:32:22"},"nodeType":"YulFunctionCall","src":"20777:37:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"20767:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"20899:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20901:16:22"},"nodeType":"YulFunctionCall","src":"20901:18:22"},"nodeType":"YulExpressionStatement","src":"20901:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20871:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20879:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20868:2:22"},"nodeType":"YulFunctionCall","src":"20868:30:22"},"nodeType":"YulIf","src":"20865:56:22"},{"nodeType":"YulVariableDeclaration","src":"20931:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20977:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20971:5:22"},"nodeType":"YulFunctionCall","src":"20971:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"20945:25:22"},"nodeType":"YulFunctionCall","src":"20945:38:22"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"20935:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21076:4:22"},{"name":"oldLen","nodeType":"YulIdentifier","src":"21082:6:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"21090:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"21030:45:22"},"nodeType":"YulFunctionCall","src":"21030:67:22"},"nodeType":"YulExpressionStatement","src":"21030:67:22"},{"nodeType":"YulVariableDeclaration","src":"21107:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21124:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"21111:9:22","type":""}]},{"nodeType":"YulAssignment","src":"21135:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21148:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21135:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"21199:611:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21213:37:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21232:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21244:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21240:3:22"},"nodeType":"YulFunctionCall","src":"21240:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21228:3:22"},"nodeType":"YulFunctionCall","src":"21228:22:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"21217:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21264:51:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21310:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"21278:31:22"},"nodeType":"YulFunctionCall","src":"21278:37:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"21268:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21328:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21337:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21332:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"21396:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21421:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21439:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21444:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21435:3:22"},"nodeType":"YulFunctionCall","src":"21435:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21429:5:22"},"nodeType":"YulFunctionCall","src":"21429:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21414:6:22"},"nodeType":"YulFunctionCall","src":"21414:42:22"},"nodeType":"YulExpressionStatement","src":"21414:42:22"},{"nodeType":"YulAssignment","src":"21473:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21487:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21495:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21483:3:22"},"nodeType":"YulFunctionCall","src":"21483:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21473:6:22"}]},{"nodeType":"YulAssignment","src":"21514:31:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21531:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21542:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21527:3:22"},"nodeType":"YulFunctionCall","src":"21527:18:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21514:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21362:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"21365:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21359:2:22"},"nodeType":"YulFunctionCall","src":"21359:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21374:21:22","statements":[{"nodeType":"YulAssignment","src":"21376:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21385:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"21388:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21381:3:22"},"nodeType":"YulFunctionCall","src":"21381:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21376:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"21355:3:22","statements":[]},"src":"21351:208:22"},{"body":{"nodeType":"YulBlock","src":"21595:156:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21613:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21640:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21645:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21636:3:22"},"nodeType":"YulFunctionCall","src":"21636:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21630:5:22"},"nodeType":"YulFunctionCall","src":"21630:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"21617:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21680:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"21707:9:22"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21722:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21730:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21718:3:22"},"nodeType":"YulFunctionCall","src":"21718:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"21688:18:22"},"nodeType":"YulFunctionCall","src":"21688:48:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21673:6:22"},"nodeType":"YulFunctionCall","src":"21673:64:22"},"nodeType":"YulExpressionStatement","src":"21673:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"21578:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"21587:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21575:2:22"},"nodeType":"YulFunctionCall","src":"21575:19:22"},"nodeType":"YulIf","src":"21572:179:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21771:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21785:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21793:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21781:3:22"},"nodeType":"YulFunctionCall","src":"21781:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"21797:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21777:3:22"},"nodeType":"YulFunctionCall","src":"21777:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21764:6:22"},"nodeType":"YulFunctionCall","src":"21764:36:22"},"nodeType":"YulExpressionStatement","src":"21764:36:22"}]},"nodeType":"YulCase","src":"21192:618:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21197:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"21827:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21841:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21854:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"21845:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"21878:67:22","statements":[{"nodeType":"YulAssignment","src":"21896:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21915:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21920:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21911:3:22"},"nodeType":"YulFunctionCall","src":"21911:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21905:5:22"},"nodeType":"YulFunctionCall","src":"21905:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21896:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"21871:6:22"},"nodeType":"YulIf","src":"21868:77:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21965:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22024:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"22031:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"21971:52:22"},"nodeType":"YulFunctionCall","src":"21971:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21958:6:22"},"nodeType":"YulFunctionCall","src":"21958:81:22"},"nodeType":"YulExpressionStatement","src":"21958:81:22"}]},"nodeType":"YulCase","src":"21819:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21172:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21180:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21169:2:22"},"nodeType":"YulFunctionCall","src":"21169:14:22"},"nodeType":"YulSwitch","src":"21162:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20741:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"20747:3:22","type":""}],"src":"20660:1395:22"},{"body":{"nodeType":"YulBlock","src":"22089:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22106:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22109:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22099:6:22"},"nodeType":"YulFunctionCall","src":"22099:88:22"},"nodeType":"YulExpressionStatement","src":"22099:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22203:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22206:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22196:6:22"},"nodeType":"YulFunctionCall","src":"22196:15:22"},"nodeType":"YulExpressionStatement","src":"22196:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22227:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22230:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22220:6:22"},"nodeType":"YulFunctionCall","src":"22220:15:22"},"nodeType":"YulExpressionStatement","src":"22220:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22061:180:22"},{"body":{"nodeType":"YulBlock","src":"22290:190:22","statements":[{"nodeType":"YulAssignment","src":"22300:33:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22327:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22309:17:22"},"nodeType":"YulFunctionCall","src":"22309:24:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22300:5:22"}]},{"body":{"nodeType":"YulBlock","src":"22423:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22425:16:22"},"nodeType":"YulFunctionCall","src":"22425:18:22"},"nodeType":"YulExpressionStatement","src":"22425:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22348:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"22355:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22345:2:22"},"nodeType":"YulFunctionCall","src":"22345:77:22"},"nodeType":"YulIf","src":"22342:103:22"},{"nodeType":"YulAssignment","src":"22454:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22465:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"22472:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22461:3:22"},"nodeType":"YulFunctionCall","src":"22461:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22454:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22276:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22286:3:22","type":""}],"src":"22247:233:22"},{"body":{"nodeType":"YulBlock","src":"22592:118:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22614:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22622:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22610:3:22"},"nodeType":"YulFunctionCall","src":"22610:14:22"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"22626:34:22","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22603:6:22"},"nodeType":"YulFunctionCall","src":"22603:58:22"},"nodeType":"YulExpressionStatement","src":"22603:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22682:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22690:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22678:3:22"},"nodeType":"YulFunctionCall","src":"22678:15:22"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"22695:7:22","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22671:6:22"},"nodeType":"YulFunctionCall","src":"22671:32:22"},"nodeType":"YulExpressionStatement","src":"22671:32:22"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22584:6:22","type":""}],"src":"22486:224:22"},{"body":{"nodeType":"YulBlock","src":"22862:220:22","statements":[{"nodeType":"YulAssignment","src":"22872:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22938:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"22943:2:22","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22879:58:22"},"nodeType":"YulFunctionCall","src":"22879:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22872:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23044:3:22"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"22955:88:22"},"nodeType":"YulFunctionCall","src":"22955:93:22"},"nodeType":"YulExpressionStatement","src":"22955:93:22"},{"nodeType":"YulAssignment","src":"23057:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23068:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"23073:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23064:3:22"},"nodeType":"YulFunctionCall","src":"23064:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23057:3:22"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22850:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22858:3:22","type":""}],"src":"22716:366:22"},{"body":{"nodeType":"YulBlock","src":"23259:248:22","statements":[{"nodeType":"YulAssignment","src":"23269:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23281:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"23292:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23277:3:22"},"nodeType":"YulFunctionCall","src":"23277:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23269:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23316:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"23327:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23312:3:22"},"nodeType":"YulFunctionCall","src":"23312:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23335:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"23341:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23331:3:22"},"nodeType":"YulFunctionCall","src":"23331:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23305:6:22"},"nodeType":"YulFunctionCall","src":"23305:47:22"},"nodeType":"YulExpressionStatement","src":"23305:47:22"},{"nodeType":"YulAssignment","src":"23361:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23495:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23369:124:22"},"nodeType":"YulFunctionCall","src":"23369:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23361:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23239:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23254:4:22","type":""}],"src":"23088:419:22"},{"body":{"nodeType":"YulBlock","src":"23619:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23641:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23649:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23637:3:22"},"nodeType":"YulFunctionCall","src":"23637:14:22"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"23653:34:22","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23630:6:22"},"nodeType":"YulFunctionCall","src":"23630:58:22"},"nodeType":"YulExpressionStatement","src":"23630:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23709:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23717:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23705:3:22"},"nodeType":"YulFunctionCall","src":"23705:15:22"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"23722:6:22","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23698:6:22"},"nodeType":"YulFunctionCall","src":"23698:31:22"},"nodeType":"YulExpressionStatement","src":"23698:31:22"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23611:6:22","type":""}],"src":"23513:223:22"},{"body":{"nodeType":"YulBlock","src":"23888:220:22","statements":[{"nodeType":"YulAssignment","src":"23898:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23964:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"23969:2:22","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23905:58:22"},"nodeType":"YulFunctionCall","src":"23905:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23898:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24070:3:22"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"23981:88:22"},"nodeType":"YulFunctionCall","src":"23981:93:22"},"nodeType":"YulExpressionStatement","src":"23981:93:22"},{"nodeType":"YulAssignment","src":"24083:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24094:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"24099:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24090:3:22"},"nodeType":"YulFunctionCall","src":"24090:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24083:3:22"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23876:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23884:3:22","type":""}],"src":"23742:366:22"},{"body":{"nodeType":"YulBlock","src":"24285:248:22","statements":[{"nodeType":"YulAssignment","src":"24295:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24307:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"24318:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24303:3:22"},"nodeType":"YulFunctionCall","src":"24303:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24295:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24342:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"24353:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24338:3:22"},"nodeType":"YulFunctionCall","src":"24338:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24361:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"24367:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24357:3:22"},"nodeType":"YulFunctionCall","src":"24357:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24331:6:22"},"nodeType":"YulFunctionCall","src":"24331:47:22"},"nodeType":"YulExpressionStatement","src":"24331:47:22"},{"nodeType":"YulAssignment","src":"24387:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24521:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24395:124:22"},"nodeType":"YulFunctionCall","src":"24395:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24387:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24265:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24280:4:22","type":""}],"src":"24114:419:22"},{"body":{"nodeType":"YulBlock","src":"24645:69:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24667:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24675:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24663:3:22"},"nodeType":"YulFunctionCall","src":"24663:14:22"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"24679:27:22","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24656:6:22"},"nodeType":"YulFunctionCall","src":"24656:51:22"},"nodeType":"YulExpressionStatement","src":"24656:51:22"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24637:6:22","type":""}],"src":"24539:175:22"},{"body":{"nodeType":"YulBlock","src":"24866:220:22","statements":[{"nodeType":"YulAssignment","src":"24876:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24942:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"24947:2:22","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24883:58:22"},"nodeType":"YulFunctionCall","src":"24883:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24876:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25048:3:22"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"24959:88:22"},"nodeType":"YulFunctionCall","src":"24959:93:22"},"nodeType":"YulExpressionStatement","src":"24959:93:22"},{"nodeType":"YulAssignment","src":"25061:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25072:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"25077:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25068:3:22"},"nodeType":"YulFunctionCall","src":"25068:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25061:3:22"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24854:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24862:3:22","type":""}],"src":"24720:366:22"},{"body":{"nodeType":"YulBlock","src":"25263:248:22","statements":[{"nodeType":"YulAssignment","src":"25273:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25285:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"25296:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25281:3:22"},"nodeType":"YulFunctionCall","src":"25281:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25273:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25320:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"25331:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25316:3:22"},"nodeType":"YulFunctionCall","src":"25316:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25339:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"25345:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25335:3:22"},"nodeType":"YulFunctionCall","src":"25335:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25309:6:22"},"nodeType":"YulFunctionCall","src":"25309:47:22"},"nodeType":"YulExpressionStatement","src":"25309:47:22"},{"nodeType":"YulAssignment","src":"25365:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25499:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25373:124:22"},"nodeType":"YulFunctionCall","src":"25373:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25365:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25243:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25258:4:22","type":""}],"src":"25092:419:22"},{"body":{"nodeType":"YulBlock","src":"25623:131:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25645:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25653:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25641:3:22"},"nodeType":"YulFunctionCall","src":"25641:14:22"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"25657:34:22","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25634:6:22"},"nodeType":"YulFunctionCall","src":"25634:58:22"},"nodeType":"YulExpressionStatement","src":"25634:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25713:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25721:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25709:3:22"},"nodeType":"YulFunctionCall","src":"25709:15:22"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"25726:20:22","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25702:6:22"},"nodeType":"YulFunctionCall","src":"25702:45:22"},"nodeType":"YulExpressionStatement","src":"25702:45:22"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25615:6:22","type":""}],"src":"25517:237:22"},{"body":{"nodeType":"YulBlock","src":"25906:220:22","statements":[{"nodeType":"YulAssignment","src":"25916:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25982:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"25987:2:22","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25923:58:22"},"nodeType":"YulFunctionCall","src":"25923:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25916:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26088:3:22"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"25999:88:22"},"nodeType":"YulFunctionCall","src":"25999:93:22"},"nodeType":"YulExpressionStatement","src":"25999:93:22"},{"nodeType":"YulAssignment","src":"26101:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26112:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"26117:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26108:3:22"},"nodeType":"YulFunctionCall","src":"26108:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26101:3:22"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25894:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25902:3:22","type":""}],"src":"25760:366:22"},{"body":{"nodeType":"YulBlock","src":"26303:248:22","statements":[{"nodeType":"YulAssignment","src":"26313:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26325:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"26336:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26321:3:22"},"nodeType":"YulFunctionCall","src":"26321:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26313:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26360:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"26371:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26356:3:22"},"nodeType":"YulFunctionCall","src":"26356:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26379:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"26385:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26375:3:22"},"nodeType":"YulFunctionCall","src":"26375:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26349:6:22"},"nodeType":"YulFunctionCall","src":"26349:47:22"},"nodeType":"YulExpressionStatement","src":"26349:47:22"},{"nodeType":"YulAssignment","src":"26405:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26539:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26413:124:22"},"nodeType":"YulFunctionCall","src":"26413:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26405:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26283:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26298:4:22","type":""}],"src":"26132:419:22"},{"body":{"nodeType":"YulBlock","src":"26615:40:22","statements":[{"nodeType":"YulAssignment","src":"26626:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26642:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26636:5:22"},"nodeType":"YulFunctionCall","src":"26636:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26626:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26598:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26608:6:22","type":""}],"src":"26557:98:22"},{"body":{"nodeType":"YulBlock","src":"26756:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26773:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"26778:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26766:6:22"},"nodeType":"YulFunctionCall","src":"26766:19:22"},"nodeType":"YulExpressionStatement","src":"26766:19:22"},{"nodeType":"YulAssignment","src":"26794:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26813:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"26818:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26809:3:22"},"nodeType":"YulFunctionCall","src":"26809:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26794:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26728:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"26733:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"26744:11:22","type":""}],"src":"26661:168:22"},{"body":{"nodeType":"YulBlock","src":"26925:283:22","statements":[{"nodeType":"YulVariableDeclaration","src":"26935:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26981:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26949:31:22"},"nodeType":"YulFunctionCall","src":"26949:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26939:6:22","type":""}]},{"nodeType":"YulAssignment","src":"26996:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27061:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"27066:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27003:57:22"},"nodeType":"YulFunctionCall","src":"27003:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26996:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27121:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"27128:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27117:3:22"},"nodeType":"YulFunctionCall","src":"27117:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"27135:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"27140:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"27082:34:22"},"nodeType":"YulFunctionCall","src":"27082:65:22"},"nodeType":"YulExpressionStatement","src":"27082:65:22"},{"nodeType":"YulAssignment","src":"27156:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27167:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27194:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"27172:21:22"},"nodeType":"YulFunctionCall","src":"27172:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27163:3:22"},"nodeType":"YulFunctionCall","src":"27163:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27156:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26906:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26913:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26921:3:22","type":""}],"src":"26835:373:22"},{"body":{"nodeType":"YulBlock","src":"27414:440:22","statements":[{"nodeType":"YulAssignment","src":"27424:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27436:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"27447:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27432:3:22"},"nodeType":"YulFunctionCall","src":"27432:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27424:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27505:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27518:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"27529:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27514:3:22"},"nodeType":"YulFunctionCall","src":"27514:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27461:43:22"},"nodeType":"YulFunctionCall","src":"27461:71:22"},"nodeType":"YulExpressionStatement","src":"27461:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27586:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27599:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"27610:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27595:3:22"},"nodeType":"YulFunctionCall","src":"27595:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27542:43:22"},"nodeType":"YulFunctionCall","src":"27542:72:22"},"nodeType":"YulExpressionStatement","src":"27542:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27668:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27681:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"27692:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27677:3:22"},"nodeType":"YulFunctionCall","src":"27677:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27624:43:22"},"nodeType":"YulFunctionCall","src":"27624:72:22"},"nodeType":"YulExpressionStatement","src":"27624:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27717:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"27728:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27713:3:22"},"nodeType":"YulFunctionCall","src":"27713:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27737:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"27743:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27733:3:22"},"nodeType":"YulFunctionCall","src":"27733:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27706:6:22"},"nodeType":"YulFunctionCall","src":"27706:48:22"},"nodeType":"YulExpressionStatement","src":"27706:48:22"},{"nodeType":"YulAssignment","src":"27763:84:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27833:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"27842:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27771:61:22"},"nodeType":"YulFunctionCall","src":"27771:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27763:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27362:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27374:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27382:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27390:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27398:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27409:4:22","type":""}],"src":"27214:640:22"},{"body":{"nodeType":"YulBlock","src":"27922:79:22","statements":[{"nodeType":"YulAssignment","src":"27932:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27947:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27941:5:22"},"nodeType":"YulFunctionCall","src":"27941:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27932:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27989:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"27963:25:22"},"nodeType":"YulFunctionCall","src":"27963:32:22"},"nodeType":"YulExpressionStatement","src":"27963:32:22"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27900:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"27908:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27916:5:22","type":""}],"src":"27860:141:22"},{"body":{"nodeType":"YulBlock","src":"28083:273:22","statements":[{"body":{"nodeType":"YulBlock","src":"28129:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28131:77:22"},"nodeType":"YulFunctionCall","src":"28131:79:22"},"nodeType":"YulExpressionStatement","src":"28131:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28104:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"28113:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28100:3:22"},"nodeType":"YulFunctionCall","src":"28100:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"28125:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28096:3:22"},"nodeType":"YulFunctionCall","src":"28096:32:22"},"nodeType":"YulIf","src":"28093:119:22"},{"nodeType":"YulBlock","src":"28222:127:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28237:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28251:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28241:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28266:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28311:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28322:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28307:3:22"},"nodeType":"YulFunctionCall","src":"28307:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28331:7:22"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"28276:30:22"},"nodeType":"YulFunctionCall","src":"28276:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28266:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28053:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28064:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28076:6:22","type":""}],"src":"28007:349:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063c87b56dd11610066578063c87b56dd14610282578063d082e381146102b2578063da86f4a9146102d0578063e985e9c5146102ec576100f5565b806370a08231146101fc57806395d89b411461022c578063a22cb4651461024a578063b88d4fde14610266576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806342842e0e146101b05780636352211e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f919061139d565b61031c565b60405161012191906113e5565b60405180910390f35b6101326103fe565b60405161013f9190611490565b60405180910390f35b610162600480360381019061015d91906114e8565b610490565b60405161016f9190611556565b60405180910390f35b610192600480360381019061018d919061159d565b6104d6565b005b6101ae60048036038101906101a991906115dd565b6105ed565b005b6101ca60048036038101906101c591906115dd565b61064d565b005b6101e660048036038101906101e191906114e8565b61066d565b6040516101f39190611556565b60405180910390f35b61021660048036038101906102119190611630565b6106f3565b604051610223919061166c565b60405180910390f35b6102346107aa565b6040516102419190611490565b60405180910390f35b610264600480360381019061025f91906116b3565b61083c565b005b610280600480360381019061027b9190611828565b610852565b005b61029c600480360381019061029791906114e8565b6108b4565b6040516102a99190611490565b60405180910390f35b6102ba610959565b6040516102c7919061166c565b60405180910390f35b6102ea60048036038101906102e5919061194c565b61095f565b005b61030660048036038101906103019190611995565b61099d565b60405161031391906113e5565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f757506103f682610a31565b5b9050919050565b60606000805461040d90611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461043990611a04565b80156104865780601f1061045b57610100808354040283529160200191610486565b820191906000526020600020905b81548152906001019060200180831161046957829003601f168201915b5050505050905090565b600061049b82610a9b565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104e18261066d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890611aa7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610570610ae6565b73ffffffffffffffffffffffffffffffffffffffff16148061059f575061059e81610599610ae6565b61099d565b5b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b39565b60405180910390fd5b6105e88383610aee565b505050565b6105fe6105f8610ae6565b82610ba7565b61063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490611bcb565b60405180910390fd5b610648838383610c3c565b505050565b61066883838360405180602001604052806000815250610852565b505050565b60008061067983610f35565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190611c37565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075a90611cc9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107b990611a04565b80601f01602080910402602001604051908101604052809291908181526020018280546107e590611a04565b80156108325780601f1061080757610100808354040283529160200191610832565b820191906000526020600020905b81548152906001019060200180831161081557829003601f168201915b5050505050905090565b61084e610847610ae6565b8383610f72565b5050565b61086361085d610ae6565b83610ba7565b6108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089990611bcb565b60405180910390fd5b6108ae848484846110de565b50505050565b60606007600083815260200190815260200160002080546108d490611a04565b80601f016020809104026020016040519081016040528092919081815260200182805461090090611a04565b801561094d5780601f106109225761010080835404028352916020019161094d565b820191906000526020600020905b81548152906001019060200180831161093057829003601f168201915b50505050509050919050565b60065481565b8060076000600654815260200190815260200160002090816109819190611e95565b506006600081548092919061099590611f96565b919050555050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610aa48161113a565b610ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada90611c37565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b618361066d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bb38361066d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bf55750610bf4818561099d565b5b80610c3357508373ffffffffffffffffffffffffffffffffffffffff16610c1b84610490565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c5c8261066d565b73ffffffffffffffffffffffffffffffffffffffff1614610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990612050565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d18906120e2565b60405180910390fd5b610d2e838383600161117b565b8273ffffffffffffffffffffffffffffffffffffffff16610d4e8261066d565b73ffffffffffffffffffffffffffffffffffffffff1614610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b90612050565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f308383836001611181565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd79061214e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110d191906113e5565b60405180910390a3505050565b6110e9848484610c3c565b6110f584848484611187565b611134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112b906121e0565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff1661115c83610f35565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111a88473ffffffffffffffffffffffffffffffffffffffff1661130e565b15611301578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d1610ae6565b8786866040518563ffffffff1660e01b81526004016111f39493929190612255565b6020604051808303816000875af192505050801561122f57506040513d601f19601f8201168201806040525081019061122c91906122b6565b60015b6112b1573d806000811461125f576040519150601f19603f3d011682016040523d82523d6000602084013e611264565b606091505b5060008151036112a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a0906121e0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611306565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61137a81611345565b811461138557600080fd5b50565b60008135905061139781611371565b92915050565b6000602082840312156113b3576113b261133b565b5b60006113c184828501611388565b91505092915050565b60008115159050919050565b6113df816113ca565b82525050565b60006020820190506113fa60008301846113d6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561143a57808201518184015260208101905061141f565b60008484015250505050565b6000601f19601f8301169050919050565b600061146282611400565b61146c818561140b565b935061147c81856020860161141c565b61148581611446565b840191505092915050565b600060208201905081810360008301526114aa8184611457565b905092915050565b6000819050919050565b6114c5816114b2565b81146114d057600080fd5b50565b6000813590506114e2816114bc565b92915050565b6000602082840312156114fe576114fd61133b565b5b600061150c848285016114d3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061154082611515565b9050919050565b61155081611535565b82525050565b600060208201905061156b6000830184611547565b92915050565b61157a81611535565b811461158557600080fd5b50565b60008135905061159781611571565b92915050565b600080604083850312156115b4576115b361133b565b5b60006115c285828601611588565b92505060206115d3858286016114d3565b9150509250929050565b6000806000606084860312156115f6576115f561133b565b5b600061160486828701611588565b935050602061161586828701611588565b9250506040611626868287016114d3565b9150509250925092565b6000602082840312156116465761164561133b565b5b600061165484828501611588565b91505092915050565b611666816114b2565b82525050565b6000602082019050611681600083018461165d565b92915050565b611690816113ca565b811461169b57600080fd5b50565b6000813590506116ad81611687565b92915050565b600080604083850312156116ca576116c961133b565b5b60006116d885828601611588565b92505060206116e98582860161169e565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61173582611446565b810181811067ffffffffffffffff82111715611754576117536116fd565b5b80604052505050565b6000611767611331565b9050611773828261172c565b919050565b600067ffffffffffffffff821115611793576117926116fd565b5b61179c82611446565b9050602081019050919050565b82818337600083830152505050565b60006117cb6117c684611778565b61175d565b9050828152602081018484840111156117e7576117e66116f8565b5b6117f28482856117a9565b509392505050565b600082601f83011261180f5761180e6116f3565b5b813561181f8482602086016117b8565b91505092915050565b600080600080608085870312156118425761184161133b565b5b600061185087828801611588565b945050602061186187828801611588565b9350506040611872878288016114d3565b925050606085013567ffffffffffffffff81111561189357611892611340565b5b61189f878288016117fa565b91505092959194509250565b600067ffffffffffffffff8211156118c6576118c56116fd565b5b6118cf82611446565b9050602081019050919050565b60006118ef6118ea846118ab565b61175d565b90508281526020810184848401111561190b5761190a6116f8565b5b6119168482856117a9565b509392505050565b600082601f830112611933576119326116f3565b5b81356119438482602086016118dc565b91505092915050565b6000602082840312156119625761196161133b565b5b600082013567ffffffffffffffff8111156119805761197f611340565b5b61198c8482850161191e565b91505092915050565b600080604083850312156119ac576119ab61133b565b5b60006119ba85828601611588565b92505060206119cb85828601611588565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a1c57607f821691505b602082108103611a2f57611a2e6119d5565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a9160218361140b565b9150611a9c82611a35565b604082019050919050565b60006020820190508181036000830152611ac081611a84565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b23603d8361140b565b9150611b2e82611ac7565b604082019050919050565b60006020820190508181036000830152611b5281611b16565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611bb5602d8361140b565b9150611bc082611b59565b604082019050919050565b60006020820190508181036000830152611be481611ba8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c2160188361140b565b9150611c2c82611beb565b602082019050919050565b60006020820190508181036000830152611c5081611c14565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611cb360298361140b565b9150611cbe82611c57565b604082019050919050565b60006020820190508181036000830152611ce281611ca6565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d4b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d0e565b611d558683611d0e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d92611d8d611d88846114b2565b611d6d565b6114b2565b9050919050565b6000819050919050565b611dac83611d77565b611dc0611db882611d99565b848454611d1b565b825550505050565b600090565b611dd5611dc8565b611de0818484611da3565b505050565b5b81811015611e0457611df9600082611dcd565b600181019050611de6565b5050565b601f821115611e4957611e1a81611ce9565b611e2384611cfe565b81016020851015611e32578190505b611e46611e3e85611cfe565b830182611de5565b50505b505050565b600082821c905092915050565b6000611e6c60001984600802611e4e565b1980831691505092915050565b6000611e858383611e5b565b9150826002028217905092915050565b611e9e82611400565b67ffffffffffffffff811115611eb757611eb66116fd565b5b611ec18254611a04565b611ecc828285611e08565b600060209050601f831160018114611eff5760008415611eed578287015190505b611ef78582611e79565b865550611f5f565b601f198416611f0d86611ce9565b60005b82811015611f3557848901518255600182019150602085019450602081019050611f10565b86831015611f525784890151611f4e601f891682611e5b565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611fa1826114b2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611fd357611fd2611f67565b5b600182019050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061203a60258361140b565b915061204582611fde565b604082019050919050565b600060208201905081810360008301526120698161202d565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006120cc60248361140b565b91506120d782612070565b604082019050919050565b600060208201905081810360008301526120fb816120bf565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061213860198361140b565b915061214382612102565b602082019050919050565b600060208201905081810360008301526121678161212b565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006121ca60328361140b565b91506121d58261216e565b604082019050919050565b600060208201905081810360008301526121f9816121bd565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061222782612200565b612231818561220b565b935061224181856020860161141c565b61224a81611446565b840191505092915050565b600060808201905061226a6000830187611547565b6122776020830186611547565b612284604083018561165d565b8181036060830152612296818461221c565b905095945050505050565b6000815190506122b081611371565b92915050565b6000602082840312156122cc576122cb61133b565b5b60006122da848285016122a1565b9150509291505056fea26469706673582212204f6c8e6d32ec7b6571188a7c27933c28fb2f5f47bd3dfb9ba6f762d2bcaa856264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD082E381 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDA86F4A9 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x266 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x139D JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x159D JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x959 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F7 JUMPI POP PUSH2 0x3F6 DUP3 PUSH2 0xA31 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x40D SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x439 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x486 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x486 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x469 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1 DUP3 PUSH2 0x66D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x570 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x59F JUMPI POP PUSH2 0x59E DUP2 PUSH2 0x599 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x99D JUMP JUMPDEST JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 PUSH2 0xAEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x5F8 PUSH2 0xAE6 JUMP JUMPDEST DUP3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xC3C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x668 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x852 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x679 DUP4 PUSH2 0xF35 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E1 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75A SWAP1 PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7B9 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E5 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x832 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x807 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x832 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x815 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84E PUSH2 0x847 PUSH2 0xAE6 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF72 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x863 PUSH2 0x85D PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AE DUP5 DUP5 DUP5 DUP5 PUSH2 0x10DE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x8D4 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x900 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x94D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x922 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x94D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x930 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x995 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA4 DUP2 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB61 DUP4 PUSH2 0x66D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBB3 DUP4 PUSH2 0x66D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBF5 JUMPI POP PUSH2 0xBF4 DUP2 DUP6 PUSH2 0x99D JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC33 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC1B DUP5 PUSH2 0x490 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC5C DUP3 PUSH2 0x66D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD18 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD2E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD4E DUP3 PUSH2 0x66D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF30 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1181 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD7 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10E9 DUP5 DUP5 DUP5 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x10F5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1187 JUMP JUMPDEST PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112B SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x115C DUP4 PUSH2 0xF35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x130E JUMP JUMPDEST ISZERO PUSH2 0x1301 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D1 PUSH2 0xAE6 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x122F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122C SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x1345 JUMP JUMPDEST DUP2 EQ PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1397 DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH2 0x13B2 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1388 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13DF DUP2 PUSH2 0x13CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x143A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x141F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1462 DUP3 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x146C DUP2 DUP6 PUSH2 0x140B JUMP JUMPDEST SWAP4 POP PUSH2 0x147C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1485 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14AA DUP2 DUP5 PUSH2 0x1457 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C5 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x14D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E2 DUP2 PUSH2 0x14BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14FE JUMPI PUSH2 0x14FD PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x150C DUP5 DUP3 DUP6 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1540 DUP3 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x157A DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP2 EQ PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1597 DUP2 PUSH2 0x1571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B4 JUMPI PUSH2 0x15B3 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15D3 DUP6 DUP3 DUP7 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1604 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1615 DUP7 DUP3 DUP8 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1626 DUP7 DUP3 DUP8 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP5 DUP3 DUP6 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1666 DUP2 PUSH2 0x14B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1681 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x165D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1690 DUP2 PUSH2 0x13CA JUMP JUMPDEST DUP2 EQ PUSH2 0x169B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AD DUP2 PUSH2 0x1687 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E9 DUP6 DUP3 DUP7 ADD PUSH2 0x169E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1735 DUP3 PUSH2 0x1446 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1754 JUMPI PUSH2 0x1753 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1767 PUSH2 0x1331 JUMP JUMPDEST SWAP1 POP PUSH2 0x1773 DUP3 DUP3 PUSH2 0x172C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST PUSH2 0x179C DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CB PUSH2 0x17C6 DUP5 PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17E7 JUMPI PUSH2 0x17E6 PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH2 0x17F2 DUP5 DUP3 DUP6 PUSH2 0x17A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x16F3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x181F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1850 DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1861 DUP8 DUP3 DUP9 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1872 DUP8 DUP3 DUP9 ADD PUSH2 0x14D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1893 JUMPI PUSH2 0x1892 PUSH2 0x1340 JUMP JUMPDEST JUMPDEST PUSH2 0x189F DUP8 DUP3 DUP9 ADD PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18C6 JUMPI PUSH2 0x18C5 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST PUSH2 0x18CF DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EF PUSH2 0x18EA DUP5 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x190B JUMPI PUSH2 0x190A PUSH2 0x16F8 JUMP JUMPDEST JUMPDEST PUSH2 0x1916 DUP5 DUP3 DUP6 PUSH2 0x17A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x16F3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1943 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1962 JUMPI PUSH2 0x1961 PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x1340 JUMP JUMPDEST JUMPDEST PUSH2 0x198C DUP5 DUP3 DUP6 ADD PUSH2 0x191E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19CB DUP6 DUP3 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A1C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A2F JUMPI PUSH2 0x1A2E PUSH2 0x19D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A91 PUSH1 0x21 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9C DUP3 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC0 DUP2 PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B23 PUSH1 0x3D DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2E DUP3 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B52 DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB5 PUSH1 0x2D DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC0 DUP3 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE4 DUP2 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C21 PUSH1 0x18 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C50 DUP2 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB3 PUSH1 0x29 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBE DUP3 PUSH2 0x1C57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE2 DUP2 PUSH2 0x1CA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1D4B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x1D55 DUP7 DUP4 PUSH2 0x1D0E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D92 PUSH2 0x1D8D PUSH2 0x1D88 DUP5 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DAC DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1DC0 PUSH2 0x1DB8 DUP3 PUSH2 0x1D99 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1D1B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1DD5 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x1DE0 DUP2 DUP5 DUP5 PUSH2 0x1DA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E04 JUMPI PUSH2 0x1DF9 PUSH1 0x0 DUP3 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1E49 JUMPI PUSH2 0x1E1A DUP2 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x1E23 DUP5 PUSH2 0x1CFE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1E32 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1E46 PUSH2 0x1E3E DUP6 PUSH2 0x1CFE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1DE5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1E4E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E85 DUP4 DUP4 PUSH2 0x1E5B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9E DUP3 PUSH2 0x1400 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB7 JUMPI PUSH2 0x1EB6 PUSH2 0x16FD JUMP JUMPDEST JUMPDEST PUSH2 0x1EC1 DUP3 SLOAD PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0x1ECC DUP3 DUP3 DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1EFF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EED JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1EF7 DUP6 DUP3 PUSH2 0x1E79 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1F5F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1F0D DUP7 PUSH2 0x1CE9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F35 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F10 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1F52 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1F4E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1E5B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FA1 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1FD3 JUMPI PUSH2 0x1FD2 PUSH2 0x1F67 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203A PUSH1 0x25 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x2045 DUP3 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2069 DUP2 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CC PUSH1 0x24 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x20D7 DUP3 PUSH2 0x2070 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20FB DUP2 PUSH2 0x20BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2138 PUSH1 0x19 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x2143 DUP3 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2167 DUP2 PUSH2 0x212B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CA PUSH1 0x32 DUP4 PUSH2 0x140B JUMP JUMPDEST SWAP2 POP PUSH2 0x21D5 DUP3 PUSH2 0x216E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21F9 DUP2 PUSH2 0x21BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2227 DUP3 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x2231 DUP2 DUP6 PUSH2 0x220B JUMP JUMPDEST SWAP4 POP PUSH2 0x2241 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x141C JUMP JUMPDEST PUSH2 0x224A DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x226A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x2277 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x2284 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x165D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2296 DUP2 DUP5 PUSH2 0x221C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B0 DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22CC JUMPI PUSH2 0x22CB PUSH2 0x133B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22DA DUP5 DUP3 DUP6 ADD PUSH2 0x22A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH13 0x8E6D32EC7B6571188A7C27933C 0x28 0xFB 0x2F 0x5F SELFBALANCE 0xBD RETURNDATASIZE 0xFB SWAP12 0xA6 0xF7 PUSH3 0xD2BCAA DUP6 PUSH3 0x64736F PUSH13 0x63430008110033000000000000 ","sourceMap":"145:505:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;393:123:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4388:162:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;393:123:17:-;457:13;488:12;:21;501:7;488:21;;;;;;;;;;;481:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:123;;;:::o;200:27::-;;;;:::o;522:125::-;613:3;584:12;:26;597:12;;584:26;;;;;;;;;;;:32;;;;;;:::i;:::-;;626:12;;:14;;;;;;;;;:::i;:::-;;;;;;522:125;:::o;4388:162:1:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:1:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;12572:171:1:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;7120:126::-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;1412:320:5:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:509::-;11165:6;11214:2;11202:9;11193:7;11189:23;11185:32;11182:119;;;11220:79;;:::i;:::-;11182:119;11368:1;11357:9;11353:17;11340:31;11398:18;11390:6;11387:30;11384:117;;;11420:79;;:::i;:::-;11384:117;11525:63;11580:7;11571:6;11560:9;11556:22;11525:63;:::i;:::-;11515:73;;11311:287;11096:509;;;;:::o;11611:474::-;11679:6;11687;11736:2;11724:9;11715:7;11711:23;11707:32;11704:119;;;11742:79;;:::i;:::-;11704:119;11862:1;11887:53;11932:7;11923:6;11912:9;11908:22;11887:53;:::i;:::-;11877:63;;11833:117;11989:2;12015:53;12060:7;12051:6;12040:9;12036:22;12015:53;:::i;:::-;12005:63;;11960:118;11611:474;;;;;:::o;12091:180::-;12139:77;12136:1;12129:88;12236:4;12233:1;12226:15;12260:4;12257:1;12250:15;12277:320;12321:6;12358:1;12352:4;12348:12;12338:22;;12405:1;12399:4;12395:12;12426:18;12416:81;;12482:4;12474:6;12470:17;12460:27;;12416:81;12544:2;12536:6;12533:14;12513:18;12510:38;12507:84;;12563:18;;:::i;:::-;12507:84;12328:269;12277:320;;;:::o;12603:220::-;12743:34;12739:1;12731:6;12727:14;12720:58;12812:3;12807:2;12799:6;12795:15;12788:28;12603:220;:::o;12829:366::-;12971:3;12992:67;13056:2;13051:3;12992:67;:::i;:::-;12985:74;;13068:93;13157:3;13068:93;:::i;:::-;13186:2;13181:3;13177:12;13170:19;;12829:366;;;:::o;13201:419::-;13367:4;13405:2;13394:9;13390:18;13382:26;;13454:9;13448:4;13444:20;13440:1;13429:9;13425:17;13418:47;13482:131;13608:4;13482:131;:::i;:::-;13474:139;;13201:419;;;:::o;13626:248::-;13766:34;13762:1;13754:6;13750:14;13743:58;13835:31;13830:2;13822:6;13818:15;13811:56;13626:248;:::o;13880:366::-;14022:3;14043:67;14107:2;14102:3;14043:67;:::i;:::-;14036:74;;14119:93;14208:3;14119:93;:::i;:::-;14237:2;14232:3;14228:12;14221:19;;13880:366;;;:::o;14252:419::-;14418:4;14456:2;14445:9;14441:18;14433:26;;14505:9;14499:4;14495:20;14491:1;14480:9;14476:17;14469:47;14533:131;14659:4;14533:131;:::i;:::-;14525:139;;14252:419;;;:::o;14677:232::-;14817:34;14813:1;14805:6;14801:14;14794:58;14886:15;14881:2;14873:6;14869:15;14862:40;14677:232;:::o;14915:366::-;15057:3;15078:67;15142:2;15137:3;15078:67;:::i;:::-;15071:74;;15154:93;15243:3;15154:93;:::i;:::-;15272:2;15267:3;15263:12;15256:19;;14915:366;;;:::o;15287:419::-;15453:4;15491:2;15480:9;15476:18;15468:26;;15540:9;15534:4;15530:20;15526:1;15515:9;15511:17;15504:47;15568:131;15694:4;15568:131;:::i;:::-;15560:139;;15287:419;;;:::o;15712:174::-;15852:26;15848:1;15840:6;15836:14;15829:50;15712:174;:::o;15892:366::-;16034:3;16055:67;16119:2;16114:3;16055:67;:::i;:::-;16048:74;;16131:93;16220:3;16131:93;:::i;:::-;16249:2;16244:3;16240:12;16233:19;;15892:366;;;:::o;16264:419::-;16430:4;16468:2;16457:9;16453:18;16445:26;;16517:9;16511:4;16507:20;16503:1;16492:9;16488:17;16481:47;16545:131;16671:4;16545:131;:::i;:::-;16537:139;;16264:419;;;:::o;16689:228::-;16829:34;16825:1;16817:6;16813:14;16806:58;16898:11;16893:2;16885:6;16881:15;16874:36;16689:228;:::o;16923:366::-;17065:3;17086:67;17150:2;17145:3;17086:67;:::i;:::-;17079:74;;17162:93;17251:3;17162:93;:::i;:::-;17280:2;17275:3;17271:12;17264:19;;16923:366;;;:::o;17295:419::-;17461:4;17499:2;17488:9;17484:18;17476:26;;17548:9;17542:4;17538:20;17534:1;17523:9;17519:17;17512:47;17576:131;17702:4;17576:131;:::i;:::-;17568:139;;17295:419;;;:::o;17720:141::-;17769:4;17792:3;17784:11;;17815:3;17812:1;17805:14;17849:4;17846:1;17836:18;17828:26;;17720:141;;;:::o;17867:93::-;17904:6;17951:2;17946;17939:5;17935:14;17931:23;17921:33;;17867:93;;;:::o;17966:107::-;18010:8;18060:5;18054:4;18050:16;18029:37;;17966:107;;;;:::o;18079:393::-;18148:6;18198:1;18186:10;18182:18;18221:97;18251:66;18240:9;18221:97;:::i;:::-;18339:39;18369:8;18358:9;18339:39;:::i;:::-;18327:51;;18411:4;18407:9;18400:5;18396:21;18387:30;;18460:4;18450:8;18446:19;18439:5;18436:30;18426:40;;18155:317;;18079:393;;;;;:::o;18478:60::-;18506:3;18527:5;18520:12;;18478:60;;;:::o;18544:142::-;18594:9;18627:53;18645:34;18654:24;18672:5;18654:24;:::i;:::-;18645:34;:::i;:::-;18627:53;:::i;:::-;18614:66;;18544:142;;;:::o;18692:75::-;18735:3;18756:5;18749:12;;18692:75;;;:::o;18773:269::-;18883:39;18914:7;18883:39;:::i;:::-;18944:91;18993:41;19017:16;18993:41;:::i;:::-;18985:6;18978:4;18972:11;18944:91;:::i;:::-;18938:4;18931:105;18849:193;18773:269;;;:::o;19048:73::-;19093:3;19048:73;:::o;19127:189::-;19204:32;;:::i;:::-;19245:65;19303:6;19295;19289:4;19245:65;:::i;:::-;19180:136;19127:189;;:::o;19322:186::-;19382:120;19399:3;19392:5;19389:14;19382:120;;;19453:39;19490:1;19483:5;19453:39;:::i;:::-;19426:1;19419:5;19415:13;19406:22;;19382:120;;;19322:186;;:::o;19514:543::-;19615:2;19610:3;19607:11;19604:446;;;19649:38;19681:5;19649:38;:::i;:::-;19733:29;19751:10;19733:29;:::i;:::-;19723:8;19719:44;19916:2;19904:10;19901:18;19898:49;;;19937:8;19922:23;;19898:49;19960:80;20016:22;20034:3;20016:22;:::i;:::-;20006:8;20002:37;19989:11;19960:80;:::i;:::-;19619:431;;19604:446;19514:543;;;:::o;20063:117::-;20117:8;20167:5;20161:4;20157:16;20136:37;;20063:117;;;;:::o;20186:169::-;20230:6;20263:51;20311:1;20307:6;20299:5;20296:1;20292:13;20263:51;:::i;:::-;20259:56;20344:4;20338;20334:15;20324:25;;20237:118;20186:169;;;;:::o;20360:295::-;20436:4;20582:29;20607:3;20601:4;20582:29;:::i;:::-;20574:37;;20644:3;20641:1;20637:11;20631:4;20628:21;20620:29;;20360:295;;;;:::o;20660:1395::-;20777:37;20810:3;20777:37;:::i;:::-;20879:18;20871:6;20868:30;20865:56;;;20901:18;;:::i;:::-;20865:56;20945:38;20977:4;20971:11;20945:38;:::i;:::-;21030:67;21090:6;21082;21076:4;21030:67;:::i;:::-;21124:1;21148:4;21135:17;;21180:2;21172:6;21169:14;21197:1;21192:618;;;;21854:1;21871:6;21868:77;;;21920:9;21915:3;21911:19;21905:26;21896:35;;21868:77;21971:67;22031:6;22024:5;21971:67;:::i;:::-;21965:4;21958:81;21827:222;21162:887;;21192:618;21244:4;21240:9;21232:6;21228:22;21278:37;21310:4;21278:37;:::i;:::-;21337:1;21351:208;21365:7;21362:1;21359:14;21351:208;;;21444:9;21439:3;21435:19;21429:26;21421:6;21414:42;21495:1;21487:6;21483:14;21473:24;;21542:2;21531:9;21527:18;21514:31;;21388:4;21385:1;21381:12;21376:17;;21351:208;;;21587:6;21578:7;21575:19;21572:179;;;21645:9;21640:3;21636:19;21630:26;21688:48;21730:4;21722:6;21718:17;21707:9;21688:48;:::i;:::-;21680:6;21673:64;21595:156;21572:179;21797:1;21793;21785:6;21781:14;21777:22;21771:4;21764:36;21199:611;;;21162:887;;20752:1303;;;20660:1395;;:::o;22061:180::-;22109:77;22106:1;22099:88;22206:4;22203:1;22196:15;22230:4;22227:1;22220:15;22247:233;22286:3;22309:24;22327:5;22309:24;:::i;:::-;22300:33;;22355:66;22348:5;22345:77;22342:103;;22425:18;;:::i;:::-;22342:103;22472:1;22465:5;22461:13;22454:20;;22247:233;;;:::o;22486:224::-;22626:34;22622:1;22614:6;22610:14;22603:58;22695:7;22690:2;22682:6;22678:15;22671:32;22486:224;:::o;22716:366::-;22858:3;22879:67;22943:2;22938:3;22879:67;:::i;:::-;22872:74;;22955:93;23044:3;22955:93;:::i;:::-;23073:2;23068:3;23064:12;23057:19;;22716:366;;;:::o;23088:419::-;23254:4;23292:2;23281:9;23277:18;23269:26;;23341:9;23335:4;23331:20;23327:1;23316:9;23312:17;23305:47;23369:131;23495:4;23369:131;:::i;:::-;23361:139;;23088:419;;;:::o;23513:223::-;23653:34;23649:1;23641:6;23637:14;23630:58;23722:6;23717:2;23709:6;23705:15;23698:31;23513:223;:::o;23742:366::-;23884:3;23905:67;23969:2;23964:3;23905:67;:::i;:::-;23898:74;;23981:93;24070:3;23981:93;:::i;:::-;24099:2;24094:3;24090:12;24083:19;;23742:366;;;:::o;24114:419::-;24280:4;24318:2;24307:9;24303:18;24295:26;;24367:9;24361:4;24357:20;24353:1;24342:9;24338:17;24331:47;24395:131;24521:4;24395:131;:::i;:::-;24387:139;;24114:419;;;:::o;24539:175::-;24679:27;24675:1;24667:6;24663:14;24656:51;24539:175;:::o;24720:366::-;24862:3;24883:67;24947:2;24942:3;24883:67;:::i;:::-;24876:74;;24959:93;25048:3;24959:93;:::i;:::-;25077:2;25072:3;25068:12;25061:19;;24720:366;;;:::o;25092:419::-;25258:4;25296:2;25285:9;25281:18;25273:26;;25345:9;25339:4;25335:20;25331:1;25320:9;25316:17;25309:47;25373:131;25499:4;25373:131;:::i;:::-;25365:139;;25092:419;;;:::o;25517:237::-;25657:34;25653:1;25645:6;25641:14;25634:58;25726:20;25721:2;25713:6;25709:15;25702:45;25517:237;:::o;25760:366::-;25902:3;25923:67;25987:2;25982:3;25923:67;:::i;:::-;25916:74;;25999:93;26088:3;25999:93;:::i;:::-;26117:2;26112:3;26108:12;26101:19;;25760:366;;;:::o;26132:419::-;26298:4;26336:2;26325:9;26321:18;26313:26;;26385:9;26379:4;26375:20;26371:1;26360:9;26356:17;26349:47;26413:131;26539:4;26413:131;:::i;:::-;26405:139;;26132:419;;;:::o;26557:98::-;26608:6;26642:5;26636:12;26626:22;;26557:98;;;:::o;26661:168::-;26744:11;26778:6;26773:3;26766:19;26818:4;26813:3;26809:14;26794:29;;26661:168;;;;:::o;26835:373::-;26921:3;26949:38;26981:5;26949:38;:::i;:::-;27003:70;27066:6;27061:3;27003:70;:::i;:::-;26996:77;;27082:65;27140:6;27135:3;27128:4;27121:5;27117:16;27082:65;:::i;:::-;27172:29;27194:6;27172:29;:::i;:::-;27167:3;27163:39;27156:46;;26925:283;26835:373;;;;:::o;27214:640::-;27409:4;27447:3;27436:9;27432:19;27424:27;;27461:71;27529:1;27518:9;27514:17;27505:6;27461:71;:::i;:::-;27542:72;27610:2;27599:9;27595:18;27586:6;27542:72;:::i;:::-;27624;27692:2;27681:9;27677:18;27668:6;27624:72;:::i;:::-;27743:9;27737:4;27733:20;27728:2;27717:9;27713:18;27706:48;27771:76;27842:4;27833:6;27771:76;:::i;:::-;27763:84;;27214:640;;;;;;;:::o;27860:141::-;27916:5;27947:6;27941:13;27932:22;;27963:32;27989:5;27963:32;:::i;:::-;27860:141;;;;:::o;28007:349::-;28076:6;28125:2;28113:9;28104:7;28100:23;28096:32;28093:119;;;28131:79;;:::i;:::-;28093:119;28251:1;28276:63;28331:7;28322:6;28311:9;28307:22;28276:63;:::i;:::-;28266:73;;28222:127;28007:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1797000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2899","getApproved(uint256)":"5300","isApprovedForAll(address,address)":"infinite","mintNft(string)":"infinite","name()":"infinite","ownerOf(uint256)":"3088","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenCounter()":"2473","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintNft(string)":"da86f4a9","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenCounter()":"d082e381","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"str2\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/convertToERC721.sol\":\"ConvertToERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/InewBasicNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface INewBasicNFT{\\n    function mintNft(string memory uri) external;\\n}\",\"keccak256\":\"0x0306d7eef5fe882b8f1092cef8ee08c1803eb3b92958b4c3f45ff49b53e91d97\",\"license\":\"MIT\"},\"contracts/convertToERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"./InewBasicNft.sol\\\";\\n\\ncontract ConvertToERC721 is INewBasicNFT, ERC721{\\n\\n    uint256 public tokenCounter;\\n    mapping(uint256=>string) private tokenIDtoURI;\\n\\n    constructor(string memory str1, string memory str2) ERC721(str1,str2){\\n        tokenCounter = 0;\\n    }\\n\\n    function tokenURI(uint256 tokenID) public override view returns(string memory){\\n        return tokenIDtoURI[tokenID];\\n    }\\n\\n    function mintNft(string memory uri) public override {\\n        tokenIDtoURI[tokenCounter] = uri;\\n        tokenCounter++;\\n    } \\n}\",\"keccak256\":\"0x55c00df95f0047ee9d8741ca0cfceccfdad521722f2e504e9dfa522ca11fb9aa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":90,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":92,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":96,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":100,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":104,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":110,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3076,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"tokenCounter","offset":0,"slot":"6","type":"t_uint256"},{"astId":3080,"contract":"contracts/convertToERC721.sol:ConvertToERC721","label":"tokenIDtoURI","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/nftMarketPlace.sol":{"IVerifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"_pA","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"_pB","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"_pC","type":"uint256[2]"},{"internalType":"uint256[2]","name":"_pubSignals","type":"uint256[2]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[2])":"f5c9d69e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_pA\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"_pB\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_pC\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_pubSignals\",\"type\":\"uint256[2]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nftMarketPlace.sol\":\"IVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"contracts/ImarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface INftMarketPlace {\\n    function withdrawProceeds(\\n        uint[2] calldata _pA,\\n        uint[2][2] calldata _pB, \\n        uint[2] calldata _pC, \\n        uint nullHash,\\n        uint256 com) external;\\n}\",\"keccak256\":\"0x174868cef30b7e79013b370c020c84df92c4a71bb7d2fda04da86c94551dd2e5\",\"license\":\"MIT\"},\"contracts/InewBasicNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface INewBasicNFT{\\n    function mintNft(string memory uri) external;\\n}\",\"keccak256\":\"0x0306d7eef5fe882b8f1092cef8ee08c1803eb3b92958b4c3f45ff49b53e91d97\",\"license\":\"MIT\"},\"contracts/Izknft.sol\":{\"content\":\"//SPDX-License-Indentifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IZkNFT {\\n    \\n    function approve(uint256 _tokenID, address op) external;\\n    function getApprovedAdd(uint256 _tokenID) external view returns(address);    \\n    function ownerOf(uint256 _tokenID) external view returns (uint256);\\n    function transferNFT(uint256 _tokenID, uint256 nullifierHash, address buyer) external;\\n    function transferFrom(uint256 ownerNul, uint256 buyerNul, address buyer, uint256 _tokenID) external;\\n    function getTokenURI(uint256 _tokenID) external view returns(string memory);\\n    function name() external view  returns (string memory);\\n    function symbol() external view  returns (string memory);\\n    function deleteZkNft(uint256 tokenID, address owner) external;\\n}\",\"keccak256\":\"0x084b5a9fe01e11230cb9cfda5b7342a947dd854f62e84e3c697d7b8073d42b4a\"},\"contracts/MIMCSponge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ncontract Hasher {\\n    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    uint256[20] c = [\\n        0,\\n        25823191961023811529686723375255045606187170120624741056268890390838310270028,\\n        71153255768872006974285801937521995907343848376936063113800887806988124358800,\\n        51253176922899201987938365653129780755804051536550826601168630951148399005246,\\n        66651710483985382365580181188706173532487386392003341306307921015066514594406,\\n        45887003413921204775397977044284378920236104620216194900669591190628189327887,\\n        14399999722617037892747232478295923748665564430258345135947757381904956977453,\\n        29376176727758177809204424209125257629638239807319618360680345079470240949145,\\n        13768859312518298840937540532277016512087005174650120937309279832230513110846,\\n        54749662990362840569021981534456448557155682756506853240029023635346061661615,\\n        25161436470718351277017231215227846535148280460947816286575563945185127975034,\\n        90370030464179443930112165274275271350651484239155016554738639197417116558730,\\n        92014788260850167582827910417652439562305280453223492851660096740204889381255,\\n        40376490640073034398204558905403523738912091909516510156577526370637723469243,\\n        903792244391531377123276432892896247924738784402045372115602887103675299839,\\n        112203415202699791888928570309186854585561656615192232544262649073999791317171,\\n        114801681136748880679062548782792743842998635558909635247841799223004802934045,\\n        111440818948676816539978930514468038603327388809824089593328295503672011604028,\\n        64965960071752809090438003157362764845283225351402746675238539375404528707397,\\n        98428510787134995495896453413714864789970336245473413374424598985988309743097\\n    ];\\n\\n    function MiMC5Feistel(uint256 _iL, uint256 _iR, uint256 _k) internal view returns(uint256 oL, uint256 oR) {\\n        uint8 nRounds = 20;\\n\\n        uint256 lastL = _iL;\\n        uint256 lastR = _iR;\\n\\n        uint256 mask;\\n        uint256 mask2;\\n        uint256 mask4;\\n        uint256 temp;\\n\\n        for(uint8 i = 0; i < nRounds; i++){\\n            mask = addmod(lastR, _k, p);\\n            mask = addmod(mask, c[i], p);\\n            mask2 = mulmod(mask, mask, p);\\n            mask4 = mulmod(mask2, mask2, p);\\n            mask = mulmod(mask4, mask, p);\\n\\n            temp = lastR;\\n            lastR = addmod(lastL, mask, p);\\n            lastL = temp;\\n        }\\n\\n        return (lastL, lastR);\\n    }\\n    function MiMC5Sponge(uint256[2] memory _ins, uint256 _k) external view returns(uint256 h) {\\n        uint256 lastR = 0;\\n        uint256 lastC = 0;\\n\\n        for(uint8 i = 0; i < _ins.length; i++){\\n            lastR = addmod(lastR, _ins[i], p);\\n            (lastR, lastC) = MiMC5Feistel(lastR, lastC, _k);\\n        }\\n\\n        h = lastR;\\n    }\\n}\",\"keccak256\":\"0x4282af99f3cdbd1943657894e287a58acf550868b1c3565d67c412247a08819e\",\"license\":\"MIT\"},\"contracts/nftMarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./Izknft.sol\\\";\\nimport \\\"./ImarketPlace.sol\\\";\\nimport \\\"./InewBasicNft.sol\\\";\\nimport \\\"./MIMCSponge.sol\\\";\\n\\ninterface IVerifier {\\n    function verifyProof(uint[2] calldata _pA, uint[2][2] calldata _pB, uint[2] calldata _pC, uint[2] calldata _pubSignals) external returns (bool);\\n}\\n\\ncontract NftMarketplace is ReentrancyGuard, INftMarketPlace{\\n    error PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\\n    error ItemNotForSale(address nftAddress, uint256 tokenId);\\n    error NotListed(address nftAddress, uint256 tokenId);\\n    error AlreadyListed(address nftAddress, uint256 tokenId);\\n    error NoProceeds();\\n    error NotOwner();\\n    error NotApprovedForMarketplace();\\n    error PriceMustBeAboveZero();\\n    error TransactionFailed();\\n    error NullifierAlreadyUsed();\\n    error CommitmentAlreadyUsed();\\n    error InvalidProof();\\n    error NotAuthority();\\n\\n    struct Listing {\\n        uint256 price;\\n        uint256 seller;\\n    }\\n\\n    event ItemListed(\\n        uint256 seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n\\n    event ItemCanceled(\\n        uint256 seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId\\n    );\\n\\n    event ItemBought(\\n        uint256 buyer,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n\\n    event ItemConverted(\\n        address zkNftAddress,\\n        uint256 indexed tokenID,\\n        address ercNftAddress\\n    );\\n\\n    Hasher hasher;\\n    uint256 creationFee = 0;\\n    uint256 marketFee = 0;\\n    uint256 conversionFee = 0;\\n    address verifier;\\n    address private authority;\\n    mapping(address => mapping(uint256 => Listing)) private s_listings;\\n    mapping(uint256 => uint256) private s_proceeds;\\n    mapping(uint256 => bool) private nullifierHashes;\\n    mapping(uint256 => bool) private commitments;\\n\\n    constructor(address _hasher, address _verifier) public {\\n        hasher = Hasher(_hasher);\\n        verifier = _verifier;\\n        authority = msg.sender;\\n    }\\n\\n    modifier notListed(\\n        address nftAddress,\\n        uint256 tokenId\\n    ) {\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price > 0) {\\n            revert AlreadyListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n\\n    modifier isListed(address nftAddress, uint256 tokenId) {\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price <= 0) {\\n            revert NotListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n\\n    modifier isOwner(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 spenderCom\\n    ) {\\n        IZkNFT nft = IZkNFT(nftAddress);\\n        uint256 ownerCom = nft.ownerOf(tokenId);\\n        if (spenderCom==ownerCom) {\\n            revert NotOwner();\\n        } \\n        _;\\n    }\\n\\n    function listItem(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 price,\\n        uint256 com\\n    )\\n        external\\n        notListed(nftAddress, tokenId)\\n        isOwner(nftAddress, tokenId, com)\\n    {\\n        if(commitments[com]){\\n            revert CommitmentAlreadyUsed();\\n        }\\n\\n        if (price <= 0) {\\n            revert PriceMustBeAboveZero();\\n        }\\n        IZkNFT nft = IZkNFT(nftAddress);\\n        if (nft.getApprovedAdd(tokenId) != address(this)) {\\n            revert NotApprovedForMarketplace();\\n        }\\n        s_listings[nftAddress][tokenId] = Listing(price, com);\\n        emit ItemListed(com, nftAddress, tokenId, price);\\n\\n        commitments[com] = true;\\n    }\\n\\n    function cancelListing(address nftAddress, uint256 tokenId, uint256 com)\\n        external\\n        isOwner(nftAddress, tokenId, com)\\n        isListed(nftAddress, tokenId)\\n    {\\n        delete (s_listings[nftAddress][tokenId]);\\n        emit ItemCanceled(com, nftAddress, tokenId);\\n    }\\n\\n    function buyItem(address nftAddress, uint256 tokenId, uint256 com)\\n        external\\n        payable\\n        isListed(nftAddress, tokenId)\\n        nonReentrant\\n    {\\n        Listing memory listedItem = s_listings[nftAddress][tokenId];\\n        if (msg.value < (listedItem.price + marketFee)) {\\n            revert PriceNotMet(nftAddress, tokenId, listedItem.price);\\n        }\\n        s_proceeds[listedItem.seller] += msg.value;\\n        delete (s_listings[nftAddress][tokenId]);\\n        IZkNFT(nftAddress).transferNFT(tokenId,com,msg.sender);\\n        emit ItemBought(com, nftAddress, tokenId, listedItem.price);\\n    }\\n\\n    function updateListing(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 newPrice,\\n        uint256 com\\n    )\\n        external\\n        isListed(nftAddress, tokenId)\\n        nonReentrant\\n        isOwner(nftAddress, tokenId, com)\\n    {\\n        if (newPrice <= 0) {\\n            revert PriceMustBeAboveZero();\\n        }\\n        s_listings[nftAddress][tokenId].price = newPrice;\\n        emit ItemListed(com, nftAddress, tokenId, newPrice);\\n    }\\n\\n    function withdrawProceeds(\\n        uint[2] calldata _pA,\\n        uint[2][2] calldata _pB, \\n        uint[2] calldata _pC, \\n        uint nullHash,\\n        uint256 com\\n    ) \\n        override external \\n    {\\n\\n        if(!nullifierHashes[nullHash]){\\n            revert NullifierAlreadyUsed();\\n        }\\n\\n        uint256 _addr = uint256(uint160(msg.sender));\\n\\n        (bool verifyOK, ) = verifier.call(abi.encodeCall(IVerifier.verifyProof, (_pA, _pB, _pC, [nullHash, _addr])));\\n\\n        if(!verifyOK){\\n            revert InvalidProof();\\n        }\\n\\n        nullifierHashes[nullHash] = true;\\n\\n        uint256 proceeds = s_proceeds[com];\\n        if (proceeds <= 0) {\\n            revert NoProceeds();\\n        }\\n        s_proceeds[com] = 0;\\n        (bool success, ) = payable(msg.sender).call{value: (proceeds - creationFee)}(\\\"\\\");\\n        \\n        if(!success){\\n            revert TransactionFailed();\\n        }\\n    }\\n\\n    function setCreationFee(uint256 _fee) public {\\n        if(msg.sender == authority){\\n            revert NotAuthority();\\n        }\\n        creationFee = _fee;\\n    }\\n\\n    function setBuyerFee(uint256 _fee) public {\\n        if(msg.sender == authority){\\n            revert NotAuthority();\\n        }\\n        marketFee = _fee;\\n    }\\n\\n    function setConversionFee(uint256 _fee) public {\\n        if(msg.sender == authority){\\n            revert NotAuthority();\\n        }\\n        conversionFee = _fee;\\n    }\\n\\n    function convertToERC721(address zkNftAddress, address convertableNft,uint256 tokenId) public payable {\\n\\n        (bool success, ) = payable(msg.sender).call{value: conversionFee}(\\\"\\\");\\n        if(!success){\\n            revert TransactionFailed();\\n        }\\n        string memory tokenURI = IZkNFT(zkNftAddress).getTokenURI(tokenId);\\n        IZkNFT(zkNftAddress).deleteZkNft(tokenId,msg.sender);\\n        INewBasicNFT(convertableNft).mintNft(tokenURI);\\n\\n        emit ItemConverted(zkNftAddress,tokenId,convertableNft);\\n    }\\n\\n    function getListing(address nftAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (Listing memory)\\n    {\\n        return s_listings[nftAddress][tokenId];\\n    }\\n\\n    function getProceeds(uint256 sellerCom) external view returns (uint256) {\\n        return s_proceeds[sellerCom];\\n    }\\n}\",\"keccak256\":\"0x0951bc1a8bbe3b26a979cdba3ed789d4197cce10b084f6e25933726c1f0444a5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"NftMarketplace":{"abi":[{"inputs":[{"internalType":"address","name":"_hasher","type":"address"},{"internalType":"address","name":"_verifier","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"AlreadyListed","type":"error"},{"inputs":[],"name":"CommitmentAlreadyUsed","type":"error"},{"inputs":[],"name":"InvalidProof","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ItemNotForSale","type":"error"},{"inputs":[],"name":"NoProceeds","type":"error"},{"inputs":[],"name":"NotApprovedForMarketplace","type":"error"},{"inputs":[],"name":"NotAuthority","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NotListed","type":"error"},{"inputs":[],"name":"NotOwner","type":"error"},{"inputs":[],"name":"NullifierAlreadyUsed","type":"error"},{"inputs":[],"name":"PriceMustBeAboveZero","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"PriceNotMet","type":"error"},{"inputs":[],"name":"TransactionFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"buyer","type":"uint256"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ItemBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"seller","type":"uint256"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ItemCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"zkNftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenID","type":"uint256"},{"indexed":false,"internalType":"address","name":"ercNftAddress","type":"address"}],"name":"ItemConverted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"seller","type":"uint256"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ItemListed","type":"event"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"com","type":"uint256"}],"name":"buyItem","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"com","type":"uint256"}],"name":"cancelListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"zkNftAddress","type":"address"},{"internalType":"address","name":"convertableNft","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"convertToERC721","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getListing","outputs":[{"components":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"seller","type":"uint256"}],"internalType":"struct NftMarketplace.Listing","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"sellerCom","type":"uint256"}],"name":"getProceeds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"com","type":"uint256"}],"name":"listItem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setBuyerFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setConversionFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setCreationFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"newPrice","type":"uint256"},{"internalType":"uint256","name":"com","type":"uint256"}],"name":"updateListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[2]","name":"_pA","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"_pB","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"_pC","type":"uint256[2]"},{"internalType":"uint256","name":"nullHash","type":"uint256"},{"internalType":"uint256","name":"com","type":"uint256"}],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0},"@_3304":{"entryPoint":null,"id":3304,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":387,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":318,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":286,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":281,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":338,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"379:81:22","statements":[{"nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:22"},"nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nodeType":"YulBlock","src":"511:51:22","statements":[{"nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:22"},"nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:22"},"nodeType":"YulFunctionCall","src":"670:12:22"},"nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:22"},"nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:22"},"nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:22"},"nodeType":"YulFunctionCall","src":"624:43:22"},"nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nodeType":"YulBlock","src":"759:80:22","statements":[{"nodeType":"YulAssignment","src":"769:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:22"},"nodeType":"YulFunctionCall","src":"778:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:22"},"nodeType":"YulFunctionCall","src":"800:33:22"},"nodeType":"YulExpressionStatement","src":"800:33:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:22","type":""}],"src":"696:143:22"},{"body":{"nodeType":"YulBlock","src":"939:413:22","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:22"},"nodeType":"YulFunctionCall","src":"987:79:22"},"nodeType":"YulExpressionStatement","src":"987:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:22"},"nodeType":"YulFunctionCall","src":"956:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:22"},"nodeType":"YulFunctionCall","src":"952:32:22"},"nodeType":"YulIf","src":"949:119:22"},{"nodeType":"YulBlock","src":"1078:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:22"},"nodeType":"YulFunctionCall","src":"1164:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:22"},"nodeType":"YulFunctionCall","src":"1132:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:22"}]}]},{"nodeType":"YulBlock","src":"1216:129:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:22"},"nodeType":"YulFunctionCall","src":"1303:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:22"},"nodeType":"YulFunctionCall","src":"1271:64:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:22","type":""}],"src":"845:507:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526000600255600060035560006004553480156200002057600080fd5b50604051620022c1380380620022c1833981810160405281019062000046919062000183565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001ca565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200014b826200011e565b9050919050565b6200015d816200013e565b81146200016957600080fd5b50565b6000815190506200017d8162000152565b92915050565b600080604083850312156200019d576200019c62000119565b5b6000620001ad858286016200016c565b9250506020620001c0858286016200016c565b9150509250929050565b6120e780620001da6000396000f3fe60806040526004361061009c5760003560e01c8063bcb143ef11610064578063bcb143ef14610196578063c88b7c8e146101bf578063d9964757146101e8578063f6b45c4614610211578063fa7da19d1461022d578063fc5a8444146102565761009c565b80634b3320e0146100a15780636be4a002146100ca57806381b1fc7a146100f357806388700d1c14610130578063b7d862251461016d575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906116d0565b610272565b005b3480156100d657600080fd5b506100f160048036038101906100ec919061176c565b6104b0565b005b3480156100ff57600080fd5b5061011a600480360381019061011591906117ea565b6107a9565b6040516101279190611826565b60405180910390f35b34801561013c57600080fd5b5061015760048036038101906101529190611841565b6107c6565b60405161016491906118bf565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f91906117ea565b610845565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906118da565b6108d6565b005b3480156101cb57600080fd5b506101e660048036038101906101e191906117ea565b610cd3565b005b3480156101f457600080fd5b5061020f600480360381019061020a91906118da565b610d64565b005b61022b600480360381019061022691906116d0565b610fe4565b005b34801561023957600080fd5b50610254600480360381019061024f91906117ea565b6112e3565b005b610270600480360381019061026b9190611941565b611374565b005b828282600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016102b59190611826565b602060405180830381865afa1580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f691906119a9565b9050808303610331576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87876000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060008160000151116103f15782826040517f6831488c0000000000000000000000000000000000000000000000000000000081526004016103e89291906119e5565b60405180910390fd5b600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060008082016000905560018201600090555050898b73ffffffffffffffffffffffffffffffffffffffff167fb407ecd2b3b64ae3cf35d828f7155fc60edd9911030438178310f6498bb0328f8b60405161049b9190611826565b60405180910390a35050505050505050505050565b6009600083815260200190815260200160002060009054906101000a900460ff16610507576040517fcad2ae0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168787876040518060400160405280898152602001878152506040516024016105889493929190611b82565b60405160208183030381529060405263f5c9d69e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105da9190611c3a565b6000604051808303816000865af19150503d8060008114610617576040519150601f19603f3d011682016040523d82523d6000602084013e61061c565b606091505b5050905080610657576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016009600086815260200190815260200160002060006101000a81548160ff021916908315150217905550600060086000858152602001908152602001600020549050600081116106d5576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860008681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16600254836107159190611c80565b60405161072190611cda565b60006040518083038185875af1925050503d806000811461075e576040519150601f19603f3d011682016040523d82523d6000602084013e610763565b606091505b505090508061079e576040517fbf961a2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050565b600060086000838152602001908152602001600020549050919050565b6107ce61160e565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108cc576040517f3121268600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060028190555050565b83836000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111156109975782826040517f4a5568d500000000000000000000000000000000000000000000000000000000815260040161098e9291906119e5565b60405180910390fd5b868685600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016109da9190611826565b602060405180830381865afa1580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b91906119a9565b9050808303610a56576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a60008a815260200190815260200160002060009054906101000a900460ff1615610aae576040517fb7c01e1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a11610ae8576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663d78092528e6040518263ffffffff1660e01b8152600401610b3d9190611826565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611d04565b73ffffffffffffffffffffffffffffffffffffffff1614610bcb576040517f4be3a2c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808c81526020018b815250600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002060008201518160000155602082015181600101559050508b8d73ffffffffffffffffffffffffffffffffffffffff167fb7070c3c377d2fb697e5ddc72b0283eb751116d682ff1cdb579eab77bcc4013b8c8e604051610c90929190611d31565b60405180910390a36001600a60008c815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610d5a576040517f3121268600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060048190555050565b83836000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610e245782826040517f6831488c000000000000000000000000000000000000000000000000000000008152600401610e1b9291906119e5565b60405180910390fd5b610e2c6115b5565b868685600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610e6f9190611826565b602060405180830381865afa158015610e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb091906119a9565b9050808303610eeb576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a11610f25576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89600760008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d8152602001908152602001600020600001819055508a8c73ffffffffffffffffffffffffffffffffffffffff167fb7070c3c377d2fb697e5ddc72b0283eb751116d682ff1cdb579eab77bcc4013b8b8d604051610fc6929190611d31565b60405180910390a35050505050610fdb611604565b50505050505050565b82826000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060008160000151116110a45782826040517f6831488c00000000000000000000000000000000000000000000000000000000815260040161109b9291906119e5565b60405180910390fd5b6110ac6115b5565b6000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060035481600001516111319190611d5a565b34101561117d57868682600001516040517f7c93456500000000000000000000000000000000000000000000000000000000815260040161117493929190611d8e565b60405180910390fd5b34600860008360200151815260200190815260200160002060008282546111a49190611d5a565b92505081905550600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600080820160009055600182016000905550508673ffffffffffffffffffffffffffffffffffffffff16638894c4468787336040518463ffffffff1660e01b815260040161124b93929190611dc5565b600060405180830381600087803b15801561126557600080fd5b505af1158015611279573d6000803e3d6000fd5b50505050858773ffffffffffffffffffffffffffffffffffffffff167f8c912d39752dc1f52744615b409bb9cd946102bab9b0e6316d0a6ea0c3a1372a8784600001516040516112ca929190611d31565b60405180910390a3506112db611604565b505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361136a576040517f3121268600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060038190555050565b60003373ffffffffffffffffffffffffffffffffffffffff1660045460405161139c90611cda565b60006040518083038185875af1925050503d80600081146113d9576040519150601f19603f3d011682016040523d82523d6000602084013e6113de565b606091505b5050905080611419576040517fbf961a2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16633bb3a24d846040518263ffffffff1660e01b81526004016114549190611826565b600060405180830381865afa158015611471573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061149a9190611f33565b90508473ffffffffffffffffffffffffffffffffffffffff1663263c786884336040518363ffffffff1660e01b81526004016114d7929190611f7c565b600060405180830381600087803b1580156114f157600080fd5b505af1158015611505573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663da86f4a9826040518263ffffffff1660e01b81526004016115429190611ffa565b600060405180830381600087803b15801561155c57600080fd5b505af1158015611570573d6000803e3d6000fd5b50505050827fedfa780d7781a8b1783d9fd71ece3fafd0470cbdf1276685916e081d3be6223f86866040516115a692919061201c565b60405180910390a25050505050565b6002600054036115fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f190612091565b60405180910390fd5b6002600081905550565b6001600081905550565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116678261163c565b9050919050565b6116778161165c565b811461168257600080fd5b50565b6000813590506116948161166e565b92915050565b6000819050919050565b6116ad8161169a565b81146116b857600080fd5b50565b6000813590506116ca816116a4565b92915050565b6000806000606084860312156116e9576116e8611632565b5b60006116f786828701611685565b9350506020611708868287016116bb565b9250506040611719868287016116bb565b9150509250925092565b600080fd5b60008190508260206002028201111561174457611743611723565b5b92915050565b60008190508260406002028201111561176657611765611723565b5b92915050565b6000806000806000610140868803121561178957611788611632565b5b600061179788828901611728565b95505060406117a88882890161174a565b94505060c06117b988828901611728565b9350506101006117cb888289016116bb565b9250506101206117dd888289016116bb565b9150509295509295909350565b600060208284031215611800576117ff611632565b5b600061180e848285016116bb565b91505092915050565b6118208161169a565b82525050565b600060208201905061183b6000830184611817565b92915050565b6000806040838503121561185857611857611632565b5b600061186685828601611685565b9250506020611877858286016116bb565b9150509250929050565b61188a8161169a565b82525050565b6040820160008201516118a66000850182611881565b5060208201516118b96020850182611881565b50505050565b60006040820190506118d46000830184611890565b92915050565b600080600080608085870312156118f4576118f3611632565b5b600061190287828801611685565b9450506020611913878288016116bb565b9350506040611924878288016116bb565b9250506060611935878288016116bb565b91505092959194509250565b60008060006060848603121561195a57611959611632565b5b600061196886828701611685565b935050602061197986828701611685565b925050604061198a868287016116bb565b9150509250925092565b6000815190506119a3816116a4565b92915050565b6000602082840312156119bf576119be611632565b5b60006119cd84828501611994565b91505092915050565b6119df8161165c565b82525050565b60006040820190506119fa60008301856119d6565b611a076020830184611817565b9392505050565b82818337505050565b611a2360408383611a0e565b5050565b600060029050919050565b600081905092915050565b6000819050919050565b611a5360408383611a0e565b5050565b6000611a638383611a47565b60408301905092915050565b600082905092915050565b6000604082019050919050565b611a9081611a27565b611a9a8184611a32565b9250611aa582611a3d565b8060005b83811015611ade57611abb8284611a6f565b611ac58782611a57565b9650611ad083611a7a565b925050600181019050611aa9565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b6000611b128383611881565b60208301905092915050565b6000602082019050919050565b611b3481611ae6565b611b3e8184611af1565b9250611b4982611afc565b8060005b83811015611b7a578151611b618782611b06565b9650611b6c83611b1e565b925050600181019050611b4d565b505050505050565b600061014082019050611b986000830187611a17565b611ba56040830186611a87565b611bb260c0830185611a17565b611bc0610100830184611b2b565b95945050505050565b600081519050919050565b600081905092915050565b60005b83811015611bfd578082015181840152602081019050611be2565b60008484015250505050565b6000611c1482611bc9565b611c1e8185611bd4565b9350611c2e818560208601611bdf565b80840191505092915050565b6000611c468284611c09565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c8b8261169a565b9150611c968361169a565b9250828203905081811115611cae57611cad611c51565b5b92915050565b50565b6000611cc4600083611bd4565b9150611ccf82611cb4565b600082019050919050565b6000611ce582611cb7565b9150819050919050565b600081519050611cfe8161166e565b92915050565b600060208284031215611d1a57611d19611632565b5b6000611d2884828501611cef565b91505092915050565b6000604082019050611d466000830185611817565b611d536020830184611817565b9392505050565b6000611d658261169a565b9150611d708361169a565b9250828201905080821115611d8857611d87611c51565b5b92915050565b6000606082019050611da360008301866119d6565b611db06020830185611817565b611dbd6040830184611817565b949350505050565b6000606082019050611dda6000830186611817565b611de76020830185611817565b611df460408301846119d6565b949350505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e4f82611e06565b810181811067ffffffffffffffff82111715611e6e57611e6d611e17565b5b80604052505050565b6000611e81611628565b9050611e8d8282611e46565b919050565b600067ffffffffffffffff821115611ead57611eac611e17565b5b611eb682611e06565b9050602081019050919050565b6000611ed6611ed184611e92565b611e77565b905082815260208101848484011115611ef257611ef1611e01565b5b611efd848285611bdf565b509392505050565b600082601f830112611f1a57611f19611dfc565b5b8151611f2a848260208601611ec3565b91505092915050565b600060208284031215611f4957611f48611632565b5b600082015167ffffffffffffffff811115611f6757611f66611637565b5b611f7384828501611f05565b91505092915050565b6000604082019050611f916000830185611817565b611f9e60208301846119d6565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000611fcc82611fa5565b611fd68185611fb0565b9350611fe6818560208601611bdf565b611fef81611e06565b840191505092915050565b600060208201905081810360008301526120148184611fc1565b905092915050565b600060408201905061203160008301856119d6565b61203e60208301846119d6565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061207b601f83611fb0565b915061208682612045565b602082019050919050565b600060208201905081810360008301526120aa8161206e565b905091905056fea2646970667358221220e159bae3492d2a1f26a82c09e61405328af87bbbfaa54ee10b020886343b87dd64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x22C1 CODESIZE SUB DUP1 PUSH3 0x22C1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x46 SWAP2 SWAP1 PUSH3 0x183 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1CA JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14B DUP3 PUSH3 0x11E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x15D DUP2 PUSH3 0x13E JUMP JUMPDEST DUP2 EQ PUSH3 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x17D DUP2 PUSH3 0x152 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x19D JUMPI PUSH3 0x19C PUSH3 0x119 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1AD DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x1C0 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x20E7 DUP1 PUSH3 0x1DA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBCB143EF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBCB143EF EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xC88B7C8E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD9964757 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF6B45C46 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xFA7DA19D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xFC5A8444 EQ PUSH2 0x256 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x4B3320E0 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x6BE4A002 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x81B1FC7A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x88700D1C EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xB7D86225 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST STOP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 SUB PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x3F1 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP10 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB407ECD2B3B64AE3CF35D828F7155FC60EDD9911030438178310F6498BB0328F DUP12 PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCAD2AE0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x588 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xF5C9D69E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x61C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4D8FA8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD DUP4 PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x721 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x763 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF961A2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x160E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x3121268600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP4 DUP4 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x997 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A5568D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1B SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 SUB PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB7C01E1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7809252 DUP15 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x4BE3A2C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP12 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7070C3C377D2FB697E5DDC72B0283EB751116D682FF1CDB579EAB77BCC4013B DUP13 DUP15 PUSH1 0x40 MLOAD PUSH2 0xC90 SWAP3 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3121268600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP4 DUP4 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xE24 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1B SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2C PUSH2 0x15B5 JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6F SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 SUB PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0xF25 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH1 0x7 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP11 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7070C3C377D2FB697E5DDC72B0283EB751116D682FF1CDB579EAB77BCC4013B DUP12 DUP14 PUSH1 0x40 MLOAD PUSH2 0xFC6 SWAP3 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0xFDB PUSH2 0x1604 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x10A4 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10AC PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x117D JUMPI DUP7 DUP7 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x7C93456500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11A4 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8894C446 DUP8 DUP8 CALLER PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C912D39752DC1F52744615B409BB9CD946102BAB9B0E6316D0A6EA0C3A1372A DUP8 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x12CA SWAP3 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x12DB PUSH2 0x1604 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3121268600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x139C SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1419 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF961A2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BB3A24D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x149A SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x263C7868 DUP5 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D7 SWAP3 SWAP2 SWAP1 PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA86F4A9 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1542 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x155C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1570 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH32 0xEDFA780D7781A8B1783D9FD71ECE3FAFD0470CBDF1276685916E081D3BE6223F DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x15A6 SWAP3 SWAP2 SWAP1 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x15FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F1 SWAP1 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1667 DUP3 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1677 DUP2 PUSH2 0x165C JUMP JUMPDEST DUP2 EQ PUSH2 0x1682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1694 DUP2 PUSH2 0x166E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x169A JUMP JUMPDEST DUP2 EQ PUSH2 0x16B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CA DUP2 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16E9 JUMPI PUSH2 0x16E8 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F7 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1708 DUP7 DUP3 DUP8 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1719 DUP7 DUP3 DUP8 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x40 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x1766 JUMPI PUSH2 0x1765 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x140 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1789 JUMPI PUSH2 0x1788 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1797 DUP9 DUP3 DUP10 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x17A8 DUP9 DUP3 DUP10 ADD PUSH2 0x174A JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x17B9 DUP9 DUP3 DUP10 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH2 0x17CB DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH2 0x17DD DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17FF PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180E DUP5 DUP3 DUP6 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x169A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1858 JUMPI PUSH2 0x1857 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1866 DUP6 DUP3 DUP7 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1877 DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x188A DUP2 PUSH2 0x169A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x18A6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1881 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x18B9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1881 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18F4 JUMPI PUSH2 0x18F3 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1902 DUP8 DUP3 DUP9 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1913 DUP8 DUP3 DUP9 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1924 DUP8 DUP3 DUP9 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1935 DUP8 DUP3 DUP9 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1968 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1979 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x198A DUP7 DUP3 DUP8 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19A3 DUP2 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CD DUP5 DUP3 DUP6 ADD PUSH2 0x1994 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19DF DUP2 PUSH2 0x165C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19FA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x1A07 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH2 0x1A23 PUSH1 0x40 DUP4 DUP4 PUSH2 0x1A0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A53 PUSH1 0x40 DUP4 DUP4 PUSH2 0x1A0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 DUP4 DUP4 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A90 DUP2 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A9A DUP2 DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP3 POP PUSH2 0x1AA5 DUP3 PUSH2 0x1A3D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ABB DUP3 DUP5 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1AC5 DUP8 DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP7 POP PUSH2 0x1AD0 DUP4 PUSH2 0x1A7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B12 DUP4 DUP4 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B34 DUP2 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1B3E DUP2 DUP5 PUSH2 0x1AF1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1B49 DUP3 PUSH2 0x1AFC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B7A JUMPI DUP2 MLOAD PUSH2 0x1B61 DUP8 DUP3 PUSH2 0x1B06 JUMP JUMPDEST SWAP7 POP PUSH2 0x1B6C DUP4 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B4D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x1B98 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1BA5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A87 JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1BC0 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C14 DUP3 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x1C1E DUP2 DUP6 PUSH2 0x1BD4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C46 DUP3 DUP5 PUSH2 0x1C09 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C8B DUP3 PUSH2 0x169A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C96 DUP4 PUSH2 0x169A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC4 PUSH1 0x0 DUP4 PUSH2 0x1BD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCF DUP3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE5 DUP3 PUSH2 0x1CB7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CFE DUP2 PUSH2 0x166E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1A JUMPI PUSH2 0x1D19 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D28 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D46 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1D53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D65 DUP3 PUSH2 0x169A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D70 DUP4 PUSH2 0x169A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D88 JUMPI PUSH2 0x1D87 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DA3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x1DB0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1DBD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DDA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1DE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E4F DUP3 PUSH2 0x1E06 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E81 PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8D DUP3 DUP3 PUSH2 0x1E46 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST PUSH2 0x1EB6 DUP3 PUSH2 0x1E06 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED6 PUSH2 0x1ED1 DUP5 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x1E77 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH2 0x1EFD DUP5 DUP3 DUP6 PUSH2 0x1BDF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F1A JUMPI PUSH2 0x1F19 PUSH2 0x1DFC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1F2A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F67 JUMPI PUSH2 0x1F66 PUSH2 0x1637 JUMP JUMPDEST JUMPDEST PUSH2 0x1F73 DUP5 DUP3 DUP6 ADD PUSH2 0x1F05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F91 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1F9E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCC DUP3 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x1FD6 DUP2 DUP6 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FE6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1FEF DUP2 PUSH2 0x1E06 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2014 DUP2 DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2031 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x203E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207B PUSH1 0x1F DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2086 DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20AA DUP2 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 MSIZE 0xBA 0xE3 0x49 0x2D 0x2A 0x1F 0x26 0xA8 0x2C MULMOD 0xE6 EQ SDIV ORIGIN DUP11 0xF8 PUSH28 0xBBFAA54EE10B020886343B87DD64736F6C6343000811003300000000 ","sourceMap":"403:6898:18:-:0;;;1653:1;1631:23;;1680:1;1660:21;;1711:1;1687:25;;2000:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;2081:7:18;2065:6;;:24;;;;;;;;;;;;;;;;;;2110:9;2099:8;;:20;;;;;;;;;;;;;;;;;;2141:10;2129:9;;:22;;;;;;;;;;;;;;;;;;2000:158;;403:6898;;88:117:22;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;403:6898:18:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_nonReentrantAfter_52":{"entryPoint":5636,"id":52,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_44":{"entryPoint":5557,"id":44,"parameterSlots":0,"returnSlots":0},"@buyItem_3583":{"entryPoint":4068,"id":3583,"parameterSlots":3,"returnSlots":0},"@cancelListing_3507":{"entryPoint":626,"id":3507,"parameterSlots":3,"returnSlots":0},"@convertToERC721_3865":{"entryPoint":4980,"id":3865,"parameterSlots":3,"returnSlots":0},"@getListing_3882":{"entryPoint":1990,"id":3882,"parameterSlots":2,"returnSlots":1},"@getProceeds_3894":{"entryPoint":1961,"id":3894,"parameterSlots":1,"returnSlots":1},"@listItem_3474":{"entryPoint":2262,"id":3474,"parameterSlots":4,"returnSlots":0},"@setBuyerFee_3785":{"entryPoint":4835,"id":3785,"parameterSlots":1,"returnSlots":0},"@setConversionFee_3804":{"entryPoint":3283,"id":3804,"parameterSlots":1,"returnSlots":0},"@setCreationFee_3766":{"entryPoint":2117,"id":3766,"parameterSlots":1,"returnSlots":0},"@updateListing_3630":{"entryPoint":3428,"id":3630,"parameterSlots":4,"returnSlots":0},"@withdrawProceeds_3747":{"entryPoint":1200,"id":3747,"parameterSlots":5,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":7875,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":7407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr":{"entryPoint":5962,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$2_calldata_ptr":{"entryPoint":5928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":7941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":7428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6465,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6209,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":5840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256":{"entryPoint":6362,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptrt_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptrt_uint256t_uint256":{"entryPoint":5996,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":7987,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":6743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6614,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_to_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack":{"entryPoint":6791,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":6727,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack":{"entryPoint":6679,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack":{"entryPoint":6955,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7351,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":8302,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Listing_$3210_memory_ptr_to_t_struct$_Listing_$3210_memory_ptr_fromStack":{"entryPoint":6288,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6273,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6167,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7386,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":8220,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6629,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7566,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$2_calldata_ptr_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_t_array$_t_uint256_$2_calldata_ptr_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed":{"entryPoint":7042,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8337,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Listing_$3210_memory_ptr__to_t_struct$_Listing_$3210_memory_ptr__fromStack_reversed":{"entryPoint":6335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":8060,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7473,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":7621,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":7799,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5672,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":7826,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr":{"entryPoint":6717,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":6908,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr":{"entryPoint":6695,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":6886,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7113,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8101,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr":{"entryPoint":6778,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":6942,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack":{"entryPoint":6706,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack":{"entryPoint":6897,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7124,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8112,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_t_array$_t_uint256_$2_calldata_ptr":{"entryPoint":6767,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7514,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7296,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5724,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5692,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5786,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6670,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7135,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":7750,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7249,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7703,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7676,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5923,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7681,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5687,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5682,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7686,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":7348,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":8261,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5742,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5796,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22787:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"379:81:22","statements":[{"nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:22"},"nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nodeType":"YulBlock","src":"511:51:22","statements":[{"nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:22"},"nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nodeType":"YulBlock","src":"611:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:22"},"nodeType":"YulFunctionCall","src":"670:12:22"},"nodeType":"YulExpressionStatement","src":"670:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:22"},"nodeType":"YulFunctionCall","src":"641:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:22"},"nodeType":"YulFunctionCall","src":"631:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:22"},"nodeType":"YulFunctionCall","src":"624:43:22"},"nodeType":"YulIf","src":"621:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:22","type":""}],"src":"568:122:22"},{"body":{"nodeType":"YulBlock","src":"748:87:22","statements":[{"nodeType":"YulAssignment","src":"758:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:22"},"nodeType":"YulFunctionCall","src":"767:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:22"},"nodeType":"YulFunctionCall","src":"796:33:22"},"nodeType":"YulExpressionStatement","src":"796:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:22","type":""}],"src":"696:139:22"},{"body":{"nodeType":"YulBlock","src":"886:32:22","statements":[{"nodeType":"YulAssignment","src":"896:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:22","type":""}],"src":"841:77:22"},{"body":{"nodeType":"YulBlock","src":"967:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:22"},"nodeType":"YulFunctionCall","src":"1026:12:22"},"nodeType":"YulExpressionStatement","src":"1026:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:22"},"nodeType":"YulFunctionCall","src":"997:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:22"},"nodeType":"YulFunctionCall","src":"987:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:22"},"nodeType":"YulFunctionCall","src":"980:43:22"},"nodeType":"YulIf","src":"977:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:22","type":""}],"src":"924:122:22"},{"body":{"nodeType":"YulBlock","src":"1104:87:22","statements":[{"nodeType":"YulAssignment","src":"1114:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:22"},"nodeType":"YulFunctionCall","src":"1123:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:22"},"nodeType":"YulFunctionCall","src":"1152:33:22"},"nodeType":"YulExpressionStatement","src":"1152:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:22","type":""}],"src":"1052:139:22"},{"body":{"nodeType":"YulBlock","src":"1297:519:22","statements":[{"body":{"nodeType":"YulBlock","src":"1343:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1345:77:22"},"nodeType":"YulFunctionCall","src":"1345:79:22"},"nodeType":"YulExpressionStatement","src":"1345:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1318:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1327:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1314:3:22"},"nodeType":"YulFunctionCall","src":"1314:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1339:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1310:3:22"},"nodeType":"YulFunctionCall","src":"1310:32:22"},"nodeType":"YulIf","src":"1307:119:22"},{"nodeType":"YulBlock","src":"1436:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1465:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1455:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1480:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1515:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1526:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1511:3:22"},"nodeType":"YulFunctionCall","src":"1511:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1535:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1490:20:22"},"nodeType":"YulFunctionCall","src":"1490:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1480:6:22"}]}]},{"nodeType":"YulBlock","src":"1563:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1578:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1592:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1582:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1608:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1654:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:22"},"nodeType":"YulFunctionCall","src":"1639:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1663:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1618:20:22"},"nodeType":"YulFunctionCall","src":"1618:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1608:6:22"}]}]},{"nodeType":"YulBlock","src":"1691:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1706:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1720:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1710:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1736:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1771:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1782:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1767:3:22"},"nodeType":"YulFunctionCall","src":"1767:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1791:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1746:20:22"},"nodeType":"YulFunctionCall","src":"1746:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1736:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1251:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1262:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1274:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1282:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1290:6:22","type":""}],"src":"1197:619:22"},{"body":{"nodeType":"YulBlock","src":"1911:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1928:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1931:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1921:6:22"},"nodeType":"YulFunctionCall","src":"1921:12:22"},"nodeType":"YulExpressionStatement","src":"1921:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1822:117:22"},{"body":{"nodeType":"YulBlock","src":"2043:169:22","statements":[{"nodeType":"YulAssignment","src":"2053:18:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"2065:6:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2053:8:22"}]},{"body":{"nodeType":"YulBlock","src":"2123:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2125:77:22"},"nodeType":"YulFunctionCall","src":"2125:79:22"},"nodeType":"YulExpressionStatement","src":"2125:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2090:8:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2104:4:22","type":"","value":"0x02"},{"kind":"number","nodeType":"YulLiteral","src":"2110:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2100:3:22"},"nodeType":"YulFunctionCall","src":"2100:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2086:3:22"},"nodeType":"YulFunctionCall","src":"2086:30:22"},{"name":"end","nodeType":"YulIdentifier","src":"2118:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2083:2:22"},"nodeType":"YulFunctionCall","src":"2083:39:22"},"nodeType":"YulIf","src":"2080:126:22"}]},"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2018:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2026:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2034:8:22","type":""}],"src":"1963:249:22"},{"body":{"nodeType":"YulBlock","src":"2344:169:22","statements":[{"nodeType":"YulAssignment","src":"2354:18:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"2366:6:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2354:8:22"}]},{"body":{"nodeType":"YulBlock","src":"2424:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2426:77:22"},"nodeType":"YulFunctionCall","src":"2426:79:22"},"nodeType":"YulExpressionStatement","src":"2426:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2391:8:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2405:4:22","type":"","value":"0x02"},{"kind":"number","nodeType":"YulLiteral","src":"2411:4:22","type":"","value":"0x40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2401:3:22"},"nodeType":"YulFunctionCall","src":"2401:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2387:3:22"},"nodeType":"YulFunctionCall","src":"2387:30:22"},{"name":"end","nodeType":"YulIdentifier","src":"2419:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2384:2:22"},"nodeType":"YulFunctionCall","src":"2384:39:22"},"nodeType":"YulIf","src":"2381:126:22"}]},"name":"abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2319:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2327:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2335:8:22","type":""}],"src":"2239:274:22"},{"body":{"nodeType":"YulBlock","src":"2753:879:22","statements":[{"body":{"nodeType":"YulBlock","src":"2800:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2802:77:22"},"nodeType":"YulFunctionCall","src":"2802:79:22"},"nodeType":"YulExpressionStatement","src":"2802:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2774:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2783:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2770:3:22"},"nodeType":"YulFunctionCall","src":"2770:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2795:3:22","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2766:3:22"},"nodeType":"YulFunctionCall","src":"2766:33:22"},"nodeType":"YulIf","src":"2763:120:22"},{"nodeType":"YulBlock","src":"2893:142:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2908:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2922:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2912:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2937:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2997:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3008:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2993:3:22"},"nodeType":"YulFunctionCall","src":"2993:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3017:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"2947:45:22"},"nodeType":"YulFunctionCall","src":"2947:78:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2937:6:22"}]}]},{"nodeType":"YulBlock","src":"3045:168:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3060:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3074:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3064:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3090:113:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3175:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3186:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3171:3:22"},"nodeType":"YulFunctionCall","src":"3171:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3195:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulIdentifier","src":"3100:70:22"},"nodeType":"YulFunctionCall","src":"3100:103:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3090:6:22"}]}]},{"nodeType":"YulBlock","src":"3223:144:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3238:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3252:3:22","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3242:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3269:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3329:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3340:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3325:3:22"},"nodeType":"YulFunctionCall","src":"3325:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3349:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"3279:45:22"},"nodeType":"YulFunctionCall","src":"3279:78:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3269:6:22"}]}]},{"nodeType":"YulBlock","src":"3377:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3392:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3406:3:22","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3396:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3423:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3458:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3469:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3454:3:22"},"nodeType":"YulFunctionCall","src":"3454:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3478:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3433:20:22"},"nodeType":"YulFunctionCall","src":"3433:53:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3423:6:22"}]}]},{"nodeType":"YulBlock","src":"3506:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3521:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3535:3:22","type":"","value":"288"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3525:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3552:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3598:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3583:3:22"},"nodeType":"YulFunctionCall","src":"3583:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3607:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3562:20:22"},"nodeType":"YulFunctionCall","src":"3562:53:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3552:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptrt_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2691:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2702:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2714:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2722:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2730:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2738:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2746:6:22","type":""}],"src":"2519:1113:22"},{"body":{"nodeType":"YulBlock","src":"3704:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"3750:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3752:77:22"},"nodeType":"YulFunctionCall","src":"3752:79:22"},"nodeType":"YulExpressionStatement","src":"3752:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3725:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3734:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3721:3:22"},"nodeType":"YulFunctionCall","src":"3721:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3746:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3717:3:22"},"nodeType":"YulFunctionCall","src":"3717:32:22"},"nodeType":"YulIf","src":"3714:119:22"},{"nodeType":"YulBlock","src":"3843:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3858:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3872:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3862:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3887:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3922:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3933:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3918:3:22"},"nodeType":"YulFunctionCall","src":"3918:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3942:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3897:20:22"},"nodeType":"YulFunctionCall","src":"3897:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3887:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3674:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3685:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3697:6:22","type":""}],"src":"3638:329:22"},{"body":{"nodeType":"YulBlock","src":"4038:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4055:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4078:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4060:17:22"},"nodeType":"YulFunctionCall","src":"4060:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4048:6:22"},"nodeType":"YulFunctionCall","src":"4048:37:22"},"nodeType":"YulExpressionStatement","src":"4048:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4026:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4033:3:22","type":""}],"src":"3973:118:22"},{"body":{"nodeType":"YulBlock","src":"4195:124:22","statements":[{"nodeType":"YulAssignment","src":"4205:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4217:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4228:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4213:3:22"},"nodeType":"YulFunctionCall","src":"4213:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4205:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4285:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4298:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4309:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4294:3:22"},"nodeType":"YulFunctionCall","src":"4294:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4241:43:22"},"nodeType":"YulFunctionCall","src":"4241:71:22"},"nodeType":"YulExpressionStatement","src":"4241:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4167:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4179:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4190:4:22","type":""}],"src":"4097:222:22"},{"body":{"nodeType":"YulBlock","src":"4408:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"4454:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4456:77:22"},"nodeType":"YulFunctionCall","src":"4456:79:22"},"nodeType":"YulExpressionStatement","src":"4456:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4429:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4438:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4425:3:22"},"nodeType":"YulFunctionCall","src":"4425:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4450:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4421:3:22"},"nodeType":"YulFunctionCall","src":"4421:32:22"},"nodeType":"YulIf","src":"4418:119:22"},{"nodeType":"YulBlock","src":"4547:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4562:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4576:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4566:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4591:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4626:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4637:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:22"},"nodeType":"YulFunctionCall","src":"4622:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4646:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4601:20:22"},"nodeType":"YulFunctionCall","src":"4601:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4591:6:22"}]}]},{"nodeType":"YulBlock","src":"4674:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4689:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4703:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4693:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4719:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4754:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4765:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4750:3:22"},"nodeType":"YulFunctionCall","src":"4750:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4774:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4729:20:22"},"nodeType":"YulFunctionCall","src":"4729:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4719:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4370:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4381:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4393:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4401:6:22","type":""}],"src":"4325:474:22"},{"body":{"nodeType":"YulBlock","src":"4860:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4877:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4900:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4882:17:22"},"nodeType":"YulFunctionCall","src":"4882:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4870:6:22"},"nodeType":"YulFunctionCall","src":"4870:37:22"},"nodeType":"YulExpressionStatement","src":"4870:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4848:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4855:3:22","type":""}],"src":"4805:108:22"},{"body":{"nodeType":"YulBlock","src":"5105:394:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5115:26:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5131:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5136:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5127:3:22"},"nodeType":"YulFunctionCall","src":"5127:14:22"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5119:4:22","type":""}]},{"nodeType":"YulBlock","src":"5151:165:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5187:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5217:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5224:4:22","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5213:3:22"},"nodeType":"YulFunctionCall","src":"5213:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5207:5:22"},"nodeType":"YulFunctionCall","src":"5207:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5191:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5277:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5295:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5300:4:22","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5291:3:22"},"nodeType":"YulFunctionCall","src":"5291:14:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5243:33:22"},"nodeType":"YulFunctionCall","src":"5243:63:22"},"nodeType":"YulExpressionStatement","src":"5243:63:22"}]},{"nodeType":"YulBlock","src":"5326:166:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5363:43:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5393:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5400:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5389:3:22"},"nodeType":"YulFunctionCall","src":"5389:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5383:5:22"},"nodeType":"YulFunctionCall","src":"5383:23:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5367:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5453:12:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5471:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5476:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5467:3:22"},"nodeType":"YulFunctionCall","src":"5467:14:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5419:33:22"},"nodeType":"YulFunctionCall","src":"5419:63:22"},"nodeType":"YulExpressionStatement","src":"5419:63:22"}]}]},"name":"abi_encode_t_struct$_Listing_$3210_memory_ptr_to_t_struct$_Listing_$3210_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5092:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5099:3:22","type":""}],"src":"4989:510:22"},{"body":{"nodeType":"YulBlock","src":"5653:174:22","statements":[{"nodeType":"YulAssignment","src":"5663:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5675:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5686:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5671:3:22"},"nodeType":"YulFunctionCall","src":"5671:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5663:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5793:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5806:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5817:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5802:3:22"},"nodeType":"YulFunctionCall","src":"5802:17:22"}],"functionName":{"name":"abi_encode_t_struct$_Listing_$3210_memory_ptr_to_t_struct$_Listing_$3210_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5699:93:22"},"nodeType":"YulFunctionCall","src":"5699:121:22"},"nodeType":"YulExpressionStatement","src":"5699:121:22"}]},"name":"abi_encode_tuple_t_struct$_Listing_$3210_memory_ptr__to_t_struct$_Listing_$3210_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5625:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5637:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5648:4:22","type":""}],"src":"5505:322:22"},{"body":{"nodeType":"YulBlock","src":"5950:648:22","statements":[{"body":{"nodeType":"YulBlock","src":"5997:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5999:77:22"},"nodeType":"YulFunctionCall","src":"5999:79:22"},"nodeType":"YulExpressionStatement","src":"5999:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5971:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5980:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5967:3:22"},"nodeType":"YulFunctionCall","src":"5967:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5992:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5963:3:22"},"nodeType":"YulFunctionCall","src":"5963:33:22"},"nodeType":"YulIf","src":"5960:120:22"},{"nodeType":"YulBlock","src":"6090:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6105:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6119:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6109:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6134:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6169:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6180:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6165:3:22"},"nodeType":"YulFunctionCall","src":"6165:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6189:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6144:20:22"},"nodeType":"YulFunctionCall","src":"6144:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6134:6:22"}]}]},{"nodeType":"YulBlock","src":"6217:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6232:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6246:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6236:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6262:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6297:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6308:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6293:3:22"},"nodeType":"YulFunctionCall","src":"6293:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6317:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6272:20:22"},"nodeType":"YulFunctionCall","src":"6272:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6262:6:22"}]}]},{"nodeType":"YulBlock","src":"6345:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6360:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6374:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6364:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6390:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6425:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6436:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6421:3:22"},"nodeType":"YulFunctionCall","src":"6421:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6445:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6400:20:22"},"nodeType":"YulFunctionCall","src":"6400:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6390:6:22"}]}]},{"nodeType":"YulBlock","src":"6473:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6488:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6502:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6492:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6518:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6553:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6564:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6549:3:22"},"nodeType":"YulFunctionCall","src":"6549:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6573:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6528:20:22"},"nodeType":"YulFunctionCall","src":"6528:53:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6518:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5896:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5907:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5919:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5927:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5935:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5943:6:22","type":""}],"src":"5833:765:22"},{"body":{"nodeType":"YulBlock","src":"6704:519:22","statements":[{"body":{"nodeType":"YulBlock","src":"6750:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6752:77:22"},"nodeType":"YulFunctionCall","src":"6752:79:22"},"nodeType":"YulExpressionStatement","src":"6752:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6725:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6734:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6721:3:22"},"nodeType":"YulFunctionCall","src":"6721:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6746:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6717:3:22"},"nodeType":"YulFunctionCall","src":"6717:32:22"},"nodeType":"YulIf","src":"6714:119:22"},{"nodeType":"YulBlock","src":"6843:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6858:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6872:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6862:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6887:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6922:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6933:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6918:3:22"},"nodeType":"YulFunctionCall","src":"6918:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6942:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6897:20:22"},"nodeType":"YulFunctionCall","src":"6897:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6887:6:22"}]}]},{"nodeType":"YulBlock","src":"6970:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6985:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6999:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6989:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7015:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7050:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7061:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7046:3:22"},"nodeType":"YulFunctionCall","src":"7046:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7070:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7025:20:22"},"nodeType":"YulFunctionCall","src":"7025:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7015:6:22"}]}]},{"nodeType":"YulBlock","src":"7098:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7113:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7127:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7117:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7143:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7178:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7189:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7174:3:22"},"nodeType":"YulFunctionCall","src":"7174:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7198:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7153:20:22"},"nodeType":"YulFunctionCall","src":"7153:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7143:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6658:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6669:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6681:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6689:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6697:6:22","type":""}],"src":"6604:619:22"},{"body":{"nodeType":"YulBlock","src":"7292:80:22","statements":[{"nodeType":"YulAssignment","src":"7302:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7317:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7311:5:22"},"nodeType":"YulFunctionCall","src":"7311:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7302:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7360:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7333:26:22"},"nodeType":"YulFunctionCall","src":"7333:33:22"},"nodeType":"YulExpressionStatement","src":"7333:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7270:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"7278:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7286:5:22","type":""}],"src":"7229:143:22"},{"body":{"nodeType":"YulBlock","src":"7455:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"7501:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7503:77:22"},"nodeType":"YulFunctionCall","src":"7503:79:22"},"nodeType":"YulExpressionStatement","src":"7503:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7476:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"7485:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7472:3:22"},"nodeType":"YulFunctionCall","src":"7472:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"7497:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7468:3:22"},"nodeType":"YulFunctionCall","src":"7468:32:22"},"nodeType":"YulIf","src":"7465:119:22"},{"nodeType":"YulBlock","src":"7594:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7609:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7623:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7613:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7638:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7684:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7695:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7680:3:22"},"nodeType":"YulFunctionCall","src":"7680:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7704:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7648:31:22"},"nodeType":"YulFunctionCall","src":"7648:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7638:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7425:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7436:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7448:6:22","type":""}],"src":"7378:351:22"},{"body":{"nodeType":"YulBlock","src":"7800:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7817:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7840:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7822:17:22"},"nodeType":"YulFunctionCall","src":"7822:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7810:6:22"},"nodeType":"YulFunctionCall","src":"7810:37:22"},"nodeType":"YulExpressionStatement","src":"7810:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7788:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7795:3:22","type":""}],"src":"7735:118:22"},{"body":{"nodeType":"YulBlock","src":"7985:206:22","statements":[{"nodeType":"YulAssignment","src":"7995:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8007:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8018:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8003:3:22"},"nodeType":"YulFunctionCall","src":"8003:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7995:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8075:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8088:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8099:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8084:3:22"},"nodeType":"YulFunctionCall","src":"8084:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8031:43:22"},"nodeType":"YulFunctionCall","src":"8031:71:22"},"nodeType":"YulExpressionStatement","src":"8031:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8156:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8169:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8180:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8165:3:22"},"nodeType":"YulFunctionCall","src":"8165:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8112:43:22"},"nodeType":"YulFunctionCall","src":"8112:72:22"},"nodeType":"YulExpressionStatement","src":"8112:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7949:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7961:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7969:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7980:4:22","type":""}],"src":"7859:332:22"},{"body":{"nodeType":"YulBlock","src":"8248:47:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8271:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"8276:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8281:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8258:12:22"},"nodeType":"YulFunctionCall","src":"8258:30:22"},"nodeType":"YulExpressionStatement","src":"8258:30:22"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8230:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8235:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8240:6:22","type":""}],"src":"8197:98:22"},{"body":{"nodeType":"YulBlock","src":"8446:57:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8480:5:22"},{"name":"pos","nodeType":"YulIdentifier","src":"8487:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8492:4:22","type":"","value":"0x40"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8456:23:22"},"nodeType":"YulFunctionCall","src":"8456:41:22"},"nodeType":"YulExpressionStatement","src":"8456:41:22"}]},"name":"abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"8434:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8441:3:22","type":""}],"src":"8333:170:22"},{"body":{"nodeType":"YulBlock","src":"8608:32:22","statements":[{"nodeType":"YulAssignment","src":"8619:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8629:4:22","type":"","value":"0x02"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8619:6:22"}]}]},"name":"array_length_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8591:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8601:6:22","type":""}],"src":"8509:131:22"},{"body":{"nodeType":"YulBlock","src":"8778:34:22","statements":[{"nodeType":"YulAssignment","src":"8788:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"8803:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8788:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8750:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8755:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8766:11:22","type":""}],"src":"8646:166:22"},{"body":{"nodeType":"YulBlock","src":"8915:28:22","statements":[{"nodeType":"YulAssignment","src":"8925:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8933:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8925:4:22"}]}]},"name":"array_dataslot_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8902:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8910:4:22","type":""}],"src":"8818:125:22"},{"body":{"nodeType":"YulBlock","src":"9084:57:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9118:5:22"},{"name":"pos","nodeType":"YulIdentifier","src":"9125:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9130:4:22","type":"","value":"0x40"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"9094:23:22"},"nodeType":"YulFunctionCall","src":"9094:41:22"},"nodeType":"YulExpressionStatement","src":"9094:41:22"}]},"name":"abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"9072:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9079:3:22","type":""}],"src":"8981:160:22"},{"body":{"nodeType":"YulBlock","src":"9275:147:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9367:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"9375:3:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"9285:81:22"},"nodeType":"YulFunctionCall","src":"9285:94:22"},"nodeType":"YulExpressionStatement","src":"9285:94:22"},{"nodeType":"YulAssignment","src":"9388:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9406:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9411:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9402:3:22"},"nodeType":"YulFunctionCall","src":"9402:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9388:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9248:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9256:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9264:10:22","type":""}],"src":"9147:275:22"},{"body":{"nodeType":"YulBlock","src":"9511:28:22","statements":[{"nodeType":"YulAssignment","src":"9521:12:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9530:3:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9521:5:22"}]}]},"name":"calldata_access_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"baseRef","nodeType":"YulTypedName","src":"9488:7:22","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"9497:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9505:5:22","type":""}],"src":"9428:111:22"},{"body":{"nodeType":"YulBlock","src":"9645:38:22","statements":[{"nodeType":"YulAssignment","src":"9655:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9667:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9672:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9663:3:22"},"nodeType":"YulFunctionCall","src":"9663:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9655:4:22"}]}]},"name":"array_nextElement_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9632:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9640:4:22","type":""}],"src":"9545:138:22"},{"body":{"nodeType":"YulBlock","src":"9889:788:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9899:93:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9986:5:22"}],"functionName":{"name":"array_length_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulIdentifier","src":"9913:72:22"},"nodeType":"YulFunctionCall","src":"9913:79:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9903:6:22","type":""}]},{"nodeType":"YulAssignment","src":"10001:114:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10103:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"10108:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10008:94:22"},"nodeType":"YulFunctionCall","src":"10008:107:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10001:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"10124:96:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10214:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulIdentifier","src":"10139:74:22"},"nodeType":"YulFunctionCall","src":"10139:81:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10128:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10229:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10243:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10233:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10319:351:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10333:88:22","value":{"arguments":[{"name":"baseRef","nodeType":"YulIdentifier","src":"10405:7:22"},{"name":"srcPtr","nodeType":"YulIdentifier","src":"10414:6:22"}],"functionName":{"name":"calldata_access_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"10354:50:22"},"nodeType":"YulFunctionCall","src":"10354:67:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10337:13:22","type":""}]},{"nodeType":"YulAssignment","src":"10434:118:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10533:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"10548:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"10441:91:22"},"nodeType":"YulFunctionCall","src":"10441:111:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10434:3:22"}]},{"nodeType":"YulAssignment","src":"10565:95:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10653:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulIdentifier","src":"10575:77:22"},"nodeType":"YulFunctionCall","src":"10575:85:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10565:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10281:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"10284:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10278:2:22"},"nodeType":"YulFunctionCall","src":"10278:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10292:18:22","statements":[{"nodeType":"YulAssignment","src":"10294:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10303:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"10306:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10299:3:22"},"nodeType":"YulFunctionCall","src":"10299:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10294:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"10263:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10265:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10274:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10269:1:22","type":""}]}]},"src":"10259:411:22"}]},"name":"abi_encode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_to_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9876:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9883:3:22","type":""}],"src":"9727:950:22"},{"body":{"nodeType":"YulBlock","src":"10755:32:22","statements":[{"nodeType":"YulAssignment","src":"10766:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10776:4:22","type":"","value":"0x02"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10766:6:22"}]}]},"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10738:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10748:6:22","type":""}],"src":"10683:104:22"},{"body":{"nodeType":"YulBlock","src":"10902:34:22","statements":[{"nodeType":"YulAssignment","src":"10912:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"10927:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10912:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10874:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"10879:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10890:11:22","type":""}],"src":"10793:143:22"},{"body":{"nodeType":"YulBlock","src":"11012:28:22","statements":[{"nodeType":"YulAssignment","src":"11022:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11030:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11022:4:22"}]}]},"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10999:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11007:4:22","type":""}],"src":"10942:98:22"},{"body":{"nodeType":"YulBlock","src":"11126:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11170:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"11178:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11136:33:22"},"nodeType":"YulFunctionCall","src":"11136:46:22"},"nodeType":"YulExpressionStatement","src":"11136:46:22"},{"nodeType":"YulAssignment","src":"11191:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11209:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11214:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11205:3:22"},"nodeType":"YulFunctionCall","src":"11205:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"11191:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"11099:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11107:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"11115:10:22","type":""}],"src":"11046:179:22"},{"body":{"nodeType":"YulBlock","src":"11304:38:22","statements":[{"nodeType":"YulAssignment","src":"11314:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11326:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11331:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11322:3:22"},"nodeType":"YulFunctionCall","src":"11322:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"11314:4:22"}]}]},"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11291:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"11299:4:22","type":""}],"src":"11231:111:22"},{"body":{"nodeType":"YulBlock","src":"11492:582:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11502:66:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11562:5:22"}],"functionName":{"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"11516:45:22"},"nodeType":"YulFunctionCall","src":"11516:52:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11506:6:22","type":""}]},{"nodeType":"YulAssignment","src":"11577:91:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11656:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"11661:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11584:71:22"},"nodeType":"YulFunctionCall","src":"11584:84:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11577:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"11677:69:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11740:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"11692:47:22"},"nodeType":"YulFunctionCall","src":"11692:54:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"11681:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11755:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11769:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11759:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11845:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11859:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11886:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11880:5:22"},"nodeType":"YulFunctionCall","src":"11880:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11863:13:22","type":""}]},{"nodeType":"YulAssignment","src":"11906:70:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11957:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"11972:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11913:43:22"},"nodeType":"YulFunctionCall","src":"11913:63:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11906:3:22"}]},{"nodeType":"YulAssignment","src":"11989:68:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12050:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"11999:50:22"},"nodeType":"YulFunctionCall","src":"11999:58:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11989:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11807:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"11810:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11804:2:22"},"nodeType":"YulFunctionCall","src":"11804:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11818:18:22","statements":[{"nodeType":"YulAssignment","src":"11820:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11829:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"11832:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11825:3:22"},"nodeType":"YulFunctionCall","src":"11825:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11820:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"11789:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11791:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11800:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11795:1:22","type":""}]}]},"src":"11785:282:22"}]},"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11479:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11486:3:22","type":""}],"src":"11380:694:22"},{"body":{"nodeType":"YulBlock","src":"12500:611:22","statements":[{"nodeType":"YulAssignment","src":"12510:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12522:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12533:3:22","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12518:3:22"},"nodeType":"YulFunctionCall","src":"12518:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12510:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12639:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12652:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12663:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12648:3:22"},"nodeType":"YulFunctionCall","src":"12648:17:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12547:91:22"},"nodeType":"YulFunctionCall","src":"12547:119:22"},"nodeType":"YulExpressionStatement","src":"12547:119:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12816:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12829:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12840:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12825:3:22"},"nodeType":"YulFunctionCall","src":"12825:18:22"}],"functionName":{"name":"abi_encode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_to_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12676:139:22"},"nodeType":"YulFunctionCall","src":"12676:168:22"},"nodeType":"YulExpressionStatement","src":"12676:168:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12946:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12959:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12970:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12955:3:22"},"nodeType":"YulFunctionCall","src":"12955:19:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12854:91:22"},"nodeType":"YulFunctionCall","src":"12854:121:22"},"nodeType":"YulExpressionStatement","src":"12854:121:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13075:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13088:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13099:3:22","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13084:3:22"},"nodeType":"YulFunctionCall","src":"13084:19:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12985:89:22"},"nodeType":"YulFunctionCall","src":"12985:119:22"},"nodeType":"YulExpressionStatement","src":"12985:119:22"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$2_calldata_ptr_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_t_array$_t_uint256_$2_calldata_ptr_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12448:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12460:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12468:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12476:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12484:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12495:4:22","type":""}],"src":"12080:1031:22"},{"body":{"nodeType":"YulBlock","src":"13175:40:22","statements":[{"nodeType":"YulAssignment","src":"13186:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13202:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13196:5:22"},"nodeType":"YulFunctionCall","src":"13196:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13186:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13158:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13168:6:22","type":""}],"src":"13117:98:22"},{"body":{"nodeType":"YulBlock","src":"13334:34:22","statements":[{"nodeType":"YulAssignment","src":"13344:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"13359:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13344:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13306:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"13311:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13322:11:22","type":""}],"src":"13221:147:22"},{"body":{"nodeType":"YulBlock","src":"13436:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13446:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"13455:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13450:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"13515:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13540:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"13545:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13536:3:22"},"nodeType":"YulFunctionCall","src":"13536:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13559:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"13564:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13555:3:22"},"nodeType":"YulFunctionCall","src":"13555:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13549:5:22"},"nodeType":"YulFunctionCall","src":"13549:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13529:6:22"},"nodeType":"YulFunctionCall","src":"13529:39:22"},"nodeType":"YulExpressionStatement","src":"13529:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13476:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"13479:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13473:2:22"},"nodeType":"YulFunctionCall","src":"13473:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13487:19:22","statements":[{"nodeType":"YulAssignment","src":"13489:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13498:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"13501:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13494:3:22"},"nodeType":"YulFunctionCall","src":"13494:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13489:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"13469:3:22","statements":[]},"src":"13465:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13598:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"13603:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13594:3:22"},"nodeType":"YulFunctionCall","src":"13594:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"13612:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13587:6:22"},"nodeType":"YulFunctionCall","src":"13587:27:22"},"nodeType":"YulExpressionStatement","src":"13587:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13418:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13423:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"13428:6:22","type":""}],"src":"13374:246:22"},{"body":{"nodeType":"YulBlock","src":"13734:278:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13744:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13790:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13758:31:22"},"nodeType":"YulFunctionCall","src":"13758:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13748:6:22","type":""}]},{"nodeType":"YulAssignment","src":"13805:95:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13888:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"13893:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13812:75:22"},"nodeType":"YulFunctionCall","src":"13812:88:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13805:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13948:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"13955:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13944:3:22"},"nodeType":"YulFunctionCall","src":"13944:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"13962:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"13967:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13909:34:22"},"nodeType":"YulFunctionCall","src":"13909:65:22"},"nodeType":"YulExpressionStatement","src":"13909:65:22"},{"nodeType":"YulAssignment","src":"13983:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13994:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"13999:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13990:3:22"},"nodeType":"YulFunctionCall","src":"13990:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13983:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13715:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13722:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13730:3:22","type":""}],"src":"13626:386:22"},{"body":{"nodeType":"YulBlock","src":"14152:137:22","statements":[{"nodeType":"YulAssignment","src":"14163:100:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14250:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"14259:3:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14170:79:22"},"nodeType":"YulFunctionCall","src":"14170:93:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14163:3:22"}]},{"nodeType":"YulAssignment","src":"14273:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"14280:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14273:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14131:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14137:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14148:3:22","type":""}],"src":"14018:271:22"},{"body":{"nodeType":"YulBlock","src":"14323:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14340:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14343:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14333:6:22"},"nodeType":"YulFunctionCall","src":"14333:88:22"},"nodeType":"YulExpressionStatement","src":"14333:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14437:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14440:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14430:6:22"},"nodeType":"YulFunctionCall","src":"14430:15:22"},"nodeType":"YulExpressionStatement","src":"14430:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14461:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14464:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14454:6:22"},"nodeType":"YulFunctionCall","src":"14454:15:22"},"nodeType":"YulExpressionStatement","src":"14454:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14295:180:22"},{"body":{"nodeType":"YulBlock","src":"14526:149:22","statements":[{"nodeType":"YulAssignment","src":"14536:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14559:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14541:17:22"},"nodeType":"YulFunctionCall","src":"14541:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14536:1:22"}]},{"nodeType":"YulAssignment","src":"14570:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14593:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14575:17:22"},"nodeType":"YulFunctionCall","src":"14575:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14570:1:22"}]},{"nodeType":"YulAssignment","src":"14604:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14616:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"14619:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14612:3:22"},"nodeType":"YulFunctionCall","src":"14612:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14604:4:22"}]},{"body":{"nodeType":"YulBlock","src":"14646:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14648:16:22"},"nodeType":"YulFunctionCall","src":"14648:18:22"},"nodeType":"YulExpressionStatement","src":"14648:18:22"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14637:4:22"},{"name":"x","nodeType":"YulIdentifier","src":"14643:1:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14634:2:22"},"nodeType":"YulFunctionCall","src":"14634:11:22"},"nodeType":"YulIf","src":"14631:37:22"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14512:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"14515:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14521:4:22","type":""}],"src":"14481:194:22"},{"body":{"nodeType":"YulBlock","src":"14787:8:22","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14779:6:22","type":""}],"src":"14681:114:22"},{"body":{"nodeType":"YulBlock","src":"14964:235:22","statements":[{"nodeType":"YulAssignment","src":"14974:90:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15057:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15062:1:22","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14981:75:22"},"nodeType":"YulFunctionCall","src":"14981:83:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14974:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15162:3:22"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"15073:88:22"},"nodeType":"YulFunctionCall","src":"15073:93:22"},"nodeType":"YulExpressionStatement","src":"15073:93:22"},{"nodeType":"YulAssignment","src":"15175:18:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15186:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15191:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15182:3:22"},"nodeType":"YulFunctionCall","src":"15182:11:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15175:3:22"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14952:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14960:3:22","type":""}],"src":"14801:398:22"},{"body":{"nodeType":"YulBlock","src":"15393:191:22","statements":[{"nodeType":"YulAssignment","src":"15404:154:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15554:3:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15411:141:22"},"nodeType":"YulFunctionCall","src":"15411:147:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15404:3:22"}]},{"nodeType":"YulAssignment","src":"15568:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"15575:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15568:3:22"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15380:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15389:3:22","type":""}],"src":"15205:379:22"},{"body":{"nodeType":"YulBlock","src":"15653:80:22","statements":[{"nodeType":"YulAssignment","src":"15663:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15678:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15672:5:22"},"nodeType":"YulFunctionCall","src":"15672:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15663:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15721:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"15694:26:22"},"nodeType":"YulFunctionCall","src":"15694:33:22"},"nodeType":"YulExpressionStatement","src":"15694:33:22"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15631:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"15639:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15647:5:22","type":""}],"src":"15590:143:22"},{"body":{"nodeType":"YulBlock","src":"15816:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"15862:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15864:77:22"},"nodeType":"YulFunctionCall","src":"15864:79:22"},"nodeType":"YulExpressionStatement","src":"15864:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15837:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15846:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15833:3:22"},"nodeType":"YulFunctionCall","src":"15833:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"15858:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15829:3:22"},"nodeType":"YulFunctionCall","src":"15829:32:22"},"nodeType":"YulIf","src":"15826:119:22"},{"nodeType":"YulBlock","src":"15955:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"15970:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"15984:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15974:6:22","type":""}]},{"nodeType":"YulAssignment","src":"15999:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16045:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"16056:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16041:3:22"},"nodeType":"YulFunctionCall","src":"16041:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16065:7:22"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"16009:31:22"},"nodeType":"YulFunctionCall","src":"16009:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15999:6:22"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15786:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15797:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15809:6:22","type":""}],"src":"15739:351:22"},{"body":{"nodeType":"YulBlock","src":"16222:206:22","statements":[{"nodeType":"YulAssignment","src":"16232:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16244:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16255:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16240:3:22"},"nodeType":"YulFunctionCall","src":"16240:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16232:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16312:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16325:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16336:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16321:3:22"},"nodeType":"YulFunctionCall","src":"16321:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16268:43:22"},"nodeType":"YulFunctionCall","src":"16268:71:22"},"nodeType":"YulExpressionStatement","src":"16268:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16393:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16406:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16417:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16402:3:22"},"nodeType":"YulFunctionCall","src":"16402:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16349:43:22"},"nodeType":"YulFunctionCall","src":"16349:72:22"},"nodeType":"YulExpressionStatement","src":"16349:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16186:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16198:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16206:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16217:4:22","type":""}],"src":"16096:332:22"},{"body":{"nodeType":"YulBlock","src":"16478:147:22","statements":[{"nodeType":"YulAssignment","src":"16488:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16511:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16493:17:22"},"nodeType":"YulFunctionCall","src":"16493:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16488:1:22"}]},{"nodeType":"YulAssignment","src":"16522:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16545:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16527:17:22"},"nodeType":"YulFunctionCall","src":"16527:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16522:1:22"}]},{"nodeType":"YulAssignment","src":"16556:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16567:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"16570:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16563:3:22"},"nodeType":"YulFunctionCall","src":"16563:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16556:3:22"}]},{"body":{"nodeType":"YulBlock","src":"16596:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16598:16:22"},"nodeType":"YulFunctionCall","src":"16598:18:22"},"nodeType":"YulExpressionStatement","src":"16598:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16588:1:22"},{"name":"sum","nodeType":"YulIdentifier","src":"16591:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16585:2:22"},"nodeType":"YulFunctionCall","src":"16585:10:22"},"nodeType":"YulIf","src":"16582:36:22"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16465:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"16468:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16474:3:22","type":""}],"src":"16434:191:22"},{"body":{"nodeType":"YulBlock","src":"16785:288:22","statements":[{"nodeType":"YulAssignment","src":"16795:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16807:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16818:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16803:3:22"},"nodeType":"YulFunctionCall","src":"16803:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16795:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16875:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16888:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16899:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16884:3:22"},"nodeType":"YulFunctionCall","src":"16884:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16831:43:22"},"nodeType":"YulFunctionCall","src":"16831:71:22"},"nodeType":"YulExpressionStatement","src":"16831:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16956:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16969:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16980:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16965:3:22"},"nodeType":"YulFunctionCall","src":"16965:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16912:43:22"},"nodeType":"YulFunctionCall","src":"16912:72:22"},"nodeType":"YulExpressionStatement","src":"16912:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17038:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17051:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17062:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17047:3:22"},"nodeType":"YulFunctionCall","src":"17047:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16994:43:22"},"nodeType":"YulFunctionCall","src":"16994:72:22"},"nodeType":"YulExpressionStatement","src":"16994:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16741:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16753:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16761:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16769:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16780:4:22","type":""}],"src":"16631:442:22"},{"body":{"nodeType":"YulBlock","src":"17233:288:22","statements":[{"nodeType":"YulAssignment","src":"17243:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17255:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17266:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17251:3:22"},"nodeType":"YulFunctionCall","src":"17251:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17243:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17323:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17336:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17347:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17332:3:22"},"nodeType":"YulFunctionCall","src":"17332:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17279:43:22"},"nodeType":"YulFunctionCall","src":"17279:71:22"},"nodeType":"YulExpressionStatement","src":"17279:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17404:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17417:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17428:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17413:3:22"},"nodeType":"YulFunctionCall","src":"17413:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17360:43:22"},"nodeType":"YulFunctionCall","src":"17360:72:22"},"nodeType":"YulExpressionStatement","src":"17360:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17486:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17499:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17510:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17495:3:22"},"nodeType":"YulFunctionCall","src":"17495:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17442:43:22"},"nodeType":"YulFunctionCall","src":"17442:72:22"},"nodeType":"YulExpressionStatement","src":"17442:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17189:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17201:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17209:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17217:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17228:4:22","type":""}],"src":"17079:442:22"},{"body":{"nodeType":"YulBlock","src":"17616:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17633:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17636:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17626:6:22"},"nodeType":"YulFunctionCall","src":"17626:12:22"},"nodeType":"YulExpressionStatement","src":"17626:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"17527:117:22"},{"body":{"nodeType":"YulBlock","src":"17739:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17756:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17759:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17749:6:22"},"nodeType":"YulFunctionCall","src":"17749:12:22"},"nodeType":"YulExpressionStatement","src":"17749:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"17650:117:22"},{"body":{"nodeType":"YulBlock","src":"17821:54:22","statements":[{"nodeType":"YulAssignment","src":"17831:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17849:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"17856:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17845:3:22"},"nodeType":"YulFunctionCall","src":"17845:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17865:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17861:3:22"},"nodeType":"YulFunctionCall","src":"17861:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17841:3:22"},"nodeType":"YulFunctionCall","src":"17841:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"17831:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17804:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"17814:6:22","type":""}],"src":"17773:102:22"},{"body":{"nodeType":"YulBlock","src":"17909:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17926:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17929:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17919:6:22"},"nodeType":"YulFunctionCall","src":"17919:88:22"},"nodeType":"YulExpressionStatement","src":"17919:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18023:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18026:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18016:6:22"},"nodeType":"YulFunctionCall","src":"18016:15:22"},"nodeType":"YulExpressionStatement","src":"18016:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18047:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18050:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18040:6:22"},"nodeType":"YulFunctionCall","src":"18040:15:22"},"nodeType":"YulExpressionStatement","src":"18040:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"17881:180:22"},{"body":{"nodeType":"YulBlock","src":"18110:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18120:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18142:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18172:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18150:21:22"},"nodeType":"YulFunctionCall","src":"18150:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18138:3:22"},"nodeType":"YulFunctionCall","src":"18138:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"18124:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"18289:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18291:16:22"},"nodeType":"YulFunctionCall","src":"18291:18:22"},"nodeType":"YulExpressionStatement","src":"18291:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18232:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"18244:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18229:2:22"},"nodeType":"YulFunctionCall","src":"18229:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18268:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"18280:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18265:2:22"},"nodeType":"YulFunctionCall","src":"18265:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18226:2:22"},"nodeType":"YulFunctionCall","src":"18226:62:22"},"nodeType":"YulIf","src":"18223:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18327:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18331:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18320:6:22"},"nodeType":"YulFunctionCall","src":"18320:22:22"},"nodeType":"YulExpressionStatement","src":"18320:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18096:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"18104:4:22","type":""}],"src":"18067:281:22"},{"body":{"nodeType":"YulBlock","src":"18395:88:22","statements":[{"nodeType":"YulAssignment","src":"18405:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"18415:18:22"},"nodeType":"YulFunctionCall","src":"18415:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18405:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18464:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"18472:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"18444:19:22"},"nodeType":"YulFunctionCall","src":"18444:33:22"},"nodeType":"YulExpressionStatement","src":"18444:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"18379:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"18388:6:22","type":""}],"src":"18354:129:22"},{"body":{"nodeType":"YulBlock","src":"18556:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"18661:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18663:16:22"},"nodeType":"YulFunctionCall","src":"18663:18:22"},"nodeType":"YulExpressionStatement","src":"18663:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18633:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18641:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18630:2:22"},"nodeType":"YulFunctionCall","src":"18630:30:22"},"nodeType":"YulIf","src":"18627:56:22"},{"nodeType":"YulAssignment","src":"18693:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18723:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18701:21:22"},"nodeType":"YulFunctionCall","src":"18701:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18693:4:22"}]},{"nodeType":"YulAssignment","src":"18767:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18779:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"18785:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18775:3:22"},"nodeType":"YulFunctionCall","src":"18775:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18767:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18540:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18551:4:22","type":""}],"src":"18489:308:22"},{"body":{"nodeType":"YulBlock","src":"18898:339:22","statements":[{"nodeType":"YulAssignment","src":"18908:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18975:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18933:41:22"},"nodeType":"YulFunctionCall","src":"18933:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18917:15:22"},"nodeType":"YulFunctionCall","src":"18917:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18908:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18999:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"19006:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18992:6:22"},"nodeType":"YulFunctionCall","src":"18992:21:22"},"nodeType":"YulExpressionStatement","src":"18992:21:22"},{"nodeType":"YulVariableDeclaration","src":"19022:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19037:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19044:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19033:3:22"},"nodeType":"YulFunctionCall","src":"19033:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"19026:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"19087:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"19089:77:22"},"nodeType":"YulFunctionCall","src":"19089:79:22"},"nodeType":"YulExpressionStatement","src":"19089:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19068:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"19073:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19064:3:22"},"nodeType":"YulFunctionCall","src":"19064:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"19082:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19061:2:22"},"nodeType":"YulFunctionCall","src":"19061:25:22"},"nodeType":"YulIf","src":"19058:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19214:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"19219:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"19224:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19179:34:22"},"nodeType":"YulFunctionCall","src":"19179:52:22"},"nodeType":"YulExpressionStatement","src":"19179:52:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18871:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"18876:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"18884:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18892:5:22","type":""}],"src":"18803:434:22"},{"body":{"nodeType":"YulBlock","src":"19330:282:22","statements":[{"body":{"nodeType":"YulBlock","src":"19379:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"19381:77:22"},"nodeType":"YulFunctionCall","src":"19381:79:22"},"nodeType":"YulExpressionStatement","src":"19381:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19358:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19366:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19354:3:22"},"nodeType":"YulFunctionCall","src":"19354:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"19373:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19350:3:22"},"nodeType":"YulFunctionCall","src":"19350:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19343:6:22"},"nodeType":"YulFunctionCall","src":"19343:35:22"},"nodeType":"YulIf","src":"19340:122:22"},{"nodeType":"YulVariableDeclaration","src":"19471:27:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19491:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19485:5:22"},"nodeType":"YulFunctionCall","src":"19485:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19475:6:22","type":""}]},{"nodeType":"YulAssignment","src":"19507:99:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19579:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19587:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19575:3:22"},"nodeType":"YulFunctionCall","src":"19575:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"19594:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"19602:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"19516:58:22"},"nodeType":"YulFunctionCall","src":"19516:90:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19507:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19308:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"19316:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19324:5:22","type":""}],"src":"19257:355:22"},{"body":{"nodeType":"YulBlock","src":"19705:437:22","statements":[{"body":{"nodeType":"YulBlock","src":"19751:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19753:77:22"},"nodeType":"YulFunctionCall","src":"19753:79:22"},"nodeType":"YulExpressionStatement","src":"19753:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19726:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"19735:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19722:3:22"},"nodeType":"YulFunctionCall","src":"19722:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"19747:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19718:3:22"},"nodeType":"YulFunctionCall","src":"19718:32:22"},"nodeType":"YulIf","src":"19715:119:22"},{"nodeType":"YulBlock","src":"19844:291:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19859:38:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19883:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19894:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19879:3:22"},"nodeType":"YulFunctionCall","src":"19879:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19873:5:22"},"nodeType":"YulFunctionCall","src":"19873:24:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19863:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"19944:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19946:77:22"},"nodeType":"YulFunctionCall","src":"19946:79:22"},"nodeType":"YulExpressionStatement","src":"19946:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19916:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19924:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19913:2:22"},"nodeType":"YulFunctionCall","src":"19913:30:22"},"nodeType":"YulIf","src":"19910:117:22"},{"nodeType":"YulAssignment","src":"20041:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20097:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"20108:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20093:3:22"},"nodeType":"YulFunctionCall","src":"20093:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20117:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"20051:41:22"},"nodeType":"YulFunctionCall","src":"20051:74:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20041:6:22"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19675:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19686:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19698:6:22","type":""}],"src":"19618:524:22"},{"body":{"nodeType":"YulBlock","src":"20274:206:22","statements":[{"nodeType":"YulAssignment","src":"20284:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20296:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20307:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20292:3:22"},"nodeType":"YulFunctionCall","src":"20292:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20284:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20364:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20377:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20388:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20373:3:22"},"nodeType":"YulFunctionCall","src":"20373:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20320:43:22"},"nodeType":"YulFunctionCall","src":"20320:71:22"},"nodeType":"YulExpressionStatement","src":"20320:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20445:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20458:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20469:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20454:3:22"},"nodeType":"YulFunctionCall","src":"20454:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20401:43:22"},"nodeType":"YulFunctionCall","src":"20401:72:22"},"nodeType":"YulExpressionStatement","src":"20401:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20238:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20250:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20258:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20269:4:22","type":""}],"src":"20148:332:22"},{"body":{"nodeType":"YulBlock","src":"20545:40:22","statements":[{"nodeType":"YulAssignment","src":"20556:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20572:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20566:5:22"},"nodeType":"YulFunctionCall","src":"20566:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20556:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20528:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20538:6:22","type":""}],"src":"20486:99:22"},{"body":{"nodeType":"YulBlock","src":"20687:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20704:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"20709:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20697:6:22"},"nodeType":"YulFunctionCall","src":"20697:19:22"},"nodeType":"YulExpressionStatement","src":"20697:19:22"},{"nodeType":"YulAssignment","src":"20725:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20744:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"20749:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20740:3:22"},"nodeType":"YulFunctionCall","src":"20740:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20725:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20659:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"20664:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20675:11:22","type":""}],"src":"20591:169:22"},{"body":{"nodeType":"YulBlock","src":"20858:285:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20868:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20915:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20882:32:22"},"nodeType":"YulFunctionCall","src":"20882:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20872:6:22","type":""}]},{"nodeType":"YulAssignment","src":"20930:78:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20996:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21001:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20937:58:22"},"nodeType":"YulFunctionCall","src":"20937:71:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20930:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21056:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"21063:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21052:3:22"},"nodeType":"YulFunctionCall","src":"21052:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"21070:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21075:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21017:34:22"},"nodeType":"YulFunctionCall","src":"21017:65:22"},"nodeType":"YulExpressionStatement","src":"21017:65:22"},{"nodeType":"YulAssignment","src":"21091:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21102:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21129:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21107:21:22"},"nodeType":"YulFunctionCall","src":"21107:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21098:3:22"},"nodeType":"YulFunctionCall","src":"21098:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21091:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20839:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20846:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20854:3:22","type":""}],"src":"20766:377:22"},{"body":{"nodeType":"YulBlock","src":"21267:195:22","statements":[{"nodeType":"YulAssignment","src":"21277:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21289:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21300:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21285:3:22"},"nodeType":"YulFunctionCall","src":"21285:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21277:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21324:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21335:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21320:3:22"},"nodeType":"YulFunctionCall","src":"21320:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21343:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"21349:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21339:3:22"},"nodeType":"YulFunctionCall","src":"21339:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21313:6:22"},"nodeType":"YulFunctionCall","src":"21313:47:22"},"nodeType":"YulExpressionStatement","src":"21313:47:22"},{"nodeType":"YulAssignment","src":"21369:86:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21441:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"21450:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21377:63:22"},"nodeType":"YulFunctionCall","src":"21377:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21369:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21239:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21251:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21262:4:22","type":""}],"src":"21149:313:22"},{"body":{"nodeType":"YulBlock","src":"21594:206:22","statements":[{"nodeType":"YulAssignment","src":"21604:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21616:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21627:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21612:3:22"},"nodeType":"YulFunctionCall","src":"21612:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21604:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21684:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21697:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21708:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21693:3:22"},"nodeType":"YulFunctionCall","src":"21693:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21640:43:22"},"nodeType":"YulFunctionCall","src":"21640:71:22"},"nodeType":"YulExpressionStatement","src":"21640:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21765:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21778:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21789:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21774:3:22"},"nodeType":"YulFunctionCall","src":"21774:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21721:43:22"},"nodeType":"YulFunctionCall","src":"21721:72:22"},"nodeType":"YulExpressionStatement","src":"21721:72:22"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21558:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21570:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21578:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21589:4:22","type":""}],"src":"21468:332:22"},{"body":{"nodeType":"YulBlock","src":"21912:75:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21934:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21942:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21930:3:22"},"nodeType":"YulFunctionCall","src":"21930:14:22"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"21946:33:22","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21923:6:22"},"nodeType":"YulFunctionCall","src":"21923:57:22"},"nodeType":"YulExpressionStatement","src":"21923:57:22"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21904:6:22","type":""}],"src":"21806:181:22"},{"body":{"nodeType":"YulBlock","src":"22139:220:22","statements":[{"nodeType":"YulAssignment","src":"22149:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22215:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"22220:2:22","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22156:58:22"},"nodeType":"YulFunctionCall","src":"22156:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22149:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22321:3:22"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"22232:88:22"},"nodeType":"YulFunctionCall","src":"22232:93:22"},"nodeType":"YulExpressionStatement","src":"22232:93:22"},{"nodeType":"YulAssignment","src":"22334:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22345:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"22350:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22341:3:22"},"nodeType":"YulFunctionCall","src":"22341:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22334:3:22"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22127:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22135:3:22","type":""}],"src":"21993:366:22"},{"body":{"nodeType":"YulBlock","src":"22536:248:22","statements":[{"nodeType":"YulAssignment","src":"22546:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22558:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22569:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22554:3:22"},"nodeType":"YulFunctionCall","src":"22554:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22546:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22593:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22604:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22589:3:22"},"nodeType":"YulFunctionCall","src":"22589:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22612:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"22618:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22608:3:22"},"nodeType":"YulFunctionCall","src":"22608:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22582:6:22"},"nodeType":"YulFunctionCall","src":"22582:47:22"},"nodeType":"YulExpressionStatement","src":"22582:47:22"},{"nodeType":"YulAssignment","src":"22638:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22772:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22646:124:22"},"nodeType":"YulFunctionCall","src":"22646:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22638:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22516:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22531:4:22","type":""}],"src":"22365:419:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[2]\n    function abi_decode_t_array$_t_uint256_$2_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x02, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[2][2]\n    function abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x02, 0x40)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptrt_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 320) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value2 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct NftMarketplace.Listing -> struct NftMarketplace.Listing\n    function abi_encode_t_struct$_Listing_$3210_memory_ptr_to_t_struct$_Listing_$3210_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Listing_$3210_memory_ptr__to_t_struct$_Listing_$3210_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Listing_$3210_memory_ptr_to_t_struct$_Listing_$3210_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n\n    }\n\n    // uint256[2] -> uint256[2]\n    function abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(start, pos) {\n        copy_calldata_to_memory(start, pos, 0x40)\n    }\n\n    function array_length_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    // uint256[2] -> uint256[2]\n    function abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr(start, pos) {\n        copy_calldata_to_memory(start, pos, 0x40)\n    }\n\n    function abi_encodeUpdatedPos_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function calldata_access_t_array$_t_uint256_$2_calldata_ptr(baseRef, ptr) -> value {\n        value := ptr\n    }\n\n    function array_nextElement_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x40)\n    }\n\n    // uint256[2][2] -> uint256[2][2]\n    function abi_encode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_to_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_array$_t_uint256_$2_calldata_ptr(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(srcPtr)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$2_memory_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$2_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$2_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[2] -> uint256[2]\n    function abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$2_calldata_ptr_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_t_array$_t_uint256_$2_calldata_ptr_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr_to_t_array$_t_array$_t_uint256_$2_memory_ptr_$2_memory_ptr_fromStack(value1,  add(headStart, 64))\n\n        abi_encode_t_array$_t_uint256_$2_calldata_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value2,  add(headStart, 192))\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value3,  add(headStart, 256))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061009c5760003560e01c8063bcb143ef11610064578063bcb143ef14610196578063c88b7c8e146101bf578063d9964757146101e8578063f6b45c4614610211578063fa7da19d1461022d578063fc5a8444146102565761009c565b80634b3320e0146100a15780636be4a002146100ca57806381b1fc7a146100f357806388700d1c14610130578063b7d862251461016d575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906116d0565b610272565b005b3480156100d657600080fd5b506100f160048036038101906100ec919061176c565b6104b0565b005b3480156100ff57600080fd5b5061011a600480360381019061011591906117ea565b6107a9565b6040516101279190611826565b60405180910390f35b34801561013c57600080fd5b5061015760048036038101906101529190611841565b6107c6565b60405161016491906118bf565b60405180910390f35b34801561017957600080fd5b50610194600480360381019061018f91906117ea565b610845565b005b3480156101a257600080fd5b506101bd60048036038101906101b891906118da565b6108d6565b005b3480156101cb57600080fd5b506101e660048036038101906101e191906117ea565b610cd3565b005b3480156101f457600080fd5b5061020f600480360381019061020a91906118da565b610d64565b005b61022b600480360381019061022691906116d0565b610fe4565b005b34801561023957600080fd5b50610254600480360381019061024f91906117ea565b6112e3565b005b610270600480360381019061026b9190611941565b611374565b005b828282600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016102b59190611826565b602060405180830381865afa1580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f691906119a9565b9050808303610331576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87876000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060008160000151116103f15782826040517f6831488c0000000000000000000000000000000000000000000000000000000081526004016103e89291906119e5565b60405180910390fd5b600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060008082016000905560018201600090555050898b73ffffffffffffffffffffffffffffffffffffffff167fb407ecd2b3b64ae3cf35d828f7155fc60edd9911030438178310f6498bb0328f8b60405161049b9190611826565b60405180910390a35050505050505050505050565b6009600083815260200190815260200160002060009054906101000a900460ff16610507576040517fcad2ae0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff1690506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168787876040518060400160405280898152602001878152506040516024016105889493929190611b82565b60405160208183030381529060405263f5c9d69e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105da9190611c3a565b6000604051808303816000865af19150503d8060008114610617576040519150601f19603f3d011682016040523d82523d6000602084013e61061c565b606091505b5050905080610657576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016009600086815260200190815260200160002060006101000a81548160ff021916908315150217905550600060086000858152602001908152602001600020549050600081116106d5576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860008681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16600254836107159190611c80565b60405161072190611cda565b60006040518083038185875af1925050503d806000811461075e576040519150601f19603f3d011682016040523d82523d6000602084013e610763565b606091505b505090508061079e576040517fbf961a2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050565b600060086000838152602001908152602001600020549050919050565b6107ce61160e565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108cc576040517f3121268600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060028190555050565b83836000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111156109975782826040517f4a5568d500000000000000000000000000000000000000000000000000000000815260040161098e9291906119e5565b60405180910390fd5b868685600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016109da9190611826565b602060405180830381865afa1580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b91906119a9565b9050808303610a56576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a60008a815260200190815260200160002060009054906101000a900460ff1615610aae576040517fb7c01e1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a11610ae8576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663d78092528e6040518263ffffffff1660e01b8152600401610b3d9190611826565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611d04565b73ffffffffffffffffffffffffffffffffffffffff1614610bcb576040517f4be3a2c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808c81526020018b815250600760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e815260200190815260200160002060008201518160000155602082015181600101559050508b8d73ffffffffffffffffffffffffffffffffffffffff167fb7070c3c377d2fb697e5ddc72b0283eb751116d682ff1cdb579eab77bcc4013b8c8e604051610c90929190611d31565b60405180910390a36001600a60008c815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610d5a576040517f3121268600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060048190555050565b83836000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000816000015111610e245782826040517f6831488c000000000000000000000000000000000000000000000000000000008152600401610e1b9291906119e5565b60405180910390fd5b610e2c6115b5565b868685600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610e6f9190611826565b602060405180830381865afa158015610e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb091906119a9565b9050808303610eeb576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a11610f25576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89600760008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d8152602001908152602001600020600001819055508a8c73ffffffffffffffffffffffffffffffffffffffff167fb7070c3c377d2fb697e5ddc72b0283eb751116d682ff1cdb579eab77bcc4013b8b8d604051610fc6929190611d31565b60405180910390a35050505050610fdb611604565b50505050505050565b82826000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060008160000151116110a45782826040517f6831488c00000000000000000000000000000000000000000000000000000000815260040161109b9291906119e5565b60405180910390fd5b6110ac6115b5565b6000600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060035481600001516111319190611d5a565b34101561117d57868682600001516040517f7c93456500000000000000000000000000000000000000000000000000000000815260040161117493929190611d8e565b60405180910390fd5b34600860008360200151815260200190815260200160002060008282546111a49190611d5a565b92505081905550600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600080820160009055600182016000905550508673ffffffffffffffffffffffffffffffffffffffff16638894c4468787336040518463ffffffff1660e01b815260040161124b93929190611dc5565b600060405180830381600087803b15801561126557600080fd5b505af1158015611279573d6000803e3d6000fd5b50505050858773ffffffffffffffffffffffffffffffffffffffff167f8c912d39752dc1f52744615b409bb9cd946102bab9b0e6316d0a6ea0c3a1372a8784600001516040516112ca929190611d31565b60405180910390a3506112db611604565b505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361136a576040517f3121268600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060038190555050565b60003373ffffffffffffffffffffffffffffffffffffffff1660045460405161139c90611cda565b60006040518083038185875af1925050503d80600081146113d9576040519150601f19603f3d011682016040523d82523d6000602084013e6113de565b606091505b5050905080611419576040517fbf961a2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16633bb3a24d846040518263ffffffff1660e01b81526004016114549190611826565b600060405180830381865afa158015611471573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061149a9190611f33565b90508473ffffffffffffffffffffffffffffffffffffffff1663263c786884336040518363ffffffff1660e01b81526004016114d7929190611f7c565b600060405180830381600087803b1580156114f157600080fd5b505af1158015611505573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663da86f4a9826040518263ffffffff1660e01b81526004016115429190611ffa565b600060405180830381600087803b15801561155c57600080fd5b505af1158015611570573d6000803e3d6000fd5b50505050827fedfa780d7781a8b1783d9fd71ece3fafd0470cbdf1276685916e081d3be6223f86866040516115a692919061201c565b60405180910390a25050505050565b6002600054036115fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f190612091565b60405180910390fd5b6002600081905550565b6001600081905550565b604051806040016040528060008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116678261163c565b9050919050565b6116778161165c565b811461168257600080fd5b50565b6000813590506116948161166e565b92915050565b6000819050919050565b6116ad8161169a565b81146116b857600080fd5b50565b6000813590506116ca816116a4565b92915050565b6000806000606084860312156116e9576116e8611632565b5b60006116f786828701611685565b9350506020611708868287016116bb565b9250506040611719868287016116bb565b9150509250925092565b600080fd5b60008190508260206002028201111561174457611743611723565b5b92915050565b60008190508260406002028201111561176657611765611723565b5b92915050565b6000806000806000610140868803121561178957611788611632565b5b600061179788828901611728565b95505060406117a88882890161174a565b94505060c06117b988828901611728565b9350506101006117cb888289016116bb565b9250506101206117dd888289016116bb565b9150509295509295909350565b600060208284031215611800576117ff611632565b5b600061180e848285016116bb565b91505092915050565b6118208161169a565b82525050565b600060208201905061183b6000830184611817565b92915050565b6000806040838503121561185857611857611632565b5b600061186685828601611685565b9250506020611877858286016116bb565b9150509250929050565b61188a8161169a565b82525050565b6040820160008201516118a66000850182611881565b5060208201516118b96020850182611881565b50505050565b60006040820190506118d46000830184611890565b92915050565b600080600080608085870312156118f4576118f3611632565b5b600061190287828801611685565b9450506020611913878288016116bb565b9350506040611924878288016116bb565b9250506060611935878288016116bb565b91505092959194509250565b60008060006060848603121561195a57611959611632565b5b600061196886828701611685565b935050602061197986828701611685565b925050604061198a868287016116bb565b9150509250925092565b6000815190506119a3816116a4565b92915050565b6000602082840312156119bf576119be611632565b5b60006119cd84828501611994565b91505092915050565b6119df8161165c565b82525050565b60006040820190506119fa60008301856119d6565b611a076020830184611817565b9392505050565b82818337505050565b611a2360408383611a0e565b5050565b600060029050919050565b600081905092915050565b6000819050919050565b611a5360408383611a0e565b5050565b6000611a638383611a47565b60408301905092915050565b600082905092915050565b6000604082019050919050565b611a9081611a27565b611a9a8184611a32565b9250611aa582611a3d565b8060005b83811015611ade57611abb8284611a6f565b611ac58782611a57565b9650611ad083611a7a565b925050600181019050611aa9565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b6000611b128383611881565b60208301905092915050565b6000602082019050919050565b611b3481611ae6565b611b3e8184611af1565b9250611b4982611afc565b8060005b83811015611b7a578151611b618782611b06565b9650611b6c83611b1e565b925050600181019050611b4d565b505050505050565b600061014082019050611b986000830187611a17565b611ba56040830186611a87565b611bb260c0830185611a17565b611bc0610100830184611b2b565b95945050505050565b600081519050919050565b600081905092915050565b60005b83811015611bfd578082015181840152602081019050611be2565b60008484015250505050565b6000611c1482611bc9565b611c1e8185611bd4565b9350611c2e818560208601611bdf565b80840191505092915050565b6000611c468284611c09565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c8b8261169a565b9150611c968361169a565b9250828203905081811115611cae57611cad611c51565b5b92915050565b50565b6000611cc4600083611bd4565b9150611ccf82611cb4565b600082019050919050565b6000611ce582611cb7565b9150819050919050565b600081519050611cfe8161166e565b92915050565b600060208284031215611d1a57611d19611632565b5b6000611d2884828501611cef565b91505092915050565b6000604082019050611d466000830185611817565b611d536020830184611817565b9392505050565b6000611d658261169a565b9150611d708361169a565b9250828201905080821115611d8857611d87611c51565b5b92915050565b6000606082019050611da360008301866119d6565b611db06020830185611817565b611dbd6040830184611817565b949350505050565b6000606082019050611dda6000830186611817565b611de76020830185611817565b611df460408301846119d6565b949350505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e4f82611e06565b810181811067ffffffffffffffff82111715611e6e57611e6d611e17565b5b80604052505050565b6000611e81611628565b9050611e8d8282611e46565b919050565b600067ffffffffffffffff821115611ead57611eac611e17565b5b611eb682611e06565b9050602081019050919050565b6000611ed6611ed184611e92565b611e77565b905082815260208101848484011115611ef257611ef1611e01565b5b611efd848285611bdf565b509392505050565b600082601f830112611f1a57611f19611dfc565b5b8151611f2a848260208601611ec3565b91505092915050565b600060208284031215611f4957611f48611632565b5b600082015167ffffffffffffffff811115611f6757611f66611637565b5b611f7384828501611f05565b91505092915050565b6000604082019050611f916000830185611817565b611f9e60208301846119d6565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000611fcc82611fa5565b611fd68185611fb0565b9350611fe6818560208601611bdf565b611fef81611e06565b840191505092915050565b600060208201905081810360008301526120148184611fc1565b905092915050565b600060408201905061203160008301856119d6565b61203e60208301846119d6565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061207b601f83611fb0565b915061208682612045565b602082019050919050565b600060208201905081810360008301526120aa8161206e565b905091905056fea2646970667358221220e159bae3492d2a1f26a82c09e61405328af87bbbfaa54ee10b020886343b87dd64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBCB143EF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBCB143EF EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xC88B7C8E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xD9964757 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF6B45C46 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xFA7DA19D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xFC5A8444 EQ PUSH2 0x256 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x4B3320E0 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x6BE4A002 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x81B1FC7A EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x88700D1C EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xB7D86225 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16D0 JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST STOP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 SUB PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x3F1 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E8 SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP10 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB407ECD2B3B64AE3CF35D828F7155FC60EDD9911030438178310F6498BB0328F DUP12 PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCAD2AE0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x588 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xF5C9D69E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x61C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9BDE33900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4D8FA8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 SLOAD DUP4 PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x721 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x763 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF961A2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x160E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x3121268600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP4 DUP4 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x997 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x4A5568D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA1B SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 SUB PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB7C01E1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD7809252 DUP15 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x4BE3A2C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP12 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7070C3C377D2FB697E5DDC72B0283EB751116D682FF1CDB579EAB77BCC4013B DUP13 DUP15 PUSH1 0x40 MLOAD PUSH2 0xC90 SWAP3 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3121268600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP4 DUP4 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xE24 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1B SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2C PUSH2 0x15B5 JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6F SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 SUB PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0xF25 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH1 0x7 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP11 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7070C3C377D2FB697E5DDC72B0283EB751116D682FF1CDB579EAB77BCC4013B DUP12 DUP14 PUSH1 0x40 MLOAD PUSH2 0xFC6 SWAP3 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH2 0xFDB PUSH2 0x1604 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x10A4 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10AC PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x117D JUMPI DUP7 DUP7 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x7C93456500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11A4 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8894C446 DUP8 DUP8 CALLER PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C912D39752DC1F52744615B409BB9CD946102BAB9B0E6316D0A6EA0C3A1372A DUP8 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x12CA SWAP3 SWAP2 SWAP1 PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x12DB PUSH2 0x1604 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136A JUMPI PUSH1 0x40 MLOAD PUSH32 0x3121268600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x139C SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1419 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF961A2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3BB3A24D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1471 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x149A SWAP2 SWAP1 PUSH2 0x1F33 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x263C7868 DUP5 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D7 SWAP3 SWAP2 SWAP1 PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDA86F4A9 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1542 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x155C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1570 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH32 0xEDFA780D7781A8B1783D9FD71ECE3FAFD0470CBDF1276685916E081D3BE6223F DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x15A6 SWAP3 SWAP2 SWAP1 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x15FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F1 SWAP1 PUSH2 0x2091 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1667 DUP3 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1677 DUP2 PUSH2 0x165C JUMP JUMPDEST DUP2 EQ PUSH2 0x1682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1694 DUP2 PUSH2 0x166E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AD DUP2 PUSH2 0x169A JUMP JUMPDEST DUP2 EQ PUSH2 0x16B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CA DUP2 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16E9 JUMPI PUSH2 0x16E8 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F7 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1708 DUP7 DUP3 DUP8 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1719 DUP7 DUP3 DUP8 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x40 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x1766 JUMPI PUSH2 0x1765 PUSH2 0x1723 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x140 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1789 JUMPI PUSH2 0x1788 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1797 DUP9 DUP3 DUP10 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x17A8 DUP9 DUP3 DUP10 ADD PUSH2 0x174A JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x17B9 DUP9 DUP3 DUP10 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH2 0x17CB DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH2 0x17DD DUP9 DUP3 DUP10 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17FF PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x180E DUP5 DUP3 DUP6 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x169A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1858 JUMPI PUSH2 0x1857 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1866 DUP6 DUP3 DUP7 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1877 DUP6 DUP3 DUP7 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x188A DUP2 PUSH2 0x169A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x18A6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1881 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x18B9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1881 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1890 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18F4 JUMPI PUSH2 0x18F3 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1902 DUP8 DUP3 DUP9 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1913 DUP8 DUP3 DUP9 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1924 DUP8 DUP3 DUP9 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1935 DUP8 DUP3 DUP9 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1968 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1979 DUP7 DUP3 DUP8 ADD PUSH2 0x1685 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x198A DUP7 DUP3 DUP8 ADD PUSH2 0x16BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x19A3 DUP2 PUSH2 0x16A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CD DUP5 DUP3 DUP6 ADD PUSH2 0x1994 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19DF DUP2 PUSH2 0x165C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19FA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x1A07 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH2 0x1A23 PUSH1 0x40 DUP4 DUP4 PUSH2 0x1A0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A53 PUSH1 0x40 DUP4 DUP4 PUSH2 0x1A0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A63 DUP4 DUP4 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A90 DUP2 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x1A9A DUP2 DUP5 PUSH2 0x1A32 JUMP JUMPDEST SWAP3 POP PUSH2 0x1AA5 DUP3 PUSH2 0x1A3D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ABB DUP3 DUP5 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1AC5 DUP8 DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP7 POP PUSH2 0x1AD0 DUP4 PUSH2 0x1A7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B12 DUP4 DUP4 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B34 DUP2 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x1B3E DUP2 DUP5 PUSH2 0x1AF1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1B49 DUP3 PUSH2 0x1AFC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B7A JUMPI DUP2 MLOAD PUSH2 0x1B61 DUP8 DUP3 PUSH2 0x1B06 JUMP JUMPDEST SWAP7 POP PUSH2 0x1B6C DUP4 PUSH2 0x1B1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B4D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x1B98 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1BA5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A87 JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1BC0 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BFD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C14 DUP3 PUSH2 0x1BC9 JUMP JUMPDEST PUSH2 0x1C1E DUP2 DUP6 PUSH2 0x1BD4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C2E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C46 DUP3 DUP5 PUSH2 0x1C09 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C8B DUP3 PUSH2 0x169A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C96 DUP4 PUSH2 0x169A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC4 PUSH1 0x0 DUP4 PUSH2 0x1BD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCF DUP3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE5 DUP3 PUSH2 0x1CB7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CFE DUP2 PUSH2 0x166E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1A JUMPI PUSH2 0x1D19 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D28 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D46 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1D53 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D65 DUP3 PUSH2 0x169A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D70 DUP4 PUSH2 0x169A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D88 JUMPI PUSH2 0x1D87 PUSH2 0x1C51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DA3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x1DB0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1DBD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1817 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DDA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1DE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E4F DUP3 PUSH2 0x1E06 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E6E JUMPI PUSH2 0x1E6D PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E81 PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8D DUP3 DUP3 PUSH2 0x1E46 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST PUSH2 0x1EB6 DUP3 PUSH2 0x1E06 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED6 PUSH2 0x1ED1 DUP5 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x1E77 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH2 0x1EFD DUP5 DUP3 DUP6 PUSH2 0x1BDF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F1A JUMPI PUSH2 0x1F19 PUSH2 0x1DFC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1F2A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1EC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x1632 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F67 JUMPI PUSH2 0x1F66 PUSH2 0x1637 JUMP JUMPDEST JUMPDEST PUSH2 0x1F73 DUP5 DUP3 DUP6 ADD PUSH2 0x1F05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F91 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x1F9E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCC DUP3 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0x1FD6 DUP2 DUP6 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FE6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1FEF DUP2 PUSH2 0x1E06 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2014 DUP2 DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2031 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x203E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207B PUSH1 0x1F DUP4 PUSH2 0x1FB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2086 DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20AA DUP2 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 MSIZE 0xBA 0xE3 0x49 0x2D 0x2A 0x1F 0x26 0xA8 0x2C MULMOD 0xE6 EQ SDIV ORIGIN DUP11 0xF8 PUSH28 0xBBFAA54EE10B020886343B87DD64736F6C6343000811003300000000 ","sourceMap":"403:6898:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3680:284;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5054:907;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7182:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6997:179;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5967:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2966:708;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6298:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4589:459;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3970:613;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6135:157;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6470:521;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3680:284;3786:10;3798:7;3807:3;2784:10;2804;2784:31;;2825:16;2844:3;:11;;;2856:7;2844:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2825:39;;2890:8;2878:10;:20;2874:68;;2921:10;;;;;;;;;;;;;;2874:68;3829:10:::1;3841:7;2495:22;2520:10;:22;2531:10;2520:22;;;;;;;;;;;;;;;:31;2543:7;2520:31;;;;;;;;;;;2495:56;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2582:1;2565:7;:13;;;:18;2561:86;;2616:10;2628:7;2606:30;;;;;;;;;;;;:::i;:::-;;;;;;;;2561:86;3872:10:::2;:22;3883:10;3872:22;;;;;;;;;;;;;;;:31;3895:7;3872:31;;;;;;;;;;;;3864:40:::0;::::2;;;;;;;;;;;;;3949:7;3937:10;3919:38;;;3932:3;3919:38;;;;;;:::i;:::-;;;;;;;;2485:179:::1;2952:1;;2774:186:::0;;3680:284;;;;;;:::o;5054:907::-;5272:15;:25;5288:8;5272:25;;;;;;;;;;;;;;;;;;;;;5268:84;;5319:22;;;;;;;;;;;;;;5268:84;5362:13;5394:10;5378:28;;5362:44;;5418:13;5437:8;;;;;;;;;;;:13;;5490:3;5495;5500;5451:73;;;;;;;;5506:8;5451:73;;;;5516:5;5451:73;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5437:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5417:108;;;5540:8;5536:59;;5570:14;;;;;;;;;;;;;;5536:59;5633:4;5605:15;:25;5621:8;5605:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;5648:16;5667:10;:15;5678:3;5667:15;;;;;;;;;;;;5648:34;;5708:1;5696:8;:13;5692:63;;5732:12;;;;;;;;;;;;;;5692:63;5782:1;5764:10;:15;5775:3;5764:15;;;;;;;;;;;:19;;;;5794:12;5820:10;5812:24;;5856:11;;5845:8;:22;;;;:::i;:::-;5812:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5793:80;;;5896:7;5892:63;;5925:19;;;;;;;;;;;;;;5892:63;5257:704;;;;5054:907;;;;;:::o;7182:117::-;7245:7;7271:10;:21;7282:9;7271:21;;;;;;;;;;;;7264:28;;7182:117;;;:::o;6997:179::-;7101:14;;:::i;:::-;7138:10;:22;7149:10;7138:22;;;;;;;;;;;;;;;:31;7161:7;7138:31;;;;;;;;;;;7131:38;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:179;;;;:::o;5967:162::-;6039:9;;;;;;;;;;;6025:23;;:10;:23;;;6022:73;;6070:14;;;;;;;;;;;;;;6022:73;6118:4;6104:11;:18;;;;5967:162;:::o;2966:708::-;3122:10;3134:7;2252:22;2277:10;:22;2288:10;2277:22;;;;;;;;;;;;;;;:31;2300:7;2277:31;;;;;;;;;;;2252:56;;;;;;;;;;;;;;;;;;;;;;;;;;;2338:1;2322:7;:13;;;:17;2318:89;;;2376:10;2388:7;2362:34;;;;;;;;;;;;:::i;:::-;;;;;;;;2318:89;3159:10:::1;3171:7;3180:3;2784:10;2804;2784:31;;2825:16;2844:3;:11;;;2856:7;2844:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2825:39;;2890:8;2878:10;:20:::0;2874:68:::1;;2921:10;;;;;;;;;;;;;;2874:68;3202:11:::2;:16;3214:3;3202:16;;;;;;;;;;;;;;;;;;;;;3199:75;;;3240:23;;;;;;;;;;;;;;3199:75;3297:1;3288:5;:10;3284:70;;3321:22;;;;;;;;;;;;;;3284:70;3363:10;3383;3363:31;;3447:4;3408:44;;:3;:18;;;3427:7;3408:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;3404:109;;3475:27;;;;;;;;;;;;;;3404:109;3556:19;;;;;;;;3564:5;3556:19;;;;3571:3;3556:19;;::::0;3522:10:::2;:22;3533:10;3522:22;;;;;;;;;;;;;;;:31;3545:7;3522:31;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;3618:7;3606:10;3590:43;;;3601:3;3627:5;3590:43;;;;;;;:::i;:::-;;;;;;;;3663:4;3644:11;:16;3656:3;3644:16;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;3189:485;2774:186:::1;;2416:1;;;2242:182:::0;2966:708;;;;;;:::o;6298:166::-;6372:9;;;;;;;;;;;6358:23;;:10;:23;;;6355:73;;6403:14;;;;;;;;;;;;;;6355:73;6453:4;6437:13;:20;;;;6298:166;:::o;4589:459::-;4752:10;4764:7;2495:22;2520:10;:22;2531:10;2520:22;;;;;;;;;;;;;;;:31;2543:7;2520:31;;;;;;;;;;;2495:56;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:1;2565:7;:13;;;:18;2561:86;;2616:10;2628:7;2606:30;;;;;;;;;;;;:::i;:::-;;;;;;;;2561:86;2261:21:0::1;:19;:21::i;:::-;4810:10:18::2;4822:7;4831:3;2784:10;2804;2784:31;;2825:16;2844:3;:11;;;2856:7;2844:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2825:39;;2890:8;2878:10;:20:::0;2874:68:::2;;2921:10;;;;;;;;;;;;;;2874:68;4866:1:::3;4854:8;:13;4850:73;;4890:22;;;;;;;;;;;;;;4850:73;4972:8;4932:10;:22;4943:10;4932:22;;;;;;;;;;;;;;;:31;4955:7;4932:31;;;;;;;;;;;:37;;:48;;;;5023:7;5011:10;4995:46;;;5006:3;5032:8;4995:46;;;;;;;:::i;:::-;;;;;;;;2774:186:::2;;2292:1:0;;;2303:20:::1;:18;:20::i;:::-;2485:179:18::0;4589:459;;;;;;:::o;3970:613::-;4087:10;4099:7;2495:22;2520:10;:22;2531:10;2520:22;;;;;;;;;;;;;;;:31;2543:7;2520:31;;;;;;;;;;;2495:56;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:1;2565:7;:13;;;:18;2561:86;;2616:10;2628:7;2606:30;;;;;;;;;;;;:::i;:::-;;;;;;;;2561:86;2261:21:0::1;:19;:21::i;:::-;4143:25:18::2;4171:10;:22;4182:10;4171:22;;;;;;;;;;;;;;;:31;4194:7;4171:31;;;;;;;;;;;4143:59;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;4248:9;;4229:10;:16;;;:28;;;;:::i;:::-;4216:9;:42;4212:130;;;4293:10;4305:7;4314:10;:16;;;4281:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4212:130;4384:9;4351:10;:29;4362:10;:17;;;4351:29;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;4411:10;:22;4422:10;4411:22;;;;;;;;;;;;;;;:31;4434:7;4411:31;;;;;;;;;;;;4403:40:::0;::::2;;;;;;;;;;;;;4460:10;4453:30;;;4484:7;4492:3;4496:10;4453:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4550:7;4538:10;4522:54;;;4533:3;4559:10;:16;;;4522:54;;;;;;;:::i;:::-;;;;;;;;4133:450;2303:20:0::1;:18;:20::i;:::-;2485:179:18::0;3970:613;;;;;:::o;6135:157::-;6204:9;;;;;;;;;;;6190:23;;:10;:23;;;6187:73;;6235:14;;;;;;;;;;;;;;6187:73;6281:4;6269:9;:16;;;;6135:157;:::o;6470:521::-;6584:12;6610:10;6602:24;;6634:13;;6602:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6583:69;;;6666:7;6662:63;;6695:19;;;;;;;;;;;;;;6662:63;6734:22;6766:12;6759:32;;;6792:7;6759:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6734:66;;6817:12;6810:32;;;6843:7;6851:10;6810:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6885:14;6872:36;;;6909:8;6872:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6961:7;6934:50;6948:12;6969:14;6934:50;;;;;;;:::i;:::-;;;;;;;;6572:419;;6470:521;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:117::-;1931:1;1928;1921:12;1963:249;2034:8;2065:6;2053:18;;2118:3;2110:4;2104;2100:15;2090:8;2086:30;2083:39;2080:126;;;2125:79;;:::i;:::-;2080:126;1963:249;;;;:::o;2239:274::-;2335:8;2366:6;2354:18;;2419:3;2411:4;2405;2401:15;2391:8;2387:30;2384:39;2381:126;;;2426:79;;:::i;:::-;2381:126;2239:274;;;;:::o;2519:1113::-;2714:6;2722;2730;2738;2746;2795:3;2783:9;2774:7;2770:23;2766:33;2763:120;;;2802:79;;:::i;:::-;2763:120;2922:1;2947:78;3017:7;3008:6;2997:9;2993:22;2947:78;:::i;:::-;2937:88;;2893:142;3074:2;3100:103;3195:7;3186:6;3175:9;3171:22;3100:103;:::i;:::-;3090:113;;3045:168;3252:3;3279:78;3349:7;3340:6;3329:9;3325:22;3279:78;:::i;:::-;3269:88;;3223:144;3406:3;3433:53;3478:7;3469:6;3458:9;3454:22;3433:53;:::i;:::-;3423:63;;3377:119;3535:3;3562:53;3607:7;3598:6;3587:9;3583:22;3562:53;:::i;:::-;3552:63;;3506:119;2519:1113;;;;;;;;:::o;3638:329::-;3697:6;3746:2;3734:9;3725:7;3721:23;3717:32;3714:119;;;3752:79;;:::i;:::-;3714:119;3872:1;3897:53;3942:7;3933:6;3922:9;3918:22;3897:53;:::i;:::-;3887:63;;3843:117;3638:329;;;;:::o;3973:118::-;4060:24;4078:5;4060:24;:::i;:::-;4055:3;4048:37;3973:118;;:::o;4097:222::-;4190:4;4228:2;4217:9;4213:18;4205:26;;4241:71;4309:1;4298:9;4294:17;4285:6;4241:71;:::i;:::-;4097:222;;;;:::o;4325:474::-;4393:6;4401;4450:2;4438:9;4429:7;4425:23;4421:32;4418:119;;;4456:79;;:::i;:::-;4418:119;4576:1;4601:53;4646:7;4637:6;4626:9;4622:22;4601:53;:::i;:::-;4591:63;;4547:117;4703:2;4729:53;4774:7;4765:6;4754:9;4750:22;4729:53;:::i;:::-;4719:63;;4674:118;4325:474;;;;;:::o;4805:108::-;4882:24;4900:5;4882:24;:::i;:::-;4877:3;4870:37;4805:108;;:::o;4989:510::-;5136:4;5131:3;5127:14;5224:4;5217:5;5213:16;5207:23;5243:63;5300:4;5295:3;5291:14;5277:12;5243:63;:::i;:::-;5151:165;5400:4;5393:5;5389:16;5383:23;5419:63;5476:4;5471:3;5467:14;5453:12;5419:63;:::i;:::-;5326:166;5105:394;4989:510;;:::o;5505:322::-;5648:4;5686:2;5675:9;5671:18;5663:26;;5699:121;5817:1;5806:9;5802:17;5793:6;5699:121;:::i;:::-;5505:322;;;;:::o;5833:765::-;5919:6;5927;5935;5943;5992:3;5980:9;5971:7;5967:23;5963:33;5960:120;;;5999:79;;:::i;:::-;5960:120;6119:1;6144:53;6189:7;6180:6;6169:9;6165:22;6144:53;:::i;:::-;6134:63;;6090:117;6246:2;6272:53;6317:7;6308:6;6297:9;6293:22;6272:53;:::i;:::-;6262:63;;6217:118;6374:2;6400:53;6445:7;6436:6;6425:9;6421:22;6400:53;:::i;:::-;6390:63;;6345:118;6502:2;6528:53;6573:7;6564:6;6553:9;6549:22;6528:53;:::i;:::-;6518:63;;6473:118;5833:765;;;;;;;:::o;6604:619::-;6681:6;6689;6697;6746:2;6734:9;6725:7;6721:23;6717:32;6714:119;;;6752:79;;:::i;:::-;6714:119;6872:1;6897:53;6942:7;6933:6;6922:9;6918:22;6897:53;:::i;:::-;6887:63;;6843:117;6999:2;7025:53;7070:7;7061:6;7050:9;7046:22;7025:53;:::i;:::-;7015:63;;6970:118;7127:2;7153:53;7198:7;7189:6;7178:9;7174:22;7153:53;:::i;:::-;7143:63;;7098:118;6604:619;;;;;:::o;7229:143::-;7286:5;7317:6;7311:13;7302:22;;7333:33;7360:5;7333:33;:::i;:::-;7229:143;;;;:::o;7378:351::-;7448:6;7497:2;7485:9;7476:7;7472:23;7468:32;7465:119;;;7503:79;;:::i;:::-;7465:119;7623:1;7648:64;7704:7;7695:6;7684:9;7680:22;7648:64;:::i;:::-;7638:74;;7594:128;7378:351;;;;:::o;7735:118::-;7822:24;7840:5;7822:24;:::i;:::-;7817:3;7810:37;7735:118;;:::o;7859:332::-;7980:4;8018:2;8007:9;8003:18;7995:26;;8031:71;8099:1;8088:9;8084:17;8075:6;8031:71;:::i;:::-;8112:72;8180:2;8169:9;8165:18;8156:6;8112:72;:::i;:::-;7859:332;;;;;:::o;8197:98::-;8281:6;8276:3;8271;8258:30;8197:98;;;:::o;8333:170::-;8456:41;8492:4;8487:3;8480:5;8456:41;:::i;:::-;8333:170;;:::o;8509:131::-;8601:6;8629:4;8619:14;;8509:131;;;:::o;8646:166::-;8766:11;8803:3;8788:18;;8646:166;;;;:::o;8818:125::-;8910:4;8933:3;8925:11;;8818:125;;;:::o;8981:160::-;9094:41;9130:4;9125:3;9118:5;9094:41;:::i;:::-;8981:160;;:::o;9147:275::-;9264:10;9285:94;9375:3;9367:6;9285:94;:::i;:::-;9411:4;9406:3;9402:14;9388:28;;9147:275;;;;:::o;9428:111::-;9505:5;9530:3;9521:12;;9428:111;;;;:::o;9545:138::-;9640:4;9672;9667:3;9663:14;9655:22;;9545:138;;;:::o;9727:950::-;9913:79;9986:5;9913:79;:::i;:::-;10008:107;10108:6;10103:3;10008:107;:::i;:::-;10001:114;;10139:81;10214:5;10139:81;:::i;:::-;10243:7;10274:1;10259:411;10284:6;10281:1;10278:13;10259:411;;;10354:67;10414:6;10405:7;10354:67;:::i;:::-;10441:111;10548:3;10533:13;10441:111;:::i;:::-;10434:118;;10575:85;10653:6;10575:85;:::i;:::-;10565:95;;10319:351;10306:1;10303;10299:9;10294:14;;10259:411;;;10263:14;9889:788;;;9727:950;;:::o;10683:104::-;10748:6;10776:4;10766:14;;10683:104;;;:::o;10793:143::-;10890:11;10927:3;10912:18;;10793:143;;;;:::o;10942:98::-;11007:4;11030:3;11022:11;;10942:98;;;:::o;11046:179::-;11115:10;11136:46;11178:3;11170:6;11136:46;:::i;:::-;11214:4;11209:3;11205:14;11191:28;;11046:179;;;;:::o;11231:111::-;11299:4;11331;11326:3;11322:14;11314:22;;11231:111;;;:::o;11380:694::-;11516:52;11562:5;11516:52;:::i;:::-;11584:84;11661:6;11656:3;11584:84;:::i;:::-;11577:91;;11692:54;11740:5;11692:54;:::i;:::-;11769:7;11800:1;11785:282;11810:6;11807:1;11804:13;11785:282;;;11886:6;11880:13;11913:63;11972:3;11957:13;11913:63;:::i;:::-;11906:70;;11999:58;12050:6;11999:58;:::i;:::-;11989:68;;11845:222;11832:1;11829;11825:9;11820:14;;11785:282;;;11789:14;11492:582;;;11380:694;;:::o;12080:1031::-;12495:4;12533:3;12522:9;12518:19;12510:27;;12547:119;12663:1;12652:9;12648:17;12639:6;12547:119;:::i;:::-;12676:168;12840:2;12829:9;12825:18;12816:6;12676:168;:::i;:::-;12854:121;12970:3;12959:9;12955:19;12946:6;12854:121;:::i;:::-;12985:119;13099:3;13088:9;13084:19;13075:6;12985:119;:::i;:::-;12080:1031;;;;;;;:::o;13117:98::-;13168:6;13202:5;13196:12;13186:22;;13117:98;;;:::o;13221:147::-;13322:11;13359:3;13344:18;;13221:147;;;;:::o;13374:246::-;13455:1;13465:113;13479:6;13476:1;13473:13;13465:113;;;13564:1;13559:3;13555:11;13549:18;13545:1;13540:3;13536:11;13529:39;13501:2;13498:1;13494:10;13489:15;;13465:113;;;13612:1;13603:6;13598:3;13594:16;13587:27;13436:184;13374:246;;;:::o;13626:386::-;13730:3;13758:38;13790:5;13758:38;:::i;:::-;13812:88;13893:6;13888:3;13812:88;:::i;:::-;13805:95;;13909:65;13967:6;13962:3;13955:4;13948:5;13944:16;13909:65;:::i;:::-;13999:6;13994:3;13990:16;13983:23;;13734:278;13626:386;;;;:::o;14018:271::-;14148:3;14170:93;14259:3;14250:6;14170:93;:::i;:::-;14163:100;;14280:3;14273:10;;14018:271;;;;:::o;14295:180::-;14343:77;14340:1;14333:88;14440:4;14437:1;14430:15;14464:4;14461:1;14454:15;14481:194;14521:4;14541:20;14559:1;14541:20;:::i;:::-;14536:25;;14575:20;14593:1;14575:20;:::i;:::-;14570:25;;14619:1;14616;14612:9;14604:17;;14643:1;14637:4;14634:11;14631:37;;;14648:18;;:::i;:::-;14631:37;14481:194;;;;:::o;14681:114::-;;:::o;14801:398::-;14960:3;14981:83;15062:1;15057:3;14981:83;:::i;:::-;14974:90;;15073:93;15162:3;15073:93;:::i;:::-;15191:1;15186:3;15182:11;15175:18;;14801:398;;;:::o;15205:379::-;15389:3;15411:147;15554:3;15411:147;:::i;:::-;15404:154;;15575:3;15568:10;;15205:379;;;:::o;15590:143::-;15647:5;15678:6;15672:13;15663:22;;15694:33;15721:5;15694:33;:::i;:::-;15590:143;;;;:::o;15739:351::-;15809:6;15858:2;15846:9;15837:7;15833:23;15829:32;15826:119;;;15864:79;;:::i;:::-;15826:119;15984:1;16009:64;16065:7;16056:6;16045:9;16041:22;16009:64;:::i;:::-;15999:74;;15955:128;15739:351;;;;:::o;16096:332::-;16217:4;16255:2;16244:9;16240:18;16232:26;;16268:71;16336:1;16325:9;16321:17;16312:6;16268:71;:::i;:::-;16349:72;16417:2;16406:9;16402:18;16393:6;16349:72;:::i;:::-;16096:332;;;;;:::o;16434:191::-;16474:3;16493:20;16511:1;16493:20;:::i;:::-;16488:25;;16527:20;16545:1;16527:20;:::i;:::-;16522:25;;16570:1;16567;16563:9;16556:16;;16591:3;16588:1;16585:10;16582:36;;;16598:18;;:::i;:::-;16582:36;16434:191;;;;:::o;16631:442::-;16780:4;16818:2;16807:9;16803:18;16795:26;;16831:71;16899:1;16888:9;16884:17;16875:6;16831:71;:::i;:::-;16912:72;16980:2;16969:9;16965:18;16956:6;16912:72;:::i;:::-;16994;17062:2;17051:9;17047:18;17038:6;16994:72;:::i;:::-;16631:442;;;;;;:::o;17079:::-;17228:4;17266:2;17255:9;17251:18;17243:26;;17279:71;17347:1;17336:9;17332:17;17323:6;17279:71;:::i;:::-;17360:72;17428:2;17417:9;17413:18;17404:6;17360:72;:::i;:::-;17442;17510:2;17499:9;17495:18;17486:6;17442:72;:::i;:::-;17079:442;;;;;;:::o;17527:117::-;17636:1;17633;17626:12;17650:117;17759:1;17756;17749:12;17773:102;17814:6;17865:2;17861:7;17856:2;17849:5;17845:14;17841:28;17831:38;;17773:102;;;:::o;17881:180::-;17929:77;17926:1;17919:88;18026:4;18023:1;18016:15;18050:4;18047:1;18040:15;18067:281;18150:27;18172:4;18150:27;:::i;:::-;18142:6;18138:40;18280:6;18268:10;18265:22;18244:18;18232:10;18229:34;18226:62;18223:88;;;18291:18;;:::i;:::-;18223:88;18331:10;18327:2;18320:22;18110:238;18067:281;;:::o;18354:129::-;18388:6;18415:20;;:::i;:::-;18405:30;;18444:33;18472:4;18464:6;18444:33;:::i;:::-;18354:129;;;:::o;18489:308::-;18551:4;18641:18;18633:6;18630:30;18627:56;;;18663:18;;:::i;:::-;18627:56;18701:29;18723:6;18701:29;:::i;:::-;18693:37;;18785:4;18779;18775:15;18767:23;;18489:308;;;:::o;18803:434::-;18892:5;18917:66;18933:49;18975:6;18933:49;:::i;:::-;18917:66;:::i;:::-;18908:75;;19006:6;18999:5;18992:21;19044:4;19037:5;19033:16;19082:3;19073:6;19068:3;19064:16;19061:25;19058:112;;;19089:79;;:::i;:::-;19058:112;19179:52;19224:6;19219:3;19214;19179:52;:::i;:::-;18898:339;18803:434;;;;;:::o;19257:355::-;19324:5;19373:3;19366:4;19358:6;19354:17;19350:27;19340:122;;19381:79;;:::i;:::-;19340:122;19491:6;19485:13;19516:90;19602:3;19594:6;19587:4;19579:6;19575:17;19516:90;:::i;:::-;19507:99;;19330:282;19257:355;;;;:::o;19618:524::-;19698:6;19747:2;19735:9;19726:7;19722:23;19718:32;19715:119;;;19753:79;;:::i;:::-;19715:119;19894:1;19883:9;19879:17;19873:24;19924:18;19916:6;19913:30;19910:117;;;19946:79;;:::i;:::-;19910:117;20051:74;20117:7;20108:6;20097:9;20093:22;20051:74;:::i;:::-;20041:84;;19844:291;19618:524;;;;:::o;20148:332::-;20269:4;20307:2;20296:9;20292:18;20284:26;;20320:71;20388:1;20377:9;20373:17;20364:6;20320:71;:::i;:::-;20401:72;20469:2;20458:9;20454:18;20445:6;20401:72;:::i;:::-;20148:332;;;;;:::o;20486:99::-;20538:6;20572:5;20566:12;20556:22;;20486:99;;;:::o;20591:169::-;20675:11;20709:6;20704:3;20697:19;20749:4;20744:3;20740:14;20725:29;;20591:169;;;;:::o;20766:377::-;20854:3;20882:39;20915:5;20882:39;:::i;:::-;20937:71;21001:6;20996:3;20937:71;:::i;:::-;20930:78;;21017:65;21075:6;21070:3;21063:4;21056:5;21052:16;21017:65;:::i;:::-;21107:29;21129:6;21107:29;:::i;:::-;21102:3;21098:39;21091:46;;20858:285;20766:377;;;;:::o;21149:313::-;21262:4;21300:2;21289:9;21285:18;21277:26;;21349:9;21343:4;21339:20;21335:1;21324:9;21320:17;21313:47;21377:78;21450:4;21441:6;21377:78;:::i;:::-;21369:86;;21149:313;;;;:::o;21468:332::-;21589:4;21627:2;21616:9;21612:18;21604:26;;21640:71;21708:1;21697:9;21693:17;21684:6;21640:71;:::i;:::-;21721:72;21789:2;21778:9;21774:18;21765:6;21721:72;:::i;:::-;21468:332;;;;;:::o;21806:181::-;21946:33;21942:1;21934:6;21930:14;21923:57;21806:181;:::o;21993:366::-;22135:3;22156:67;22220:2;22215:3;22156:67;:::i;:::-;22149:74;;22232:93;22321:3;22232:93;:::i;:::-;22350:2;22345:3;22341:12;22334:19;;21993:366;;;:::o;22365:419::-;22531:4;22569:2;22558:9;22554:18;22546:26;;22618:9;22612:4;22608:20;22604:1;22593:9;22589:17;22582:47;22646:131;22772:4;22646:131;:::i;:::-;22638:139;;22365:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1684600","executionCost":"infinite","totalCost":"infinite"},"external":{"buyItem(address,uint256,uint256)":"infinite","cancelListing(address,uint256,uint256)":"infinite","convertToERC721(address,address,uint256)":"infinite","getListing(address,uint256)":"infinite","getProceeds(uint256)":"infinite","listItem(address,uint256,uint256,uint256)":"infinite","setBuyerFee(uint256)":"24778","setConversionFee(uint256)":"24712","setCreationFee(uint256)":"24779","updateListing(address,uint256,uint256,uint256)":"infinite","withdrawProceeds(uint256[2],uint256[2][2],uint256[2],uint256,uint256)":"infinite"}},"methodIdentifiers":{"buyItem(address,uint256,uint256)":"f6b45c46","cancelListing(address,uint256,uint256)":"4b3320e0","convertToERC721(address,address,uint256)":"fc5a8444","getListing(address,uint256)":"88700d1c","getProceeds(uint256)":"81b1fc7a","listItem(address,uint256,uint256,uint256)":"bcb143ef","setBuyerFee(uint256)":"fa7da19d","setConversionFee(uint256)":"c88b7c8e","setCreationFee(uint256)":"b7d86225","updateListing(address,uint256,uint256,uint256)":"d9964757","withdrawProceeds(uint256[2],uint256[2][2],uint256[2],uint256,uint256)":"6be4a002"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AlreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CommitmentAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemNotForSale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedForMarketplace\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthority\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NotListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullifierAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceMustBeAboveZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyer\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seller\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"zkNftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ercNftAddress\",\"type\":\"address\"}],\"name\":\"ItemConverted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seller\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"zkNftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"convertableNft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"convertToERC721\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seller\",\"type\":\"uint256\"}],\"internalType\":\"struct NftMarketplace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellerCom\",\"type\":\"uint256\"}],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setBuyerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setConversionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_pA\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"_pB\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_pC\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"nullHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nftMarketPlace.sol\":\"NftMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"contracts/ImarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface INftMarketPlace {\\n    function withdrawProceeds(\\n        uint[2] calldata _pA,\\n        uint[2][2] calldata _pB, \\n        uint[2] calldata _pC, \\n        uint nullHash,\\n        uint256 com) external;\\n}\",\"keccak256\":\"0x174868cef30b7e79013b370c020c84df92c4a71bb7d2fda04da86c94551dd2e5\",\"license\":\"MIT\"},\"contracts/InewBasicNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface INewBasicNFT{\\n    function mintNft(string memory uri) external;\\n}\",\"keccak256\":\"0x0306d7eef5fe882b8f1092cef8ee08c1803eb3b92958b4c3f45ff49b53e91d97\",\"license\":\"MIT\"},\"contracts/Izknft.sol\":{\"content\":\"//SPDX-License-Indentifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IZkNFT {\\n    \\n    function approve(uint256 _tokenID, address op) external;\\n    function getApprovedAdd(uint256 _tokenID) external view returns(address);    \\n    function ownerOf(uint256 _tokenID) external view returns (uint256);\\n    function transferNFT(uint256 _tokenID, uint256 nullifierHash, address buyer) external;\\n    function transferFrom(uint256 ownerNul, uint256 buyerNul, address buyer, uint256 _tokenID) external;\\n    function getTokenURI(uint256 _tokenID) external view returns(string memory);\\n    function name() external view  returns (string memory);\\n    function symbol() external view  returns (string memory);\\n    function deleteZkNft(uint256 tokenID, address owner) external;\\n}\",\"keccak256\":\"0x084b5a9fe01e11230cb9cfda5b7342a947dd854f62e84e3c697d7b8073d42b4a\"},\"contracts/MIMCSponge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ncontract Hasher {\\n    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    uint256[20] c = [\\n        0,\\n        25823191961023811529686723375255045606187170120624741056268890390838310270028,\\n        71153255768872006974285801937521995907343848376936063113800887806988124358800,\\n        51253176922899201987938365653129780755804051536550826601168630951148399005246,\\n        66651710483985382365580181188706173532487386392003341306307921015066514594406,\\n        45887003413921204775397977044284378920236104620216194900669591190628189327887,\\n        14399999722617037892747232478295923748665564430258345135947757381904956977453,\\n        29376176727758177809204424209125257629638239807319618360680345079470240949145,\\n        13768859312518298840937540532277016512087005174650120937309279832230513110846,\\n        54749662990362840569021981534456448557155682756506853240029023635346061661615,\\n        25161436470718351277017231215227846535148280460947816286575563945185127975034,\\n        90370030464179443930112165274275271350651484239155016554738639197417116558730,\\n        92014788260850167582827910417652439562305280453223492851660096740204889381255,\\n        40376490640073034398204558905403523738912091909516510156577526370637723469243,\\n        903792244391531377123276432892896247924738784402045372115602887103675299839,\\n        112203415202699791888928570309186854585561656615192232544262649073999791317171,\\n        114801681136748880679062548782792743842998635558909635247841799223004802934045,\\n        111440818948676816539978930514468038603327388809824089593328295503672011604028,\\n        64965960071752809090438003157362764845283225351402746675238539375404528707397,\\n        98428510787134995495896453413714864789970336245473413374424598985988309743097\\n    ];\\n\\n    function MiMC5Feistel(uint256 _iL, uint256 _iR, uint256 _k) internal view returns(uint256 oL, uint256 oR) {\\n        uint8 nRounds = 20;\\n\\n        uint256 lastL = _iL;\\n        uint256 lastR = _iR;\\n\\n        uint256 mask;\\n        uint256 mask2;\\n        uint256 mask4;\\n        uint256 temp;\\n\\n        for(uint8 i = 0; i < nRounds; i++){\\n            mask = addmod(lastR, _k, p);\\n            mask = addmod(mask, c[i], p);\\n            mask2 = mulmod(mask, mask, p);\\n            mask4 = mulmod(mask2, mask2, p);\\n            mask = mulmod(mask4, mask, p);\\n\\n            temp = lastR;\\n            lastR = addmod(lastL, mask, p);\\n            lastL = temp;\\n        }\\n\\n        return (lastL, lastR);\\n    }\\n    function MiMC5Sponge(uint256[2] memory _ins, uint256 _k) external view returns(uint256 h) {\\n        uint256 lastR = 0;\\n        uint256 lastC = 0;\\n\\n        for(uint8 i = 0; i < _ins.length; i++){\\n            lastR = addmod(lastR, _ins[i], p);\\n            (lastR, lastC) = MiMC5Feistel(lastR, lastC, _k);\\n        }\\n\\n        h = lastR;\\n    }\\n}\",\"keccak256\":\"0x4282af99f3cdbd1943657894e287a58acf550868b1c3565d67c412247a08819e\",\"license\":\"MIT\"},\"contracts/nftMarketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"./Izknft.sol\\\";\\nimport \\\"./ImarketPlace.sol\\\";\\nimport \\\"./InewBasicNft.sol\\\";\\nimport \\\"./MIMCSponge.sol\\\";\\n\\ninterface IVerifier {\\n    function verifyProof(uint[2] calldata _pA, uint[2][2] calldata _pB, uint[2] calldata _pC, uint[2] calldata _pubSignals) external returns (bool);\\n}\\n\\ncontract NftMarketplace is ReentrancyGuard, INftMarketPlace{\\n    error PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\\n    error ItemNotForSale(address nftAddress, uint256 tokenId);\\n    error NotListed(address nftAddress, uint256 tokenId);\\n    error AlreadyListed(address nftAddress, uint256 tokenId);\\n    error NoProceeds();\\n    error NotOwner();\\n    error NotApprovedForMarketplace();\\n    error PriceMustBeAboveZero();\\n    error TransactionFailed();\\n    error NullifierAlreadyUsed();\\n    error CommitmentAlreadyUsed();\\n    error InvalidProof();\\n    error NotAuthority();\\n\\n    struct Listing {\\n        uint256 price;\\n        uint256 seller;\\n    }\\n\\n    event ItemListed(\\n        uint256 seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n\\n    event ItemCanceled(\\n        uint256 seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId\\n    );\\n\\n    event ItemBought(\\n        uint256 buyer,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n\\n    event ItemConverted(\\n        address zkNftAddress,\\n        uint256 indexed tokenID,\\n        address ercNftAddress\\n    );\\n\\n    Hasher hasher;\\n    uint256 creationFee = 0;\\n    uint256 marketFee = 0;\\n    uint256 conversionFee = 0;\\n    address verifier;\\n    address private authority;\\n    mapping(address => mapping(uint256 => Listing)) private s_listings;\\n    mapping(uint256 => uint256) private s_proceeds;\\n    mapping(uint256 => bool) private nullifierHashes;\\n    mapping(uint256 => bool) private commitments;\\n\\n    constructor(address _hasher, address _verifier) public {\\n        hasher = Hasher(_hasher);\\n        verifier = _verifier;\\n        authority = msg.sender;\\n    }\\n\\n    modifier notListed(\\n        address nftAddress,\\n        uint256 tokenId\\n    ) {\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price > 0) {\\n            revert AlreadyListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n\\n    modifier isListed(address nftAddress, uint256 tokenId) {\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\n        if (listing.price <= 0) {\\n            revert NotListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n\\n    modifier isOwner(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 spenderCom\\n    ) {\\n        IZkNFT nft = IZkNFT(nftAddress);\\n        uint256 ownerCom = nft.ownerOf(tokenId);\\n        if (spenderCom==ownerCom) {\\n            revert NotOwner();\\n        } \\n        _;\\n    }\\n\\n    function listItem(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 price,\\n        uint256 com\\n    )\\n        external\\n        notListed(nftAddress, tokenId)\\n        isOwner(nftAddress, tokenId, com)\\n    {\\n        if(commitments[com]){\\n            revert CommitmentAlreadyUsed();\\n        }\\n\\n        if (price <= 0) {\\n            revert PriceMustBeAboveZero();\\n        }\\n        IZkNFT nft = IZkNFT(nftAddress);\\n        if (nft.getApprovedAdd(tokenId) != address(this)) {\\n            revert NotApprovedForMarketplace();\\n        }\\n        s_listings[nftAddress][tokenId] = Listing(price, com);\\n        emit ItemListed(com, nftAddress, tokenId, price);\\n\\n        commitments[com] = true;\\n    }\\n\\n    function cancelListing(address nftAddress, uint256 tokenId, uint256 com)\\n        external\\n        isOwner(nftAddress, tokenId, com)\\n        isListed(nftAddress, tokenId)\\n    {\\n        delete (s_listings[nftAddress][tokenId]);\\n        emit ItemCanceled(com, nftAddress, tokenId);\\n    }\\n\\n    function buyItem(address nftAddress, uint256 tokenId, uint256 com)\\n        external\\n        payable\\n        isListed(nftAddress, tokenId)\\n        nonReentrant\\n    {\\n        Listing memory listedItem = s_listings[nftAddress][tokenId];\\n        if (msg.value < (listedItem.price + marketFee)) {\\n            revert PriceNotMet(nftAddress, tokenId, listedItem.price);\\n        }\\n        s_proceeds[listedItem.seller] += msg.value;\\n        delete (s_listings[nftAddress][tokenId]);\\n        IZkNFT(nftAddress).transferNFT(tokenId,com,msg.sender);\\n        emit ItemBought(com, nftAddress, tokenId, listedItem.price);\\n    }\\n\\n    function updateListing(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 newPrice,\\n        uint256 com\\n    )\\n        external\\n        isListed(nftAddress, tokenId)\\n        nonReentrant\\n        isOwner(nftAddress, tokenId, com)\\n    {\\n        if (newPrice <= 0) {\\n            revert PriceMustBeAboveZero();\\n        }\\n        s_listings[nftAddress][tokenId].price = newPrice;\\n        emit ItemListed(com, nftAddress, tokenId, newPrice);\\n    }\\n\\n    function withdrawProceeds(\\n        uint[2] calldata _pA,\\n        uint[2][2] calldata _pB, \\n        uint[2] calldata _pC, \\n        uint nullHash,\\n        uint256 com\\n    ) \\n        override external \\n    {\\n\\n        if(!nullifierHashes[nullHash]){\\n            revert NullifierAlreadyUsed();\\n        }\\n\\n        uint256 _addr = uint256(uint160(msg.sender));\\n\\n        (bool verifyOK, ) = verifier.call(abi.encodeCall(IVerifier.verifyProof, (_pA, _pB, _pC, [nullHash, _addr])));\\n\\n        if(!verifyOK){\\n            revert InvalidProof();\\n        }\\n\\n        nullifierHashes[nullHash] = true;\\n\\n        uint256 proceeds = s_proceeds[com];\\n        if (proceeds <= 0) {\\n            revert NoProceeds();\\n        }\\n        s_proceeds[com] = 0;\\n        (bool success, ) = payable(msg.sender).call{value: (proceeds - creationFee)}(\\\"\\\");\\n        \\n        if(!success){\\n            revert TransactionFailed();\\n        }\\n    }\\n\\n    function setCreationFee(uint256 _fee) public {\\n        if(msg.sender == authority){\\n            revert NotAuthority();\\n        }\\n        creationFee = _fee;\\n    }\\n\\n    function setBuyerFee(uint256 _fee) public {\\n        if(msg.sender == authority){\\n            revert NotAuthority();\\n        }\\n        marketFee = _fee;\\n    }\\n\\n    function setConversionFee(uint256 _fee) public {\\n        if(msg.sender == authority){\\n            revert NotAuthority();\\n        }\\n        conversionFee = _fee;\\n    }\\n\\n    function convertToERC721(address zkNftAddress, address convertableNft,uint256 tokenId) public payable {\\n\\n        (bool success, ) = payable(msg.sender).call{value: conversionFee}(\\\"\\\");\\n        if(!success){\\n            revert TransactionFailed();\\n        }\\n        string memory tokenURI = IZkNFT(zkNftAddress).getTokenURI(tokenId);\\n        IZkNFT(zkNftAddress).deleteZkNft(tokenId,msg.sender);\\n        INewBasicNFT(convertableNft).mintNft(tokenURI);\\n\\n        emit ItemConverted(zkNftAddress,tokenId,convertableNft);\\n    }\\n\\n    function getListing(address nftAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (Listing memory)\\n    {\\n        return s_listings[nftAddress][tokenId];\\n    }\\n\\n    function getProceeds(uint256 sellerCom) external view returns (uint256) {\\n        return s_proceeds[sellerCom];\\n    }\\n}\",\"keccak256\":\"0x0951bc1a8bbe3b26a979cdba3ed789d4197cce10b084f6e25933726c1f0444a5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":3249,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"hasher","offset":0,"slot":"1","type":"t_contract(Hasher)3066"},{"astId":3252,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"creationFee","offset":0,"slot":"2","type":"t_uint256"},{"astId":3255,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"marketFee","offset":0,"slot":"3","type":"t_uint256"},{"astId":3258,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"conversionFee","offset":0,"slot":"4","type":"t_uint256"},{"astId":3260,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"verifier","offset":0,"slot":"5","type":"t_address"},{"astId":3262,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"authority","offset":0,"slot":"6","type":"t_address"},{"astId":3269,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"s_listings","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)3210_storage))"},{"astId":3273,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"s_proceeds","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3277,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"nullifierHashes","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_bool)"},{"astId":3281,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"commitments","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Hasher)3066":{"encoding":"inplace","label":"contract Hasher","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)3210_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Listing)3210_storage)"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_struct(Listing)3210_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NftMarketplace.Listing)","numberOfBytes":"32","value":"t_struct(Listing)3210_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Listing)3210_storage":{"encoding":"inplace","label":"struct NftMarketplace.Listing","members":[{"astId":3207,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"price","offset":0,"slot":"0","type":"t_uint256"},{"astId":3209,"contract":"contracts/nftMarketPlace.sol:NftMarketplace","label":"seller","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/verifier.sol":{"Groth16Verifier":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"_pA","type":"uint256[2]"},{"internalType":"uint256[2][2]","name":"_pB","type":"uint256[2][2]"},{"internalType":"uint256[2]","name":"_pC","type":"uint256[2]"},{"internalType":"uint256[2]","name":"_pubSignals","type":"uint256[2]"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610649806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004a60048036038101906100459190610574565b610060565b60405161005791906105f8565b60405180910390f35b60006104dd565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110610098576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100ce576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa9150816100fe576000805260206000f35b505050505050565b600060808601600087017f294e51f0ca42558ee4af6acd8f37ca658f427fbfe94af9d359b7f0ef1e33574b81527f21cf7842e4fd0d7f5e763f740c9720cda38665c019a9935b55ee4ebbf369f9ea60208201526101a960008801357f262a5679fddf6219ccebcbba8869edbc18742ef6c73ea1d994a62e7d36104c397f2e450a16b754cced320a37ba2c0d1c0f364d0c791ef1d4ed7acd49594fd021098461009b565b6101f960208801357f2af7ad83d40bd37c1a52a46c78bfdcf6db696a3e33d5e4604a249fd9e072361a7f085d2093c38c139f540a85e5ba0dd18d47ca6014d89ab84dc3a0c7be4d4221fa8461009b565b833582527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208501357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020830152843560408301526020850135606083015260408501356080830152606085013560a08301527f10d8ec146370b7905f49ef7dcd47c8e99e0c7556039647f0476d00403f6ce45960c08301527f1ea308a6472e7165bb7c57f32503e8868c6de66afc79b2364baa6e07159875c560e08301527f2e33afc40886437b014d495e067666d6f20baf7d7cfd8a454f5b52fc0fffa5536101008301527f2bb6b971b135267c92695929603acba9ba192f72228d7f63808e973a0d971e636101208301527f0fb3236023234041d998b820e09366df7e10fe6be3d686af889eb0f20ee337b16101408301527f0e951fa4ec7706b54ed5078863288fcd172435387c5c672dd71c83ab58860a14610160830152600088015161018083015260206000018801516101a08301527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08301527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08301527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008301527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220830152853561024083015260208601356102608301527f2d73918b9863e57a8a0ce2e6b33df9f9981316ab6f33ef59955c6b009da1099c6102808301527f07fee39279785f930ee9fa345ebd66f472e855e9f087dc73b3da9f2235906c866102a08301527f22f293a7fd388e980da593491d2c6ab97ebd387f6ec83c9fb5d196298cee316f6102c08301527f2761127a1e8dd5a020278d6a5b17443cae9c9e8e78b40a43d48389884ca5f5976102e08301526020826103008460086107d05a03fa82518116935050505095945050505050565b60405161038081016040526104f56000840135610067565b6105026020840135610067565b61050f6040840135610067565b61051c818486888a610106565b8060005260206000f35b600080fd5b600080fd5b60008190508260206002028201111561054c5761054b61052b565b5b92915050565b60008190508260406002028201111561056e5761056d61052b565b5b92915050565b600080600080610140858703121561058f5761058e610526565b5b600061059d87828801610530565b94505060406105ae87828801610552565b93505060c06105bf87828801610530565b9250506101006105d187828801610530565b91505092959194509250565b60008115159050919050565b6105f2816105dd565b82525050565b600060208201905061060d60008301846105e9565b9291505056fea2646970667358221220a6eb8f6b48a1471a900cccd6f2dcb147442d4e971268d086543e5b2c823f04b564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x649 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF5C9D69E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x574 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x4DD JUMP JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 LT PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 PUSH1 0x60 DUP4 PUSH1 0x7 PUSH2 0x7D0 GAS SUB STATICCALL SWAP2 POP DUP2 PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 DUP4 PUSH1 0x80 DUP4 PUSH1 0x6 PUSH2 0x7D0 GAS SUB STATICCALL SWAP2 POP DUP2 PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP7 ADD PUSH1 0x0 DUP8 ADD PUSH32 0x294E51F0CA42558EE4AF6ACD8F37CA658F427FBFE94AF9D359B7F0EF1E33574B DUP2 MSTORE PUSH32 0x21CF7842E4FD0D7F5E763F740C9720CDA38665C019A9935B55EE4EBBF369F9EA PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A9 PUSH1 0x0 DUP9 ADD CALLDATALOAD PUSH32 0x262A5679FDDF6219CCEBCBBA8869EDBC18742EF6C73EA1D994A62E7D36104C39 PUSH32 0x2E450A16B754CCED320A37BA2C0D1C0F364D0C791EF1D4ED7ACD49594FD02109 DUP5 PUSH2 0x9B JUMP JUMPDEST PUSH2 0x1F9 PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH32 0x2AF7AD83D40BD37C1A52A46C78BFDCF6DB696A3E33D5E4604A249FD9E072361A PUSH32 0x85D2093C38C139F540A85E5BA0DD18D47CA6014D89AB84DC3A0C7BE4D4221FA DUP5 PUSH2 0x9B JUMP JUMPDEST DUP4 CALLDATALOAD DUP3 MSTORE PUSH32 0x30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47 PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH32 0x30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47 SUB MOD PUSH1 0x20 DUP4 ADD MSTORE DUP5 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH32 0x10D8EC146370B7905F49EF7DCD47C8E99E0C7556039647F0476D00403F6CE459 PUSH1 0xC0 DUP4 ADD MSTORE PUSH32 0x1EA308A6472E7165BB7C57F32503E8868C6DE66AFC79B2364BAA6E07159875C5 PUSH1 0xE0 DUP4 ADD MSTORE PUSH32 0x2E33AFC40886437B014D495E067666D6F20BAF7D7CFD8A454F5B52FC0FFFA553 PUSH2 0x100 DUP4 ADD MSTORE PUSH32 0x2BB6B971B135267C92695929603ACBA9BA192F72228D7F63808E973A0D971E63 PUSH2 0x120 DUP4 ADD MSTORE PUSH32 0xFB3236023234041D998B820E09366DF7E10FE6BE3D686AF889EB0F20EE337B1 PUSH2 0x140 DUP4 ADD MSTORE PUSH32 0xE951FA4EC7706B54ED5078863288FCD172435387C5C672DD71C83AB58860A14 PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0x0 DUP9 ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x0 ADD DUP9 ADD MLOAD PUSH2 0x1A0 DUP4 ADD MSTORE PUSH32 0x198E9393920D483A7260BFB731FB5D25F1AA493335A9E71297E485B7AEF312C2 PUSH2 0x1C0 DUP4 ADD MSTORE PUSH32 0x1800DEEF121F1E76426A00665E5C4479674322D4F75EDADD46DEBD5CD992F6ED PUSH2 0x1E0 DUP4 ADD MSTORE PUSH32 0x90689D0585FF075EC9E99AD690C3395BC4B313370B38EF355ACDADCD122975B PUSH2 0x200 DUP4 ADD MSTORE PUSH32 0x12C85EA5DB8C6DEB4AAB71808DCB408FE3D1E7690C43D37B4CE6CC0166FA7DAA PUSH2 0x220 DUP4 ADD MSTORE DUP6 CALLDATALOAD PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x260 DUP4 ADD MSTORE PUSH32 0x2D73918B9863E57A8A0CE2E6B33DF9F9981316AB6F33EF59955C6B009DA1099C PUSH2 0x280 DUP4 ADD MSTORE PUSH32 0x7FEE39279785F930EE9FA345EBD66F472E855E9F087DC73B3DA9F2235906C86 PUSH2 0x2A0 DUP4 ADD MSTORE PUSH32 0x22F293A7FD388E980DA593491D2C6AB97EBD387F6EC83C9FB5D196298CEE316F PUSH2 0x2C0 DUP4 ADD MSTORE PUSH32 0x2761127A1E8DD5A020278D6A5B17443CAE9C9E8E78B40A43D48389884CA5F597 PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH2 0x300 DUP5 PUSH1 0x8 PUSH2 0x7D0 GAS SUB STATICCALL DUP3 MLOAD DUP2 AND SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 DUP2 ADD PUSH1 0x40 MSTORE PUSH2 0x4F5 PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH2 0x67 JUMP JUMPDEST PUSH2 0x502 PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x67 JUMP JUMPDEST PUSH2 0x50F PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x67 JUMP JUMPDEST PUSH2 0x51C DUP2 DUP5 DUP7 DUP9 DUP11 PUSH2 0x106 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54B PUSH2 0x52B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x40 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x52B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x526 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59D DUP8 DUP3 DUP9 ADD PUSH2 0x530 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x5AE DUP8 DUP3 DUP9 ADD PUSH2 0x552 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x5BF DUP8 DUP3 DUP9 ADD PUSH2 0x530 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x5D1 DUP8 DUP3 DUP9 ADD PUSH2 0x530 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F2 DUP2 PUSH2 0x5DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xEB DUP16 PUSH12 0x48A1471A900CCCD6F2DCB147 DIFFICULTY 0x2D 0x4E SWAP8 SLT PUSH9 0xD086543E5B2C823F04 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"831:6695:19:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@verifyProof_3997":{"entryPoint":96,"id":3997,"parameterSlots":4,"returnSlots":1},"abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr":{"entryPoint":1362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$2_calldata_ptr":{"entryPoint":1328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptrt_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptr":{"entryPoint":1396,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1513,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1528,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1501,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1323,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1318,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2478:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"423:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:22"},"nodeType":"YulFunctionCall","src":"433:12:22"},"nodeType":"YulExpressionStatement","src":"433:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"334:117:22"},{"body":{"nodeType":"YulBlock","src":"555:169:22","statements":[{"nodeType":"YulAssignment","src":"565:18:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"577:6:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"565:8:22"}]},{"body":{"nodeType":"YulBlock","src":"635:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"637:77:22"},"nodeType":"YulFunctionCall","src":"637:79:22"},"nodeType":"YulExpressionStatement","src":"637:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"602:8:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"616:4:22","type":"","value":"0x02"},{"kind":"number","nodeType":"YulLiteral","src":"622:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"612:3:22"},"nodeType":"YulFunctionCall","src":"612:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"598:3:22"},"nodeType":"YulFunctionCall","src":"598:30:22"},{"name":"end","nodeType":"YulIdentifier","src":"630:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"595:2:22"},"nodeType":"YulFunctionCall","src":"595:39:22"},"nodeType":"YulIf","src":"592:126:22"}]},"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"530:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"538:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"546:8:22","type":""}],"src":"475:249:22"},{"body":{"nodeType":"YulBlock","src":"856:169:22","statements":[{"nodeType":"YulAssignment","src":"866:18:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"878:6:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"866:8:22"}]},{"body":{"nodeType":"YulBlock","src":"936:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"938:77:22"},"nodeType":"YulFunctionCall","src":"938:79:22"},"nodeType":"YulExpressionStatement","src":"938:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"903:8:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"917:4:22","type":"","value":"0x02"},{"kind":"number","nodeType":"YulLiteral","src":"923:4:22","type":"","value":"0x40"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"913:3:22"},"nodeType":"YulFunctionCall","src":"913:15:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"899:3:22"},"nodeType":"YulFunctionCall","src":"899:30:22"},{"name":"end","nodeType":"YulIdentifier","src":"931:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"896:2:22"},"nodeType":"YulFunctionCall","src":"896:39:22"},"nodeType":"YulIf","src":"893:126:22"}]},"name":"abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"831:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"839:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"847:8:22","type":""}],"src":"751:274:22"},{"body":{"nodeType":"YulBlock","src":"1273:775:22","statements":[{"body":{"nodeType":"YulBlock","src":"1320:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1322:77:22"},"nodeType":"YulFunctionCall","src":"1322:79:22"},"nodeType":"YulExpressionStatement","src":"1322:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1294:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1290:3:22"},"nodeType":"YulFunctionCall","src":"1290:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1315:3:22","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1286:3:22"},"nodeType":"YulFunctionCall","src":"1286:33:22"},"nodeType":"YulIf","src":"1283:120:22"},{"nodeType":"YulBlock","src":"1413:142:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1428:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1442:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1432:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1457:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1528:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:22"},"nodeType":"YulFunctionCall","src":"1513:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1537:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"1467:45:22"},"nodeType":"YulFunctionCall","src":"1467:78:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1457:6:22"}]}]},{"nodeType":"YulBlock","src":"1565:168:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1580:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1594:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1584:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1610:113:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1695:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1706:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1691:3:22"},"nodeType":"YulFunctionCall","src":"1691:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1715:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr","nodeType":"YulIdentifier","src":"1620:70:22"},"nodeType":"YulFunctionCall","src":"1620:103:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1610:6:22"}]}]},{"nodeType":"YulBlock","src":"1743:144:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1758:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1772:3:22","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1762:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1789:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1849:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1860:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1845:3:22"},"nodeType":"YulFunctionCall","src":"1845:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1869:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"1799:45:22"},"nodeType":"YulFunctionCall","src":"1799:78:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1789:6:22"}]}]},{"nodeType":"YulBlock","src":"1897:144:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1912:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1926:3:22","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1916:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1943:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2003:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2014:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1999:3:22"},"nodeType":"YulFunctionCall","src":"1999:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2023:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"1953:45:22"},"nodeType":"YulFunctionCall","src":"1953:78:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1943:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptrt_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1219:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1230:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1242:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1250:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1258:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1266:6:22","type":""}],"src":"1031:1017:22"},{"body":{"nodeType":"YulBlock","src":"2096:48:22","statements":[{"nodeType":"YulAssignment","src":"2106:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2131:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2124:6:22"},"nodeType":"YulFunctionCall","src":"2124:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2117:6:22"},"nodeType":"YulFunctionCall","src":"2117:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2106:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2078:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2088:7:22","type":""}],"src":"2054:90:22"},{"body":{"nodeType":"YulBlock","src":"2209:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2226:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2246:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2231:14:22"},"nodeType":"YulFunctionCall","src":"2231:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2219:6:22"},"nodeType":"YulFunctionCall","src":"2219:34:22"},"nodeType":"YulExpressionStatement","src":"2219:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2197:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2204:3:22","type":""}],"src":"2150:109:22"},{"body":{"nodeType":"YulBlock","src":"2357:118:22","statements":[{"nodeType":"YulAssignment","src":"2367:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:22"},"nodeType":"YulFunctionCall","src":"2375:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2367:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2441:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2454:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2465:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2450:3:22"},"nodeType":"YulFunctionCall","src":"2450:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2403:37:22"},"nodeType":"YulFunctionCall","src":"2403:65:22"},"nodeType":"YulExpressionStatement","src":"2403:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2329:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2341:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2352:4:22","type":""}],"src":"2265:210:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[2]\n    function abi_decode_t_array$_t_uint256_$2_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x02, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[2][2]\n    function abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x02, 0x40)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptrt_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptrt_array$_t_uint256_$2_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 320) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value1 := abi_decode_t_array$_t_array$_t_uint256_$2_calldata_ptr_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value2 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value3 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004a60048036038101906100459190610574565b610060565b60405161005791906105f8565b60405180910390f35b60006104dd565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110610098576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100ce576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa9150816100fe576000805260206000f35b505050505050565b600060808601600087017f294e51f0ca42558ee4af6acd8f37ca658f427fbfe94af9d359b7f0ef1e33574b81527f21cf7842e4fd0d7f5e763f740c9720cda38665c019a9935b55ee4ebbf369f9ea60208201526101a960008801357f262a5679fddf6219ccebcbba8869edbc18742ef6c73ea1d994a62e7d36104c397f2e450a16b754cced320a37ba2c0d1c0f364d0c791ef1d4ed7acd49594fd021098461009b565b6101f960208801357f2af7ad83d40bd37c1a52a46c78bfdcf6db696a3e33d5e4604a249fd9e072361a7f085d2093c38c139f540a85e5ba0dd18d47ca6014d89ab84dc3a0c7be4d4221fa8461009b565b833582527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208501357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020830152843560408301526020850135606083015260408501356080830152606085013560a08301527f10d8ec146370b7905f49ef7dcd47c8e99e0c7556039647f0476d00403f6ce45960c08301527f1ea308a6472e7165bb7c57f32503e8868c6de66afc79b2364baa6e07159875c560e08301527f2e33afc40886437b014d495e067666d6f20baf7d7cfd8a454f5b52fc0fffa5536101008301527f2bb6b971b135267c92695929603acba9ba192f72228d7f63808e973a0d971e636101208301527f0fb3236023234041d998b820e09366df7e10fe6be3d686af889eb0f20ee337b16101408301527f0e951fa4ec7706b54ed5078863288fcd172435387c5c672dd71c83ab58860a14610160830152600088015161018083015260206000018801516101a08301527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08301527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08301527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008301527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220830152853561024083015260208601356102608301527f2d73918b9863e57a8a0ce2e6b33df9f9981316ab6f33ef59955c6b009da1099c6102808301527f07fee39279785f930ee9fa345ebd66f472e855e9f087dc73b3da9f2235906c866102a08301527f22f293a7fd388e980da593491d2c6ab97ebd387f6ec83c9fb5d196298cee316f6102c08301527f2761127a1e8dd5a020278d6a5b17443cae9c9e8e78b40a43d48389884ca5f5976102e08301526020826103008460086107d05a03fa82518116935050505095945050505050565b60405161038081016040526104f56000840135610067565b6105026020840135610067565b61050f6040840135610067565b61051c818486888a610106565b8060005260206000f35b600080fd5b600080fd5b60008190508260206002028201111561054c5761054b61052b565b5b92915050565b60008190508260406002028201111561056e5761056d61052b565b5b92915050565b600080600080610140858703121561058f5761058e610526565b5b600061059d87828801610530565b94505060406105ae87828801610552565b93505060c06105bf87828801610530565b9250506101006105d187828801610530565b91505092959194509250565b60008115159050919050565b6105f2816105dd565b82525050565b600060208201905061060d60008301846105e9565b9291505056fea2646970667358221220a6eb8f6b48a1471a900cccd6f2dcb147442d4e971268d086543e5b2c823f04b564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF5C9D69E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x574 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x4DD JUMP JUMPDEST PUSH32 0x30644E72E131A029B85045B68181585D2833E84879B9709143E1F593F0000001 DUP2 LT PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP2 PUSH1 0x60 DUP4 PUSH1 0x7 PUSH2 0x7D0 GAS SUB STATICCALL SWAP2 POP DUP2 PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 DUP4 PUSH1 0x80 DUP4 PUSH1 0x6 PUSH2 0x7D0 GAS SUB STATICCALL SWAP2 POP DUP2 PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP7 ADD PUSH1 0x0 DUP8 ADD PUSH32 0x294E51F0CA42558EE4AF6ACD8F37CA658F427FBFE94AF9D359B7F0EF1E33574B DUP2 MSTORE PUSH32 0x21CF7842E4FD0D7F5E763F740C9720CDA38665C019A9935B55EE4EBBF369F9EA PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A9 PUSH1 0x0 DUP9 ADD CALLDATALOAD PUSH32 0x262A5679FDDF6219CCEBCBBA8869EDBC18742EF6C73EA1D994A62E7D36104C39 PUSH32 0x2E450A16B754CCED320A37BA2C0D1C0F364D0C791EF1D4ED7ACD49594FD02109 DUP5 PUSH2 0x9B JUMP JUMPDEST PUSH2 0x1F9 PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH32 0x2AF7AD83D40BD37C1A52A46C78BFDCF6DB696A3E33D5E4604A249FD9E072361A PUSH32 0x85D2093C38C139F540A85E5BA0DD18D47CA6014D89AB84DC3A0C7BE4D4221FA DUP5 PUSH2 0x9B JUMP JUMPDEST DUP4 CALLDATALOAD DUP3 MSTORE PUSH32 0x30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47 PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH32 0x30644E72E131A029B85045B68181585D97816A916871CA8D3C208C16D87CFD47 SUB MOD PUSH1 0x20 DUP4 ADD MSTORE DUP5 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH32 0x10D8EC146370B7905F49EF7DCD47C8E99E0C7556039647F0476D00403F6CE459 PUSH1 0xC0 DUP4 ADD MSTORE PUSH32 0x1EA308A6472E7165BB7C57F32503E8868C6DE66AFC79B2364BAA6E07159875C5 PUSH1 0xE0 DUP4 ADD MSTORE PUSH32 0x2E33AFC40886437B014D495E067666D6F20BAF7D7CFD8A454F5B52FC0FFFA553 PUSH2 0x100 DUP4 ADD MSTORE PUSH32 0x2BB6B971B135267C92695929603ACBA9BA192F72228D7F63808E973A0D971E63 PUSH2 0x120 DUP4 ADD MSTORE PUSH32 0xFB3236023234041D998B820E09366DF7E10FE6BE3D686AF889EB0F20EE337B1 PUSH2 0x140 DUP4 ADD MSTORE PUSH32 0xE951FA4EC7706B54ED5078863288FCD172435387C5C672DD71C83AB58860A14 PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0x0 DUP9 ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x0 ADD DUP9 ADD MLOAD PUSH2 0x1A0 DUP4 ADD MSTORE PUSH32 0x198E9393920D483A7260BFB731FB5D25F1AA493335A9E71297E485B7AEF312C2 PUSH2 0x1C0 DUP4 ADD MSTORE PUSH32 0x1800DEEF121F1E76426A00665E5C4479674322D4F75EDADD46DEBD5CD992F6ED PUSH2 0x1E0 DUP4 ADD MSTORE PUSH32 0x90689D0585FF075EC9E99AD690C3395BC4B313370B38EF355ACDADCD122975B PUSH2 0x200 DUP4 ADD MSTORE PUSH32 0x12C85EA5DB8C6DEB4AAB71808DCB408FE3D1E7690C43D37B4CE6CC0166FA7DAA PUSH2 0x220 DUP4 ADD MSTORE DUP6 CALLDATALOAD PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x260 DUP4 ADD MSTORE PUSH32 0x2D73918B9863E57A8A0CE2E6B33DF9F9981316AB6F33EF59955C6B009DA1099C PUSH2 0x280 DUP4 ADD MSTORE PUSH32 0x7FEE39279785F930EE9FA345EBD66F472E855E9F087DC73B3DA9F2235906C86 PUSH2 0x2A0 DUP4 ADD MSTORE PUSH32 0x22F293A7FD388E980DA593491D2C6AB97EBD387F6EC83C9FB5D196298CEE316F PUSH2 0x2C0 DUP4 ADD MSTORE PUSH32 0x2761127A1E8DD5A020278D6A5B17443CAE9C9E8E78B40A43D48389884CA5F597 PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH2 0x300 DUP5 PUSH1 0x8 PUSH2 0x7D0 GAS SUB STATICCALL DUP3 MLOAD DUP2 AND SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 DUP2 ADD PUSH1 0x40 MSTORE PUSH2 0x4F5 PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH2 0x67 JUMP JUMPDEST PUSH2 0x502 PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x67 JUMP JUMPDEST PUSH2 0x50F PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x67 JUMP JUMPDEST PUSH2 0x51C DUP2 DUP5 DUP7 DUP9 DUP11 PUSH2 0x106 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54B PUSH2 0x52B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x40 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x52B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x526 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59D DUP8 DUP3 DUP9 ADD PUSH2 0x530 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x5AE DUP8 DUP3 DUP9 ADD PUSH2 0x552 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x5BF DUP8 DUP3 DUP9 ADD PUSH2 0x530 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x5D1 DUP8 DUP3 DUP9 ADD PUSH2 0x530 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F2 DUP2 PUSH2 0x5DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xEB DUP16 PUSH12 0x48A1471A900CCCD6F2DCB147 DIFFICULTY 0x2D 0x4E SWAP8 SLT PUSH9 0xD086543E5B2C823F04 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"831:6695:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3473:4050;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3614:4;3653:163;;;3710:1;3707;3704:8;3694:108;;3746:1;3743;3736:12;3779:4;3776:1;3769:15;3694:108;3653:163;:::o;3920:738::-;3971:11;4016:4;4010:11;4050:1;4045:3;4038:14;4090:1;4085:2;4080:3;4076:12;4069:23;4130:1;4125:2;4120:3;4116:12;4109:23;4207:2;4202:3;4198:2;4193:3;4190:1;4183:4;4176:5;4172:16;4161:49;4150:60;;4238:7;4228:107;;4279:1;4276;4269:12;4312:4;4309:1;4302:15;4228:107;4380:2;4374:9;4369:2;4364:3;4360:12;4353:31;4436:2;4432;4428:11;4422:18;4417:2;4412:3;4408:12;4401:40;4516:2;4512;4507:3;4502;4499:1;4492:4;4485:5;4481:16;4470:49;4459:60;;4547:7;4537:107;;4588:1;4585;4578:12;4621:4;4618:1;4611:15;4537:107;3953:705;;3920:738;;;;:::o;4672:2294::-;4727:4;4777:8;4771:4;4767:19;4825:3;4819:4;4815:14;4860:4;4854;4847:18;4904:4;4899:2;4893:4;4889:13;4882:27;4999:62;5057:1;5045:10;5041:18;5028:32;5022:4;5016;5010;4999:62;:::i;:::-;5095:63;5153:2;5141:10;5137:19;5124:33;5118:4;5112;5106;5095:63;:::i;:::-;5246:2;5233:16;5222:9;5215:35;5333:1;5326:2;5322;5318:11;5305:25;5302:1;5298:33;5294:41;5289:2;5278:9;5274:18;5267:69;5415:2;5402:16;5397:2;5386:9;5382:18;5375:44;5484:2;5480;5476:11;5463:25;5458:2;5447:9;5443:18;5436:53;5555:2;5551;5547:11;5534:25;5528:3;5517:9;5513:19;5506:54;5626:2;5622;5618:11;5605:25;5599:3;5588:9;5584:19;5577:54;5703:6;5697:3;5686:9;5682:19;5675:35;5755:6;5749:3;5738:9;5734:19;5727:35;5833:6;5827:3;5816:9;5812:19;5805:35;5885:6;5879:3;5868:9;5864:19;5857:35;5937:6;5931:3;5920:9;5916:19;5909:35;5989:6;5983:3;5972:9;5968:19;5961:35;6082:3;6076:4;6072:14;6066:21;6060:3;6049:9;6045:19;6038:50;6158:2;6153:3;6149:12;6143:4;6139:23;6133:30;6127:3;6116:9;6112:19;6105:59;6237:7;6231:3;6220:9;6216:19;6209:36;6290:7;6284:3;6273:9;6269:19;6262:36;6343:7;6337:3;6326:9;6322:19;6315:36;6396:7;6390:3;6379:9;6375:19;6368:36;6484:2;6471:16;6465:3;6454:9;6450:19;6443:45;6554:2;6550;6546:11;6533:25;6527:3;6516:9;6512:19;6505:54;6631:7;6625:3;6614:9;6610:19;6603:36;6684:7;6678:3;6667:9;6663:19;6656:36;6737:7;6731:3;6720:9;6716:19;6709:36;6790:7;6784:3;6773:9;6769:19;6762:36;6891:4;6880:9;6875:3;6864:9;6861:1;6854:4;6847:5;6843:16;6832:64;6941:9;6935:16;6926:7;6922:30;6914:38;;4732:2234;;;4672:2294;;;;;;;:::o;:::-;6998:4;6992:11;7039:8;7033:4;7029:19;7023:4;7016:33;7127:45;7168:1;7155:11;7151:19;7138:33;7127:45;:::i;:::-;7198:46;7239:2;7226:11;7222:20;7209:34;7198:46;:::i;:::-;7270;7311:2;7298:11;7294:20;7281:34;7270:46;:::i;:::-;7398;7439:4;7426:11;7421:3;7416;7411;7398:46;:::i;:::-;7468:7;7465:1;7458:18;7500:4;7497:1;7490:15;88:117:22;197:1;194;187:12;334:117;443:1;440;433:12;475:249;546:8;577:6;565:18;;630:3;622:4;616;612:15;602:8;598:30;595:39;592:126;;;637:79;;:::i;:::-;592:126;475:249;;;;:::o;751:274::-;847:8;878:6;866:18;;931:3;923:4;917;913:15;903:8;899:30;896:39;893:126;;;938:79;;:::i;:::-;893:126;751:274;;;;:::o;1031:1017::-;1242:6;1250;1258;1266;1315:3;1303:9;1294:7;1290:23;1286:33;1283:120;;;1322:79;;:::i;:::-;1283:120;1442:1;1467:78;1537:7;1528:6;1517:9;1513:22;1467:78;:::i;:::-;1457:88;;1413:142;1594:2;1620:103;1715:7;1706:6;1695:9;1691:22;1620:103;:::i;:::-;1610:113;;1565:168;1772:3;1799:78;1869:7;1860:6;1849:9;1845:22;1799:78;:::i;:::-;1789:88;;1743:144;1926:3;1953:78;2023:7;2014:6;2003:9;1999:22;1953:78;:::i;:::-;1943:88;;1897:144;1031:1017;;;;;;;:::o;2054:90::-;2088:7;2131:5;2124:13;2117:21;2106:32;;2054:90;;;:::o;2150:109::-;2231:21;2246:5;2231:21;:::i;:::-;2226:3;2219:34;2150:109;;:::o;2265:210::-;2352:4;2390:2;2379:9;2375:18;2367:26;;2403:65;2465:1;2454:9;2450:17;2441:6;2403:65;:::i;:::-;2265:210;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"321800","executionCost":"362","totalCost":"322162"},"external":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[2])":"infinite"}},"methodIdentifiers":{"verifyProof(uint256[2],uint256[2][2],uint256[2],uint256[2])":"f5c9d69e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_pA\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"_pB\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_pC\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_pubSignals\",\"type\":\"uint256[2]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/verifier.sol\":\"Groth16Verifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/verifier.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n/*\\n    Copyright 2021 0KIMS association.\\n\\n    This file is generated with [snarkJS](https://github.com/iden3/snarkjs).\\n\\n    snarkJS is a free software: you can redistribute it and/or modify it\\n    under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    snarkJS is distributed in the hope that it will be useful, but WITHOUT\\n    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\\n    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public\\n    License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with snarkJS. If not, see <https://www.gnu.org/licenses/>.\\n*/\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\ncontract Groth16Verifier {\\n    // Scalar field size\\n    uint256 constant r    = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    // Base field size\\n    uint256 constant q   = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\\n\\n    // Verification Key data\\n    uint256 constant alphax  = 7620273905133455123923188699501120573688059407543408093221814931786692355161;\\n    uint256 constant alphay  = 13857441225875067601898474760724102506099012550535652825584149312692884633029;\\n    uint256 constant betax1  = 20897713325791917749152979592608001826377651498226262868218962092957695452499;\\n    uint256 constant betax2  = 19772298543080390696675496260463308972299381250046108538257960605389088562787;\\n    uint256 constant betay1  = 7101202506321775967447212738930159242589068036862951607439995588485388122033;\\n    uint256 constant betay2  = 6595858493288377996593226572718813908774170626004437745431995466988623628820;\\n    uint256 constant gammax1 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;\\n    uint256 constant gammax2 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;\\n    uint256 constant gammay1 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;\\n    uint256 constant gammay2 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;\\n    uint256 constant deltax1 = 20558270115397936369807699592728941676595831640268483057758244987274363210140;\\n    uint256 constant deltax2 = 3616539739901815211129489455227491940188071316798615060833396830000309628038;\\n    uint256 constant deltay1 = 15807232927198773835089609773558528117044556871644866466059032161302308860271;\\n    uint256 constant deltay2 = 17811712783796344117685869905298346681245374243878172914065402128937490183575;\\n\\n    \\n    uint256 constant IC0x = 18683206396108297281768026122712053156557057023847304752001085986434851231563;\\n    uint256 constant IC0y = 15292891358690313625524458286710737641994471158378654608038730687629138459114;\\n    \\n    uint256 constant IC1x = 20928373112189291242176934432236227890765702946212614242714929771218375549193;\\n    uint256 constant IC1y = 17262692661960089926838107560686625362169539002876994268180104156182217772089;\\n    \\n    uint256 constant IC2x = 3783044405279299285640680055786914311095578968193533986153465386793559007738;\\n    uint256 constant IC2y = 19434748421699528219555872959149036745768512038761704896854072249116844504602;\\n    \\n \\n    // Memory data\\n    uint16 constant pVk = 0;\\n    uint16 constant pPairing = 128;\\n\\n    uint16 constant pLastMem = 896;\\n\\n    function verifyProof(uint[2] calldata _pA, uint[2][2] calldata _pB, uint[2] calldata _pC, uint[2] calldata _pubSignals) public view returns (bool) {\\n        assembly {\\n            function checkField(v) {\\n                if iszero(lt(v, r)) {\\n                    mstore(0, 0)\\n                    return(0, 0x20)\\n                }\\n            }\\n            \\n            // G1 function to multiply a G1 value(x,y) to value in an address\\n            function g1_mulAccC(pR, x, y, s) {\\n                let success\\n                let mIn := mload(0x40)\\n                mstore(mIn, x)\\n                mstore(add(mIn, 32), y)\\n                mstore(add(mIn, 64), s)\\n\\n                success := staticcall(sub(gas(), 2000), 7, mIn, 96, mIn, 64)\\n\\n                if iszero(success) {\\n                    mstore(0, 0)\\n                    return(0, 0x20)\\n                }\\n\\n                mstore(add(mIn, 64), mload(pR))\\n                mstore(add(mIn, 96), mload(add(pR, 32)))\\n\\n                success := staticcall(sub(gas(), 2000), 6, mIn, 128, pR, 64)\\n\\n                if iszero(success) {\\n                    mstore(0, 0)\\n                    return(0, 0x20)\\n                }\\n            }\\n\\n            function checkPairing(pA, pB, pC, pubSignals, pMem) -> isOk {\\n                let _pPairing := add(pMem, pPairing)\\n                let _pVk := add(pMem, pVk)\\n\\n                mstore(_pVk, IC0x)\\n                mstore(add(_pVk, 32), IC0y)\\n\\n                // Compute the linear combination vk_x\\n                \\n                g1_mulAccC(_pVk, IC1x, IC1y, calldataload(add(pubSignals, 0)))\\n                \\n                g1_mulAccC(_pVk, IC2x, IC2y, calldataload(add(pubSignals, 32)))\\n                \\n\\n                // -A\\n                mstore(_pPairing, calldataload(pA))\\n                mstore(add(_pPairing, 32), mod(sub(q, calldataload(add(pA, 32))), q))\\n\\n                // B\\n                mstore(add(_pPairing, 64), calldataload(pB))\\n                mstore(add(_pPairing, 96), calldataload(add(pB, 32)))\\n                mstore(add(_pPairing, 128), calldataload(add(pB, 64)))\\n                mstore(add(_pPairing, 160), calldataload(add(pB, 96)))\\n\\n                // alpha1\\n                mstore(add(_pPairing, 192), alphax)\\n                mstore(add(_pPairing, 224), alphay)\\n\\n                // beta2\\n                mstore(add(_pPairing, 256), betax1)\\n                mstore(add(_pPairing, 288), betax2)\\n                mstore(add(_pPairing, 320), betay1)\\n                mstore(add(_pPairing, 352), betay2)\\n\\n                // vk_x\\n                mstore(add(_pPairing, 384), mload(add(pMem, pVk)))\\n                mstore(add(_pPairing, 416), mload(add(pMem, add(pVk, 32))))\\n\\n\\n                // gamma2\\n                mstore(add(_pPairing, 448), gammax1)\\n                mstore(add(_pPairing, 480), gammax2)\\n                mstore(add(_pPairing, 512), gammay1)\\n                mstore(add(_pPairing, 544), gammay2)\\n\\n                // C\\n                mstore(add(_pPairing, 576), calldataload(pC))\\n                mstore(add(_pPairing, 608), calldataload(add(pC, 32)))\\n\\n                // delta2\\n                mstore(add(_pPairing, 640), deltax1)\\n                mstore(add(_pPairing, 672), deltax2)\\n                mstore(add(_pPairing, 704), deltay1)\\n                mstore(add(_pPairing, 736), deltay2)\\n\\n\\n                let success := staticcall(sub(gas(), 2000), 8, _pPairing, 768, _pPairing, 0x20)\\n\\n                isOk := and(success, mload(_pPairing))\\n            }\\n\\n            let pMem := mload(0x40)\\n            mstore(0x40, add(pMem, pLastMem))\\n\\n            // Validate that all evaluations \\u2208 F\\n            \\n            checkField(calldataload(add(_pubSignals, 0)))\\n            \\n            checkField(calldataload(add(_pubSignals, 32)))\\n            \\n            checkField(calldataload(add(_pubSignals, 64)))\\n            \\n\\n            // Validate all evaluations\\n            let isValid := checkPairing(_pA, _pB, _pC, _pubSignals, pMem)\\n\\n            mstore(0, isValid)\\n             return(0, 0x20)\\n         }\\n     }\\n }\\n\",\"keccak256\":\"0xdb6cbe81890e0173357abe2805dbb24eae57ecd9ede09a14d29c4bc8fbde3d06\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/zkContract.sol":{"ZkContract":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"nullifierHash","type":"uint256"}],"name":"Check","type":"event"},{"inputs":[{"internalType":"uint256","name":"com","type":"uint256"}],"name":"com_exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commitment","type":"uint256"}],"name":"minting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"null_exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"registerNull","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"com","type":"uint256"}],"name":"regiterCom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610610806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630af54ca31461005c578063602a859c1461008c578063785dfae8146100a8578063c25879a3146100d8578063f2cee92b146100f4575b600080fd5b610076600480360381019061007191906103f3565b610110565b6040516100839190610457565b60405180910390f35b6100a660048036038101906100a191906103f3565b610145565b005b6100c260048036038101906100bd91906104a8565b61017f565b6040516100cf9190610457565b60405180910390f35b6100f260048036038101906100ed91906104a8565b6101a9565b005b61010e600480360381019061010991906104a8565b6101d8565b005b60006002826040516101229190610546565b908152602001604051809103902060009054906101000a900460ff169050919050565b60016002826040516101579190610546565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b60006003600083815260200190815260200160002060009054906101000a900460ff169050919050565b60016003600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6003600082815260200190815260200160002060009054906101000a900460ff1615610239576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610230906105ba565b60405180910390fd5b6000819050610246610277565b60016003600085815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6040518060400160405280600290602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610300826102b7565b810181811067ffffffffffffffff8211171561031f5761031e6102c8565b5b80604052505050565b6000610332610299565b905061033e82826102f7565b919050565b600067ffffffffffffffff82111561035e5761035d6102c8565b5b610367826102b7565b9050602081019050919050565b82818337600083830152505050565b600061039661039184610343565b610328565b9050828152602081018484840111156103b2576103b16102b2565b5b6103bd848285610374565b509392505050565b600082601f8301126103da576103d96102ad565b5b81356103ea848260208601610383565b91505092915050565b600060208284031215610409576104086102a3565b5b600082013567ffffffffffffffff811115610427576104266102a8565b5b610433848285016103c5565b91505092915050565b60008115159050919050565b6104518161043c565b82525050565b600060208201905061046c6000830184610448565b92915050565b6000819050919050565b61048581610472565b811461049057600080fd5b50565b6000813590506104a28161047c565b92915050565b6000602082840312156104be576104bd6102a3565b5b60006104cc84828501610493565b91505092915050565b600081519050919050565b600081905092915050565b60005b838110156105095780820151818401526020810190506104ee565b60008484015250505050565b6000610520826104d5565b61052a81856104e0565b935061053a8185602086016104eb565b80840191505092915050565b60006105528284610515565b915081905092915050565b600082825260208201905092915050565b7f4475706c696361746520636f6d6d69746d656e7420686173682e000000000000600082015250565b60006105a4601a8361055d565b91506105af8261056e565b602082019050919050565b600060208201905081810360008301526105d381610597565b905091905056fea2646970667358221220286f2238d63eefd208e39ac4b04ed16af89198a49c6af41fbbcb29e97351eef464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x610 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF54CA3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x602A859C EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x785DFAE8 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xC25879A3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xF2CEE92B EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x246 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x300 DUP3 PUSH2 0x2B7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x31F JUMPI PUSH2 0x31E PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x332 PUSH2 0x299 JUMP JUMPDEST SWAP1 POP PUSH2 0x33E DUP3 DUP3 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35E JUMPI PUSH2 0x35D PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST PUSH2 0x367 DUP3 PUSH2 0x2B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 PUSH2 0x391 DUP5 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3B2 JUMPI PUSH2 0x3B1 PUSH2 0x2B2 JUMP JUMPDEST JUMPDEST PUSH2 0x3BD DUP5 DUP3 DUP6 PUSH2 0x374 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DA JUMPI PUSH2 0x3D9 PUSH2 0x2AD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x409 JUMPI PUSH2 0x408 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x427 JUMPI PUSH2 0x426 PUSH2 0x2A8 JUMP JUMPDEST JUMPDEST PUSH2 0x433 DUP5 DUP3 DUP6 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x451 DUP2 PUSH2 0x43C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x472 JUMP JUMPDEST DUP2 EQ PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A2 DUP2 PUSH2 0x47C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP5 DUP3 DUP6 ADD PUSH2 0x493 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x509 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520 DUP3 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x52A DUP2 DUP6 PUSH2 0x4E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x53A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x552 DUP3 DUP5 PUSH2 0x515 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4475706C696361746520636F6D6D69746D656E7420686173682E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A4 PUSH1 0x1A DUP4 PUSH2 0x55D JUMP JUMPDEST SWAP2 POP PUSH2 0x5AF DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D3 DUP2 PUSH2 0x597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH16 0x2238D63EEFD208E39AC4B04ED16AF891 SWAP9 LOG4 SWAP13 PUSH11 0xF41FBBCB29E97351EEF464 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"84:848:20:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@com_exists_4087":{"entryPoint":383,"id":4087,"parameterSlots":1,"returnSlots":1},"@minting_4051":{"entryPoint":472,"id":4051,"parameterSlots":1,"returnSlots":0},"@null_exists_4063":{"entryPoint":272,"id":4063,"parameterSlots":1,"returnSlots":1},"@registerNull_4075":{"entryPoint":325,"id":4075,"parameterSlots":1,"returnSlots":0},"@regiterCom_4099":{"entryPoint":425,"id":4099,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":899,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":1011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1096,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310_to_t_string_memory_ptr_fromStack":{"entryPoint":1431,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1466,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":808,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":665,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":835,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1237,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1373,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1248,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1084,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1138,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":884,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1259,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":759,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":712,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":685,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":690,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":680,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":675,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":695,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310":{"entryPoint":1390,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1148,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6525:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"423:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:22"},"nodeType":"YulFunctionCall","src":"433:12:22"},"nodeType":"YulExpressionStatement","src":"433:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:22"},{"body":{"nodeType":"YulBlock","src":"546:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:22"},"nodeType":"YulFunctionCall","src":"556:12:22"},"nodeType":"YulExpressionStatement","src":"556:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:22"},{"body":{"nodeType":"YulBlock","src":"628:54:22","statements":[{"nodeType":"YulAssignment","src":"638:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:22"},"nodeType":"YulFunctionCall","src":"652:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:22"},"nodeType":"YulFunctionCall","src":"668:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:22"},"nodeType":"YulFunctionCall","src":"648:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:22","type":""}],"src":"580:102:22"},{"body":{"nodeType":"YulBlock","src":"716:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:22"},"nodeType":"YulFunctionCall","src":"726:88:22"},"nodeType":"YulExpressionStatement","src":"726:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:22"},"nodeType":"YulFunctionCall","src":"823:15:22"},"nodeType":"YulExpressionStatement","src":"823:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:22"},"nodeType":"YulFunctionCall","src":"847:15:22"},"nodeType":"YulExpressionStatement","src":"847:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:22"},{"body":{"nodeType":"YulBlock","src":"917:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:22"},"nodeType":"YulFunctionCall","src":"957:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:22"},"nodeType":"YulFunctionCall","src":"945:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:22"},"nodeType":"YulFunctionCall","src":"1098:18:22"},"nodeType":"YulExpressionStatement","src":"1098:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:22"},"nodeType":"YulFunctionCall","src":"1036:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:22"},"nodeType":"YulFunctionCall","src":"1072:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:22"},"nodeType":"YulFunctionCall","src":"1033:62:22"},"nodeType":"YulIf","src":"1030:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:22"},"nodeType":"YulFunctionCall","src":"1127:22:22"},"nodeType":"YulExpressionStatement","src":"1127:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:22","type":""}],"src":"874:281:22"},{"body":{"nodeType":"YulBlock","src":"1202:88:22","statements":[{"nodeType":"YulAssignment","src":"1212:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:22"},"nodeType":"YulFunctionCall","src":"1222:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:22"},"nodeType":"YulFunctionCall","src":"1251:33:22"},"nodeType":"YulExpressionStatement","src":"1251:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:22","type":""}],"src":"1161:129:22"},{"body":{"nodeType":"YulBlock","src":"1363:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:22"},"nodeType":"YulFunctionCall","src":"1470:18:22"},"nodeType":"YulExpressionStatement","src":"1470:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:22"},"nodeType":"YulFunctionCall","src":"1437:30:22"},"nodeType":"YulIf","src":"1434:56:22"},{"nodeType":"YulAssignment","src":"1500:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:22"},"nodeType":"YulFunctionCall","src":"1508:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:22"}]},{"nodeType":"YulAssignment","src":"1574:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:22"},"nodeType":"YulFunctionCall","src":"1582:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:22","type":""}],"src":"1296:308:22"},{"body":{"nodeType":"YulBlock","src":"1674:82:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1697:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"1702:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1707:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1684:12:22"},"nodeType":"YulFunctionCall","src":"1684:30:22"},"nodeType":"YulExpressionStatement","src":"1684:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1734:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1739:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:22"},"nodeType":"YulFunctionCall","src":"1730:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"1748:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1723:6:22"},"nodeType":"YulFunctionCall","src":"1723:27:22"},"nodeType":"YulExpressionStatement","src":"1723:27:22"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1656:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1661:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1666:6:22","type":""}],"src":"1610:146:22"},{"body":{"nodeType":"YulBlock","src":"1846:341:22","statements":[{"nodeType":"YulAssignment","src":"1856:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1923:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1881:41:22"},"nodeType":"YulFunctionCall","src":"1881:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1865:15:22"},"nodeType":"YulFunctionCall","src":"1865:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1856:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1947:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"1954:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:22"},"nodeType":"YulFunctionCall","src":"1940:21:22"},"nodeType":"YulExpressionStatement","src":"1940:21:22"},{"nodeType":"YulVariableDeclaration","src":"1970:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1985:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1992:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:22"},"nodeType":"YulFunctionCall","src":"1981:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1974:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2035:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2037:77:22"},"nodeType":"YulFunctionCall","src":"2037:79:22"},"nodeType":"YulExpressionStatement","src":"2037:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2016:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2021:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:22"},"nodeType":"YulFunctionCall","src":"2012:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"2030:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2009:2:22"},"nodeType":"YulFunctionCall","src":"2009:25:22"},"nodeType":"YulIf","src":"2006:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2164:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"2169:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2174:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2127:36:22"},"nodeType":"YulFunctionCall","src":"2127:54:22"},"nodeType":"YulExpressionStatement","src":"2127:54:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1819:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1824:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:22","type":""}],"src":"1762:425:22"},{"body":{"nodeType":"YulBlock","src":"2269:278:22","statements":[{"body":{"nodeType":"YulBlock","src":"2318:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2320:77:22"},"nodeType":"YulFunctionCall","src":"2320:79:22"},"nodeType":"YulExpressionStatement","src":"2320:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2297:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2305:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:22"},"nodeType":"YulFunctionCall","src":"2293:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"2312:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2289:3:22"},"nodeType":"YulFunctionCall","src":"2289:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2282:6:22"},"nodeType":"YulFunctionCall","src":"2282:35:22"},"nodeType":"YulIf","src":"2279:122:22"},{"nodeType":"YulVariableDeclaration","src":"2410:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2437:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2424:12:22"},"nodeType":"YulFunctionCall","src":"2424:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2414:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2453:88:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2514:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2522:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:22"},"nodeType":"YulFunctionCall","src":"2510:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"2529:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"2537:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2462:47:22"},"nodeType":"YulFunctionCall","src":"2462:79:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2453:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2247:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2255:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2263:5:22","type":""}],"src":"2207:340:22"},{"body":{"nodeType":"YulBlock","src":"2629:433:22","statements":[{"body":{"nodeType":"YulBlock","src":"2675:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2677:77:22"},"nodeType":"YulFunctionCall","src":"2677:79:22"},"nodeType":"YulExpressionStatement","src":"2677:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2650:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2659:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2646:3:22"},"nodeType":"YulFunctionCall","src":"2646:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2642:3:22"},"nodeType":"YulFunctionCall","src":"2642:32:22"},"nodeType":"YulIf","src":"2639:119:22"},{"nodeType":"YulBlock","src":"2768:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2783:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2814:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2825:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:22"},"nodeType":"YulFunctionCall","src":"2810:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2797:12:22"},"nodeType":"YulFunctionCall","src":"2797:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2787:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2875:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2877:77:22"},"nodeType":"YulFunctionCall","src":"2877:79:22"},"nodeType":"YulExpressionStatement","src":"2877:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2855:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2844:2:22"},"nodeType":"YulFunctionCall","src":"2844:30:22"},"nodeType":"YulIf","src":"2841:117:22"},{"nodeType":"YulAssignment","src":"2972:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3028:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:22"},"nodeType":"YulFunctionCall","src":"3013:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3037:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2982:30:22"},"nodeType":"YulFunctionCall","src":"2982:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2972:6:22"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2599:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2610:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2622:6:22","type":""}],"src":"2553:509:22"},{"body":{"nodeType":"YulBlock","src":"3110:48:22","statements":[{"nodeType":"YulAssignment","src":"3120:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3145:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3138:6:22"},"nodeType":"YulFunctionCall","src":"3138:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3131:6:22"},"nodeType":"YulFunctionCall","src":"3131:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3120:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3092:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3102:7:22","type":""}],"src":"3068:90:22"},{"body":{"nodeType":"YulBlock","src":"3223:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3240:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3260:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3245:14:22"},"nodeType":"YulFunctionCall","src":"3245:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3233:6:22"},"nodeType":"YulFunctionCall","src":"3233:34:22"},"nodeType":"YulExpressionStatement","src":"3233:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3211:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3218:3:22","type":""}],"src":"3164:109:22"},{"body":{"nodeType":"YulBlock","src":"3371:118:22","statements":[{"nodeType":"YulAssignment","src":"3381:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3393:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3404:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:22"},"nodeType":"YulFunctionCall","src":"3389:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3381:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3455:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3468:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3479:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3464:3:22"},"nodeType":"YulFunctionCall","src":"3464:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3417:37:22"},"nodeType":"YulFunctionCall","src":"3417:65:22"},"nodeType":"YulExpressionStatement","src":"3417:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3343:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3355:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3366:4:22","type":""}],"src":"3279:210:22"},{"body":{"nodeType":"YulBlock","src":"3540:32:22","statements":[{"nodeType":"YulAssignment","src":"3550:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"3561:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3550:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3522:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3532:7:22","type":""}],"src":"3495:77:22"},{"body":{"nodeType":"YulBlock","src":"3621:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"3678:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3687:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3690:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3680:6:22"},"nodeType":"YulFunctionCall","src":"3680:12:22"},"nodeType":"YulExpressionStatement","src":"3680:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3644:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3651:17:22"},"nodeType":"YulFunctionCall","src":"3651:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3641:2:22"},"nodeType":"YulFunctionCall","src":"3641:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3634:6:22"},"nodeType":"YulFunctionCall","src":"3634:43:22"},"nodeType":"YulIf","src":"3631:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3614:5:22","type":""}],"src":"3578:122:22"},{"body":{"nodeType":"YulBlock","src":"3758:87:22","statements":[{"nodeType":"YulAssignment","src":"3768:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3790:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3777:12:22"},"nodeType":"YulFunctionCall","src":"3777:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3768:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3833:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3806:26:22"},"nodeType":"YulFunctionCall","src":"3806:33:22"},"nodeType":"YulExpressionStatement","src":"3806:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3736:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3744:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3752:5:22","type":""}],"src":"3706:139:22"},{"body":{"nodeType":"YulBlock","src":"3917:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"3963:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3965:77:22"},"nodeType":"YulFunctionCall","src":"3965:79:22"},"nodeType":"YulExpressionStatement","src":"3965:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3938:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3947:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3934:3:22"},"nodeType":"YulFunctionCall","src":"3934:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3959:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3930:3:22"},"nodeType":"YulFunctionCall","src":"3930:32:22"},"nodeType":"YulIf","src":"3927:119:22"},{"nodeType":"YulBlock","src":"4056:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4071:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4085:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4075:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4100:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4135:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4146:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4131:3:22"},"nodeType":"YulFunctionCall","src":"4131:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4155:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4110:20:22"},"nodeType":"YulFunctionCall","src":"4110:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4100:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3887:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3898:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3910:6:22","type":""}],"src":"3851:329:22"},{"body":{"nodeType":"YulBlock","src":"4245:40:22","statements":[{"nodeType":"YulAssignment","src":"4256:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4272:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4266:5:22"},"nodeType":"YulFunctionCall","src":"4266:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4256:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4228:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4238:6:22","type":""}],"src":"4186:99:22"},{"body":{"nodeType":"YulBlock","src":"4405:34:22","statements":[{"nodeType":"YulAssignment","src":"4415:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"4430:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4415:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4377:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"4382:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4393:11:22","type":""}],"src":"4291:148:22"},{"body":{"nodeType":"YulBlock","src":"4507:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4517:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4526:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4521:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4586:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4611:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"4616:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4607:3:22"},"nodeType":"YulFunctionCall","src":"4607:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4630:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"4635:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4626:3:22"},"nodeType":"YulFunctionCall","src":"4626:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4620:5:22"},"nodeType":"YulFunctionCall","src":"4620:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4600:6:22"},"nodeType":"YulFunctionCall","src":"4600:39:22"},"nodeType":"YulExpressionStatement","src":"4600:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4547:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"4550:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4544:2:22"},"nodeType":"YulFunctionCall","src":"4544:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4558:19:22","statements":[{"nodeType":"YulAssignment","src":"4560:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4569:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"4572:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4565:3:22"},"nodeType":"YulFunctionCall","src":"4565:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4560:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"4540:3:22","statements":[]},"src":"4536:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4669:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4674:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4665:3:22"},"nodeType":"YulFunctionCall","src":"4665:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"4683:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4658:6:22"},"nodeType":"YulFunctionCall","src":"4658:27:22"},"nodeType":"YulExpressionStatement","src":"4658:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4489:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4494:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"4499:6:22","type":""}],"src":"4445:246:22"},{"body":{"nodeType":"YulBlock","src":"4807:280:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4817:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4864:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4831:32:22"},"nodeType":"YulFunctionCall","src":"4831:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4821:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4879:96:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4963:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4968:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4886:76:22"},"nodeType":"YulFunctionCall","src":"4886:89:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4879:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5023:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5030:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5019:3:22"},"nodeType":"YulFunctionCall","src":"5019:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"5037:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5042:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4984:34:22"},"nodeType":"YulFunctionCall","src":"4984:65:22"},"nodeType":"YulExpressionStatement","src":"4984:65:22"},{"nodeType":"YulAssignment","src":"5058:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5069:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5074:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:22"},"nodeType":"YulFunctionCall","src":"5065:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5058:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4788:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4795:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4803:3:22","type":""}],"src":"4697:390:22"},{"body":{"nodeType":"YulBlock","src":"5229:139:22","statements":[{"nodeType":"YulAssignment","src":"5240:102:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5329:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"5338:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5247:81:22"},"nodeType":"YulFunctionCall","src":"5247:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5240:3:22"}]},{"nodeType":"YulAssignment","src":"5352:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"5359:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5352:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5208:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5214:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5225:3:22","type":""}],"src":"5093:275:22"},{"body":{"nodeType":"YulBlock","src":"5470:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5487:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5492:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5480:6:22"},"nodeType":"YulFunctionCall","src":"5480:19:22"},"nodeType":"YulExpressionStatement","src":"5480:19:22"},{"nodeType":"YulAssignment","src":"5508:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5527:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5532:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5523:3:22"},"nodeType":"YulFunctionCall","src":"5523:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5508:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5442:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5447:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5458:11:22","type":""}],"src":"5374:169:22"},{"body":{"nodeType":"YulBlock","src":"5655:70:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5677:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5685:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5673:3:22"},"nodeType":"YulFunctionCall","src":"5673:14:22"},{"hexValue":"4475706c696361746520636f6d6d69746d656e7420686173682e","kind":"string","nodeType":"YulLiteral","src":"5689:28:22","type":"","value":"Duplicate commitment hash."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5666:6:22"},"nodeType":"YulFunctionCall","src":"5666:52:22"},"nodeType":"YulExpressionStatement","src":"5666:52:22"}]},"name":"store_literal_in_memory_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5647:6:22","type":""}],"src":"5549:176:22"},{"body":{"nodeType":"YulBlock","src":"5877:220:22","statements":[{"nodeType":"YulAssignment","src":"5887:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5953:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"5958:2:22","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5894:58:22"},"nodeType":"YulFunctionCall","src":"5894:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5887:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6059:3:22"}],"functionName":{"name":"store_literal_in_memory_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310","nodeType":"YulIdentifier","src":"5970:88:22"},"nodeType":"YulFunctionCall","src":"5970:93:22"},"nodeType":"YulExpressionStatement","src":"5970:93:22"},{"nodeType":"YulAssignment","src":"6072:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6083:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"6088:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6079:3:22"},"nodeType":"YulFunctionCall","src":"6079:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6072:3:22"}]}]},"name":"abi_encode_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5865:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5873:3:22","type":""}],"src":"5731:366:22"},{"body":{"nodeType":"YulBlock","src":"6274:248:22","statements":[{"nodeType":"YulAssignment","src":"6284:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6296:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6307:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6292:3:22"},"nodeType":"YulFunctionCall","src":"6292:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6284:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6331:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6342:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6327:3:22"},"nodeType":"YulFunctionCall","src":"6327:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6350:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6356:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6346:3:22"},"nodeType":"YulFunctionCall","src":"6346:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6320:6:22"},"nodeType":"YulFunctionCall","src":"6320:47:22"},"nodeType":"YulExpressionStatement","src":"6320:47:22"},{"nodeType":"YulAssignment","src":"6376:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6510:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6384:124:22"},"nodeType":"YulFunctionCall","src":"6384:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6376:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6254:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6269:4:22","type":""}],"src":"6103:419:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duplicate commitment hash.\")\n\n    }\n\n    function abi_encode_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_232a9af606d465e65438bc0e3df63eb9555d6041ad5e8fc303bb2a7145f1a310_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80630af54ca31461005c578063602a859c1461008c578063785dfae8146100a8578063c25879a3146100d8578063f2cee92b146100f4575b600080fd5b610076600480360381019061007191906103f3565b610110565b6040516100839190610457565b60405180910390f35b6100a660048036038101906100a191906103f3565b610145565b005b6100c260048036038101906100bd91906104a8565b61017f565b6040516100cf9190610457565b60405180910390f35b6100f260048036038101906100ed91906104a8565b6101a9565b005b61010e600480360381019061010991906104a8565b6101d8565b005b60006002826040516101229190610546565b908152602001604051809103902060009054906101000a900460ff169050919050565b60016002826040516101579190610546565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b60006003600083815260200190815260200160002060009054906101000a900460ff169050919050565b60016003600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6003600082815260200190815260200160002060009054906101000a900460ff1615610239576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610230906105ba565b60405180910390fd5b6000819050610246610277565b60016003600085815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6040518060400160405280600290602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610300826102b7565b810181811067ffffffffffffffff8211171561031f5761031e6102c8565b5b80604052505050565b6000610332610299565b905061033e82826102f7565b919050565b600067ffffffffffffffff82111561035e5761035d6102c8565b5b610367826102b7565b9050602081019050919050565b82818337600083830152505050565b600061039661039184610343565b610328565b9050828152602081018484840111156103b2576103b16102b2565b5b6103bd848285610374565b509392505050565b600082601f8301126103da576103d96102ad565b5b81356103ea848260208601610383565b91505092915050565b600060208284031215610409576104086102a3565b5b600082013567ffffffffffffffff811115610427576104266102a8565b5b610433848285016103c5565b91505092915050565b60008115159050919050565b6104518161043c565b82525050565b600060208201905061046c6000830184610448565b92915050565b6000819050919050565b61048581610472565b811461049057600080fd5b50565b6000813590506104a28161047c565b92915050565b6000602082840312156104be576104bd6102a3565b5b60006104cc84828501610493565b91505092915050565b600081519050919050565b600081905092915050565b60005b838110156105095780820151818401526020810190506104ee565b60008484015250505050565b6000610520826104d5565b61052a81856104e0565b935061053a8185602086016104eb565b80840191505092915050565b60006105528284610515565b915081905092915050565b600082825260208201905092915050565b7f4475706c696361746520636f6d6d69746d656e7420686173682e000000000000600082015250565b60006105a4601a8361055d565b91506105af8261056e565b602082019050919050565b600060208201905081810360008301526105d381610597565b905091905056fea2646970667358221220286f2238d63eefd208e39ac4b04ed16af89198a49c6af41fbbcb29e97351eef464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF54CA3 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x602A859C EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x785DFAE8 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xC25879A3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xF2CEE92B EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x546 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x230 SWAP1 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x246 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x300 DUP3 PUSH2 0x2B7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x31F JUMPI PUSH2 0x31E PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x332 PUSH2 0x299 JUMP JUMPDEST SWAP1 POP PUSH2 0x33E DUP3 DUP3 PUSH2 0x2F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35E JUMPI PUSH2 0x35D PUSH2 0x2C8 JUMP JUMPDEST JUMPDEST PUSH2 0x367 DUP3 PUSH2 0x2B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396 PUSH2 0x391 DUP5 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3B2 JUMPI PUSH2 0x3B1 PUSH2 0x2B2 JUMP JUMPDEST JUMPDEST PUSH2 0x3BD DUP5 DUP3 DUP6 PUSH2 0x374 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DA JUMPI PUSH2 0x3D9 PUSH2 0x2AD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3EA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x383 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x409 JUMPI PUSH2 0x408 PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x427 JUMPI PUSH2 0x426 PUSH2 0x2A8 JUMP JUMPDEST JUMPDEST PUSH2 0x433 DUP5 DUP3 DUP6 ADD PUSH2 0x3C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x451 DUP2 PUSH2 0x43C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 DUP2 PUSH2 0x472 JUMP JUMPDEST DUP2 EQ PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A2 DUP2 PUSH2 0x47C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x2A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP5 DUP3 DUP6 ADD PUSH2 0x493 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x509 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520 DUP3 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x52A DUP2 DUP6 PUSH2 0x4E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x53A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x552 DUP3 DUP5 PUSH2 0x515 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4475706C696361746520636F6D6D69746D656E7420686173682E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A4 PUSH1 0x1A DUP4 PUSH2 0x55D JUMP JUMPDEST SWAP2 POP PUSH2 0x5AF DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D3 DUP2 PUSH2 0x597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH16 0x2238D63EEFD208E39AC4B04ED16AF891 SWAP9 LOG4 SWAP13 PUSH11 0xF41FBBCB29E97351EEF464 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"84:848:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;657:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;750:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;852:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;297:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;547:104;607:4;629:10;640:3;629:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;622:22;;547:104;;;:::o;657:87::-;733:4;715:10;726:3;715:15;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;657:87;:::o;750:96::-;803:4;825:9;:14;835:3;825:14;;;;;;;;;;;;;;;;;;;;;818:21;;750:96;;;:::o;852:78::-;919:4;902:9;:14;912:3;902:14;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;852:78;:::o;297:244::-;361:9;:22;371:11;361:22;;;;;;;;;;;;;;;;;;;;;360:23;352:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;424:19;446:11;424:33;;468:21;;:::i;:::-;530:4;505:9;:22;515:11;505:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;342:199;;297:244;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:509::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2825:1;2814:9;2810:17;2797:31;2855:18;2847:6;2844:30;2841:117;;;2877:79;;:::i;:::-;2841:117;2982:63;3037:7;3028:6;3017:9;3013:22;2982:63;:::i;:::-;2972:73;;2768:287;2553:509;;;;:::o;3068:90::-;3102:7;3145:5;3138:13;3131:21;3120:32;;3068:90;;;:::o;3164:109::-;3245:21;3260:5;3245:21;:::i;:::-;3240:3;3233:34;3164:109;;:::o;3279:210::-;3366:4;3404:2;3393:9;3389:18;3381:26;;3417:65;3479:1;3468:9;3464:17;3455:6;3417:65;:::i;:::-;3279:210;;;;:::o;3495:77::-;3532:7;3561:5;3550:16;;3495:77;;;:::o;3578:122::-;3651:24;3669:5;3651:24;:::i;:::-;3644:5;3641:35;3631:63;;3690:1;3687;3680:12;3631:63;3578:122;:::o;3706:139::-;3752:5;3790:6;3777:20;3768:29;;3806:33;3833:5;3806:33;:::i;:::-;3706:139;;;;:::o;3851:329::-;3910:6;3959:2;3947:9;3938:7;3934:23;3930:32;3927:119;;;3965:79;;:::i;:::-;3927:119;4085:1;4110:53;4155:7;4146:6;4135:9;4131:22;4110:53;:::i;:::-;4100:63;;4056:117;3851:329;;;;:::o;4186:99::-;4238:6;4272:5;4266:12;4256:22;;4186:99;;;:::o;4291:148::-;4393:11;4430:3;4415:18;;4291:148;;;;:::o;4445:246::-;4526:1;4536:113;4550:6;4547:1;4544:13;4536:113;;;4635:1;4630:3;4626:11;4620:18;4616:1;4611:3;4607:11;4600:39;4572:2;4569:1;4565:10;4560:15;;4536:113;;;4683:1;4674:6;4669:3;4665:16;4658:27;4507:184;4445:246;;;:::o;4697:390::-;4803:3;4831:39;4864:5;4831:39;:::i;:::-;4886:89;4968:6;4963:3;4886:89;:::i;:::-;4879:96;;4984:65;5042:6;5037:3;5030:4;5023:5;5019:16;4984:65;:::i;:::-;5074:6;5069:3;5065:16;5058:23;;4807:280;4697:390;;;;:::o;5093:275::-;5225:3;5247:95;5338:3;5329:6;5247:95;:::i;:::-;5240:102;;5359:3;5352:10;;5093:275;;;;:::o;5374:169::-;5458:11;5492:6;5487:3;5480:19;5532:4;5527:3;5523:14;5508:29;;5374:169;;;;:::o;5549:176::-;5689:28;5685:1;5677:6;5673:14;5666:52;5549:176;:::o;5731:366::-;5873:3;5894:67;5958:2;5953:3;5894:67;:::i;:::-;5887:74;;5970:93;6059:3;5970:93;:::i;:::-;6088:2;6083:3;6079:12;6072:19;;5731:366;;;:::o;6103:419::-;6269:4;6307:2;6296:9;6292:18;6284:26;;6356:9;6350:4;6346:20;6342:1;6331:9;6327:17;6320:47;6384:131;6510:4;6384:131;:::i;:::-;6376:139;;6103:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"310400","executionCost":"349","totalCost":"310749"},"external":{"com_exists(uint256)":"2844","minting(uint256)":"27183","null_exists(string)":"infinite","registerNull(string)":"infinite","regiterCom(uint256)":"24795"}},"methodIdentifiers":{"com_exists(uint256)":"785dfae8","minting(uint256)":"f2cee92b","null_exists(string)":"0af54ca3","registerNull(string)":"602a859c","regiterCom(uint256)":"c25879a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"}],\"name\":\"Check\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"com_exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitment\",\"type\":\"uint256\"}],\"name\":\"minting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"null_exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"registerNull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"com\",\"type\":\"uint256\"}],\"name\":\"regiterCom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zkContract.sol\":\"ZkContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MIMCSponge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ncontract Hasher {\\n    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    uint256[20] c = [\\n        0,\\n        25823191961023811529686723375255045606187170120624741056268890390838310270028,\\n        71153255768872006974285801937521995907343848376936063113800887806988124358800,\\n        51253176922899201987938365653129780755804051536550826601168630951148399005246,\\n        66651710483985382365580181188706173532487386392003341306307921015066514594406,\\n        45887003413921204775397977044284378920236104620216194900669591190628189327887,\\n        14399999722617037892747232478295923748665564430258345135947757381904956977453,\\n        29376176727758177809204424209125257629638239807319618360680345079470240949145,\\n        13768859312518298840937540532277016512087005174650120937309279832230513110846,\\n        54749662990362840569021981534456448557155682756506853240029023635346061661615,\\n        25161436470718351277017231215227846535148280460947816286575563945185127975034,\\n        90370030464179443930112165274275271350651484239155016554738639197417116558730,\\n        92014788260850167582827910417652439562305280453223492851660096740204889381255,\\n        40376490640073034398204558905403523738912091909516510156577526370637723469243,\\n        903792244391531377123276432892896247924738784402045372115602887103675299839,\\n        112203415202699791888928570309186854585561656615192232544262649073999791317171,\\n        114801681136748880679062548782792743842998635558909635247841799223004802934045,\\n        111440818948676816539978930514468038603327388809824089593328295503672011604028,\\n        64965960071752809090438003157362764845283225351402746675238539375404528707397,\\n        98428510787134995495896453413714864789970336245473413374424598985988309743097\\n    ];\\n\\n    function MiMC5Feistel(uint256 _iL, uint256 _iR, uint256 _k) internal view returns(uint256 oL, uint256 oR) {\\n        uint8 nRounds = 20;\\n\\n        uint256 lastL = _iL;\\n        uint256 lastR = _iR;\\n\\n        uint256 mask;\\n        uint256 mask2;\\n        uint256 mask4;\\n        uint256 temp;\\n\\n        for(uint8 i = 0; i < nRounds; i++){\\n            mask = addmod(lastR, _k, p);\\n            mask = addmod(mask, c[i], p);\\n            mask2 = mulmod(mask, mask, p);\\n            mask4 = mulmod(mask2, mask2, p);\\n            mask = mulmod(mask4, mask, p);\\n\\n            temp = lastR;\\n            lastR = addmod(lastL, mask, p);\\n            lastL = temp;\\n        }\\n\\n        return (lastL, lastR);\\n    }\\n    function MiMC5Sponge(uint256[2] memory _ins, uint256 _k) external view returns(uint256 h) {\\n        uint256 lastR = 0;\\n        uint256 lastC = 0;\\n\\n        for(uint8 i = 0; i < _ins.length; i++){\\n            lastR = addmod(lastR, _ins[i], p);\\n            (lastR, lastC) = MiMC5Feistel(lastR, lastC, _k);\\n        }\\n\\n        h = lastR;\\n    }\\n}\",\"keccak256\":\"0x4282af99f3cdbd1943657894e287a58acf550868b1c3565d67c412247a08819e\",\"license\":\"MIT\"},\"contracts/zkContract.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"./MIMCSponge.sol\\\";\\n\\ncontract ZkContract{\\n\\n    event Check(address to, uint256 nullifierHash);\\n\\n    address verifier;\\n    Hasher hasher;\\n    mapping(string=>bool) private nullExists;\\n    mapping(uint256=>bool) private comExists;\\n\\n    function minting(uint256 _commitment) public {\\n        require(!comExists[_commitment],\\\"Duplicate commitment hash.\\\");\\n\\n        uint256 currentHash = _commitment;\\n\\n        uint256[2] memory ins;\\n    \\n\\n        comExists[_commitment] = true;\\n    }\\n\\n    function null_exists(string memory str) view public returns(bool){\\n        return nullExists[str];\\n    }\\n\\n    function registerNull(string memory str) public {\\n        nullExists[str] = true;\\n    }\\n\\n    function com_exists(uint256 com) view public returns(bool){\\n        return comExists[com];\\n    }\\n\\n    function regiterCom(uint256 com) public {\\n        comExists[com] = true;\\n    }\\n}\",\"keccak256\":\"0xe39777f7c634b61b4d312673dfd5677344a385aac17b9ca1ef3339eb5d2fd82c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4009,"contract":"contracts/zkContract.sol:ZkContract","label":"verifier","offset":0,"slot":"0","type":"t_address"},{"astId":4012,"contract":"contracts/zkContract.sol:ZkContract","label":"hasher","offset":0,"slot":"1","type":"t_contract(Hasher)3066"},{"astId":4016,"contract":"contracts/zkContract.sol:ZkContract","label":"nullExists","offset":0,"slot":"2","type":"t_mapping(t_string_memory_ptr,t_bool)"},{"astId":4020,"contract":"contracts/zkContract.sol:ZkContract","label":"comExists","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Hasher)3066":{"encoding":"inplace","label":"contract Hasher","numberOfBytes":"20"},"t_mapping(t_string_memory_ptr,t_bool)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/zkNFT.sol":{"zkNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"from","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"to","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"NFTTransfered","type":"event"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"},{"internalType":"address","name":"op","type":"address"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"commitment","type":"uint256"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"createNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"deleteZkNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"getApprovedAdd","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumberOfTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"getTokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ownerCom","type":"uint256"},{"internalType":"uint256","name":"buyerCom","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenID","type":"uint256"},{"internalType":"uint256","name":"commitment","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"}],"name":"transferNFT","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_4159":{"entryPoint":null,"id":4159,"parameterSlots":0,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":332,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":174,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":653,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":614,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":488,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":808,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":353,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":279,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":778,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":478,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":746,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":232,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":185,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":528,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":369,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":733,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":586,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":382,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":538,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":581,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:22","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:22","statements":[{"nodeType":"YulAssignment","src":"77:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:22"},"nodeType":"YulFunctionCall","src":"87:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:22","type":""}],"src":"7:99:22"},{"body":{"nodeType":"YulBlock","src":"140:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:22"},"nodeType":"YulFunctionCall","src":"150:88:22"},"nodeType":"YulExpressionStatement","src":"150:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:22"},"nodeType":"YulFunctionCall","src":"247:15:22"},"nodeType":"YulExpressionStatement","src":"247:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:22"},"nodeType":"YulFunctionCall","src":"271:15:22"},"nodeType":"YulExpressionStatement","src":"271:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:22"},{"body":{"nodeType":"YulBlock","src":"326:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:22"},"nodeType":"YulFunctionCall","src":"336:88:22"},"nodeType":"YulExpressionStatement","src":"336:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:22"},"nodeType":"YulFunctionCall","src":"433:15:22"},"nodeType":"YulExpressionStatement","src":"433:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:22"},"nodeType":"YulFunctionCall","src":"457:15:22"},"nodeType":"YulExpressionStatement","src":"457:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:22"},{"body":{"nodeType":"YulBlock","src":"535:269:22","statements":[{"nodeType":"YulAssignment","src":"545:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:22"},"nodeType":"YulFunctionCall","src":"555:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:22"},"nodeType":"YulFunctionCall","src":"602:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:22","statements":[{"nodeType":"YulAssignment","src":"667:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:22"},"nodeType":"YulFunctionCall","src":"677:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:22"},"nodeType":"YulFunctionCall","src":"626:26:22"},"nodeType":"YulIf","src":"623:81:22"},{"body":{"nodeType":"YulBlock","src":"756:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:22"},"nodeType":"YulFunctionCall","src":"770:18:22"},"nodeType":"YulExpressionStatement","src":"770:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:22"},"nodeType":"YulFunctionCall","src":"740:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:22"},"nodeType":"YulFunctionCall","src":"717:38:22"},"nodeType":"YulIf","src":"714:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:22","type":""}],"src":"484:320:22"},{"body":{"nodeType":"YulBlock","src":"864:87:22","statements":[{"nodeType":"YulAssignment","src":"874:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:22"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:22"},"nodeType":"YulFunctionCall","src":"895:14:22"},"nodeType":"YulExpressionStatement","src":"895:14:22"},{"nodeType":"YulAssignment","src":"918:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:22"},"nodeType":"YulFunctionCall","src":"926:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:22"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:22","type":""}],"src":"810:141:22"},{"body":{"nodeType":"YulBlock","src":"1001:49:22","statements":[{"nodeType":"YulAssignment","src":"1011:33:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:22"},"nodeType":"YulFunctionCall","src":"1025:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:22","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:22"},"nodeType":"YulFunctionCall","src":"1021:23:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:22"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:22","type":""}],"src":"957:93:22"},{"body":{"nodeType":"YulBlock","src":"1109:54:22","statements":[{"nodeType":"YulAssignment","src":"1119:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:22"},"nodeType":"YulFunctionCall","src":"1140:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:22"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:22","type":""}],"src":"1056:107:22"},{"body":{"nodeType":"YulBlock","src":"1245:317:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:22","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:22"},"nodeType":"YulFunctionCall","src":"1272:18:22"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:22"},"nodeType":"YulFunctionCall","src":"1311:97:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:22","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:22"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:22"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:22"},"nodeType":"YulFunctionCall","src":"1429:39:22"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:22"}]},{"nodeType":"YulAssignment","src":"1477:30:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:22"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:22"},"nodeType":"YulFunctionCall","src":"1497:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:22"},"nodeType":"YulFunctionCall","src":"1486:21:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:22"}]},{"nodeType":"YulAssignment","src":"1516:40:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:22"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:22"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:22"},"nodeType":"YulFunctionCall","src":"1536:19:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:22"},"nodeType":"YulFunctionCall","src":"1526:30:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:22"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:22","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:22","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:22","type":""}],"src":"1169:393:22"},{"body":{"nodeType":"YulBlock","src":"1613:32:22","statements":[{"nodeType":"YulAssignment","src":"1623:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:22","type":""}],"src":"1568:77:22"},{"body":{"nodeType":"YulBlock","src":"1683:28:22","statements":[{"nodeType":"YulAssignment","src":"1693:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:22","type":""}],"src":"1651:60:22"},{"body":{"nodeType":"YulBlock","src":"1777:82:22","statements":[{"nodeType":"YulAssignment","src":"1787:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:22"},"nodeType":"YulFunctionCall","src":"1827:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:22"},"nodeType":"YulFunctionCall","src":"1818:34:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:22"},"nodeType":"YulFunctionCall","src":"1800:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:22","type":""}],"src":"1717:142:22"},{"body":{"nodeType":"YulBlock","src":"1912:28:22","statements":[{"nodeType":"YulAssignment","src":"1922:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:22"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:22","type":""}],"src":"1865:75:22"},{"body":{"nodeType":"YulBlock","src":"2022:193:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:22","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:22"},"nodeType":"YulFunctionCall","src":"2056:39:22"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:22"},"nodeType":"YulFunctionCall","src":"2145:11:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:22"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:22"},"nodeType":"YulFunctionCall","src":"2166:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:22"},"nodeType":"YulFunctionCall","src":"2117:91:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:22"},"nodeType":"YulFunctionCall","src":"2104:105:22"},"nodeType":"YulExpressionStatement","src":"2104:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:22","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:22","type":""}],"src":"1946:269:22"},{"body":{"nodeType":"YulBlock","src":"2270:24:22","statements":[{"nodeType":"YulAssignment","src":"2280:8:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:22","type":""}],"src":"2221:73:22"},{"body":{"nodeType":"YulBlock","src":"2353:136:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:22"},"nodeType":"YulFunctionCall","src":"2377:32:22"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:22"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:22"},"nodeType":"YulFunctionCall","src":"2418:65:22"},"nodeType":"YulExpressionStatement","src":"2418:65:22"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:22","type":""}],"src":"2300:189:22"},{"body":{"nodeType":"YulBlock","src":"2545:136:22","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:22"},"nodeType":"YulFunctionCall","src":"2626:39:22"},"nodeType":"YulExpressionStatement","src":"2626:39:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:22"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:22"},"nodeType":"YulFunctionCall","src":"2562:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:22","statements":[{"nodeType":"YulAssignment","src":"2579:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:22"},"nodeType":"YulFunctionCall","src":"2588:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:22","statements":[]},"src":"2555:120:22"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:22","type":""}],"src":"2495:186:22"},{"body":{"nodeType":"YulBlock","src":"2766:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:22"},"nodeType":"YulFunctionCall","src":"2822:38:22"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:22","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:22"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:22"},"nodeType":"YulFunctionCall","src":"2906:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:22"},"nodeType":"YulFunctionCall","src":"2892:44:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:22","statements":[{"nodeType":"YulAssignment","src":"3095:23:22","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:22"},"nodeType":"YulFunctionCall","src":"3074:18:22"},"nodeType":"YulIf","src":"3071:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:22"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:22"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:22"},"nodeType":"YulFunctionCall","src":"3189:22:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:22"},"nodeType":"YulFunctionCall","src":"3175:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:22"},"nodeType":"YulFunctionCall","src":"3133:80:22"},"nodeType":"YulExpressionStatement","src":"3133:80:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:22"},"nodeType":"YulFunctionCall","src":"2780:11:22"},"nodeType":"YulIf","src":"2777:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:22","type":""}],"src":"2687:543:22"},{"body":{"nodeType":"YulBlock","src":"3299:54:22","statements":[{"nodeType":"YulAssignment","src":"3309:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:22"},"nodeType":"YulFunctionCall","src":"3330:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:22","type":""}],"src":"3236:117:22"},{"body":{"nodeType":"YulBlock","src":"3410:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:22","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:22"},"nodeType":"YulFunctionCall","src":"3465:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:22"},"nodeType":"YulFunctionCall","src":"3480:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:22"},"nodeType":"YulFunctionCall","src":"3436:51:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:22"},"nodeType":"YulFunctionCall","src":"3432:56:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:22","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:22"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:22"},"nodeType":"YulFunctionCall","src":"3507:15:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:22"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:22","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:22","type":""}],"src":"3359:169:22"},{"body":{"nodeType":"YulBlock","src":"3614:214:22","statements":[{"nodeType":"YulAssignment","src":"3747:37:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:22"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:22"},"nodeType":"YulFunctionCall","src":"3755:29:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:22"}]},{"nodeType":"YulAssignment","src":"3793:29:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:22","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:22"},"nodeType":"YulFunctionCall","src":"3810:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:22"},"nodeType":"YulFunctionCall","src":"3801:21:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:22","type":""}],"src":"3533:295:22"},{"body":{"nodeType":"YulBlock","src":"3925:1303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:22"},"nodeType":"YulFunctionCall","src":"3950:37:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:22"},"nodeType":"YulFunctionCall","src":"4074:18:22"},"nodeType":"YulExpressionStatement","src":"4074:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:22"},"nodeType":"YulFunctionCall","src":"4041:30:22"},"nodeType":"YulIf","src":"4038:56:22"},{"nodeType":"YulVariableDeclaration","src":"4104:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:22"},"nodeType":"YulFunctionCall","src":"4144:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:22"},"nodeType":"YulFunctionCall","src":"4118:38:22"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:22"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:22"},"nodeType":"YulFunctionCall","src":"4203:67:22"},"nodeType":"YulExpressionStatement","src":"4203:67:22"},{"nodeType":"YulVariableDeclaration","src":"4280:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:22","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:22"},"nodeType":"YulFunctionCall","src":"4413:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:22"},"nodeType":"YulFunctionCall","src":"4401:22:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:22"},"nodeType":"YulFunctionCall","src":"4451:37:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:22"},"nodeType":"YulFunctionCall","src":"4608:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:22"},"nodeType":"YulFunctionCall","src":"4602:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:22"},"nodeType":"YulFunctionCall","src":"4587:42:22"},"nodeType":"YulExpressionStatement","src":"4587:42:22"},{"nodeType":"YulAssignment","src":"4646:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:22"},"nodeType":"YulFunctionCall","src":"4656:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:22"}]},{"nodeType":"YulAssignment","src":"4687:31:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:22"},"nodeType":"YulFunctionCall","src":"4700:18:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:22"},"nodeType":"YulFunctionCall","src":"4532:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:22","statements":[{"nodeType":"YulAssignment","src":"4549:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:22"},"nodeType":"YulFunctionCall","src":"4554:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:22","statements":[]},"src":"4524:208:22"},{"body":{"nodeType":"YulBlock","src":"4768:156:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:22"},"nodeType":"YulFunctionCall","src":"4809:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:22"},"nodeType":"YulFunctionCall","src":"4803:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:22"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:22"},"nodeType":"YulFunctionCall","src":"4891:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:22"},"nodeType":"YulFunctionCall","src":"4861:48:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:22"},"nodeType":"YulFunctionCall","src":"4846:64:22"},"nodeType":"YulExpressionStatement","src":"4846:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:22"},"nodeType":"YulFunctionCall","src":"4748:19:22"},"nodeType":"YulIf","src":"4745:179:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:22"},"nodeType":"YulFunctionCall","src":"4954:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:22"},"nodeType":"YulFunctionCall","src":"4950:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:22"},"nodeType":"YulFunctionCall","src":"4937:36:22"},"nodeType":"YulExpressionStatement","src":"4937:36:22"}]},"nodeType":"YulCase","src":"4365:618:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:22","statements":[{"nodeType":"YulAssignment","src":"5069:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:22"},"nodeType":"YulFunctionCall","src":"5084:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:22"},"nodeType":"YulFunctionCall","src":"5078:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:22"},"nodeType":"YulIf","src":"5041:77:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:22"},"nodeType":"YulFunctionCall","src":"5144:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:22"},"nodeType":"YulFunctionCall","src":"5131:81:22"},"nodeType":"YulExpressionStatement","src":"5131:81:22"}]},"nodeType":"YulCase","src":"4992:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:22"},"nodeType":"YulFunctionCall","src":"4342:14:22"},"nodeType":"YulSwitch","src":"4335:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:22","type":""}],"src":"3833:1395:22"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040518060400160405280600481526020017f7a6b4d5000000000000000000000000000000000000000000000000000000000815250600690816200004a919062000328565b506040518060400160405280600181526020017f5a000000000000000000000000000000000000000000000000000000000000008152506007908162000091919062000328565b503480156200009f57600080fd5b5060006008819055506200040f565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200013057607f821691505b602082108103620001465762000145620000e8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001b07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000171565b620001bc868362000171565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200020962000203620001fd84620001d4565b620001de565b620001d4565b9050919050565b6000819050919050565b6200022583620001e8565b6200023d620002348262000210565b8484546200017e565b825550505050565b600090565b6200025462000245565b620002618184846200021a565b505050565b5b8181101562000289576200027d6000826200024a565b60018101905062000267565b5050565b601f821115620002d857620002a2816200014c565b620002ad8462000161565b81016020851015620002bd578190505b620002d5620002cc8562000161565b83018262000266565b50505b505050565b600082821c905092915050565b6000620002fd60001984600802620002dd565b1980831691505092915050565b6000620003188383620002ea565b9150826002028217905092915050565b6200033382620000ae565b67ffffffffffffffff8111156200034f576200034e620000b9565b5b6200035b825462000117565b620003688282856200028d565b600060209050601f831160018114620003a057600084156200038b578287015190505b6200039785826200030a565b86555062000407565b601f198416620003b0866200014c565b60005b82811015620003da57848901518255600182019150602085019450602081019050620003b3565b86831015620003fa5784890151620003f6601f891682620002ea565b8355505b6001600288020188555050505b505050505050565b611378806200041f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806395d89b411161007157806395d89b4114610164578063a50348dc14610182578063d78092521461019e578063efeecb51146101ce578063f32b5124146101ec578063febe490914610208576100a9565b806306fdde03146100ae578063263c7868146100cc5780633bb3a24d146100e85780636352211e146101185780638894c44614610148575b600080fd5b6100b6610224565b6040516100c39190610a2f565b60405180910390f35b6100e660048036038101906100e19190610af9565b6102b6565b005b61010260048036038101906100fd9190610b39565b6102ba565b60405161010f9190610a2f565b60405180910390f35b610132600480360381019061012d9190610b39565b6102c1565b60405161013f9190610b75565b60405180910390f35b610162600480360381019061015d9190610b90565b6102de565b005b61016c610469565b6040516101799190610a2f565b60405180910390f35b61019c60048036038101906101979190610be3565b6104fb565b005b6101b860048036038101906101b39190610b39565b610618565b6040516101c59190610c59565b60405180910390f35b6101d6610655565b6040516101e39190610b75565b60405180910390f35b61020660048036038101906102019190610da9565b61065f565b005b610222600480360381019061021d9190610af9565b610695565b005b60606006805461023390610e34565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610e34565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b5050565b6060919050565b600060036000838152602001908152602001600020549050919050565b60006003600085815260200190815260200160002054905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360008681526020019081526020016000206000905560006001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103939190610e94565b90506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020600090556001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104389190610e94565b9250508190555061044984866107ab565b846003600088815260200190815260200160002081905550505050505050565b60606007805461047890610e34565b80601f01602080910402602001604051908101604052809291908181526020018280546104a490610e34565b80156104f15780601f106104c6576101008083540402835291602001916104f1565b820191906000526020600020905b8154815290600101906020018083116104d457829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff1661051b82610618565b73ffffffffffffffffffffffffffffffffffffffff1614610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610f14565b60405180910390fd5b836040516020016105829190610f55565b604051602081830303815290604052805190602001206105a1826102c1565b6040516020016105b19190610f55565b6040516020818303038152906040528051906020012014610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90610fbc565b60405180910390fd5b6106128184846102de565b50505050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600854905090565b600033905061066e81846107ab565b61067883836108f1565b6008600081548092919061068b90610fdc565b9190505550505050565b60006003600084815260200190815260200160002054905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90611070565b60405180910390fd5b826005600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108e59190611090565b92505081905550505050565b81600360006008548152602001908152602001600020819055506109176008548261094d565b6008548260007fb12d87e4ee7f2fb6d2b85a4b7875bc64a51a45e85c452f968ce17e9ef133b93860405160405180910390a45050565b8060046000848152602001908152602001600020908161096d9190611270565b50817ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760405160405180910390a25050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109d95780820151818401526020810190506109be565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a018261099f565b610a0b81856109aa565b9350610a1b8185602086016109bb565b610a24816109e5565b840191505092915050565b60006020820190508181036000830152610a4981846109f6565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a7881610a65565b8114610a8357600080fd5b50565b600081359050610a9581610a6f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac682610a9b565b9050919050565b610ad681610abb565b8114610ae157600080fd5b50565b600081359050610af381610acd565b92915050565b60008060408385031215610b1057610b0f610a5b565b5b6000610b1e85828601610a86565b9250506020610b2f85828601610ae4565b9150509250929050565b600060208284031215610b4f57610b4e610a5b565b5b6000610b5d84828501610a86565b91505092915050565b610b6f81610a65565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b600080600060608486031215610ba957610ba8610a5b565b5b6000610bb786828701610a86565b9350506020610bc886828701610a86565b9250506040610bd986828701610ae4565b9150509250925092565b60008060008060808587031215610bfd57610bfc610a5b565b5b6000610c0b87828801610a86565b9450506020610c1c87828801610a86565b9350506040610c2d87828801610ae4565b9250506060610c3e87828801610a86565b91505092959194509250565b610c5381610abb565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cb6826109e5565b810181811067ffffffffffffffff82111715610cd557610cd4610c7e565b5b80604052505050565b6000610ce8610a51565b9050610cf48282610cad565b919050565b600067ffffffffffffffff821115610d1457610d13610c7e565b5b610d1d826109e5565b9050602081019050919050565b82818337600083830152505050565b6000610d4c610d4784610cf9565b610cde565b905082815260208101848484011115610d6857610d67610c79565b5b610d73848285610d2a565b509392505050565b600082601f830112610d9057610d8f610c74565b5b8135610da0848260208601610d39565b91505092915050565b60008060408385031215610dc057610dbf610a5b565b5b6000610dce85828601610a86565b925050602083013567ffffffffffffffff811115610def57610dee610a60565b5b610dfb85828601610d7b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e4c57607f821691505b602082108103610e5f57610e5e610e05565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9f82610a65565b9150610eaa83610a65565b9250828203905081811115610ec257610ec1610e65565b5b92915050565b7f4e6f20617070726f76656420746f206d616b6520746869732063616c6c000000600082015250565b6000610efe601d836109aa565b9150610f0982610ec8565b602082019050919050565b60006020820190508181036000830152610f2d81610ef1565b9050919050565b6000819050919050565b610f4f610f4a82610a65565b610f34565b82525050565b6000610f618284610f3e565b60208201915081905092915050565b7f496e76616c696420636f6d696669657220686173680000000000000000000000600082015250565b6000610fa66015836109aa565b9150610fb182610f70565b602082019050919050565b60006020820190508181036000830152610fd581610f99565b9050919050565b6000610fe782610a65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361101957611018610e65565b5b600182019050919050565b7f496e76616c6964206f70657261746f7220616464726573730000000000000000600082015250565b600061105a6018836109aa565b915061106582611024565b602082019050919050565b600060208201905081810360008301526110898161104d565b9050919050565b600061109b82610a65565b91506110a683610a65565b92508282019050808211156110be576110bd610e65565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110e9565b61113086836110e9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061116d61116861116384610a65565b611148565b610a65565b9050919050565b6000819050919050565b61118783611152565b61119b61119382611174565b8484546110f6565b825550505050565b600090565b6111b06111a3565b6111bb81848461117e565b505050565b5b818110156111df576111d46000826111a8565b6001810190506111c1565b5050565b601f821115611224576111f5816110c4565b6111fe846110d9565b8101602085101561120d578190505b611221611219856110d9565b8301826111c0565b50505b505050565b600082821c905092915050565b600061124760001984600802611229565b1980831691505092915050565b60006112608383611236565b9150826002028217905092915050565b6112798261099f565b67ffffffffffffffff81111561129257611291610c7e565b5b61129c8254610e34565b6112a78282856111e3565b600060209050601f8311600181146112da57600084156112c8578287015190505b6112d28582611254565b86555061133a565b601f1984166112e8866110c4565b60005b82811015611310578489015182556001820191506020850194506020810190506112eb565b8683101561132d5784890151611329601f891682611236565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220ffca25a01ddf4d7d723f410420b17b1c8e18ea1bb34d57bd3f5f98b77ed7430664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7A6B4D5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x328 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x7 SWAP1 DUP2 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0x328 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH3 0x40F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x130 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x146 JUMPI PUSH3 0x145 PUSH3 0xE8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1B0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x171 JUMP JUMPDEST PUSH3 0x1BC DUP7 DUP4 PUSH3 0x171 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x209 PUSH3 0x203 PUSH3 0x1FD DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1DE JUMP JUMPDEST PUSH3 0x1D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x225 DUP4 PUSH3 0x1E8 JUMP JUMPDEST PUSH3 0x23D PUSH3 0x234 DUP3 PUSH3 0x210 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x17E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x254 PUSH3 0x245 JUMP JUMPDEST PUSH3 0x261 DUP2 DUP5 DUP5 PUSH3 0x21A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x289 JUMPI PUSH3 0x27D PUSH1 0x0 DUP3 PUSH3 0x24A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x267 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2A2 DUP2 PUSH3 0x14C JUMP JUMPDEST PUSH3 0x2AD DUP5 PUSH3 0x161 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2BD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2D5 PUSH3 0x2CC DUP6 PUSH3 0x161 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x266 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2FD PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2DD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x318 DUP4 DUP4 PUSH3 0x2EA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x333 DUP3 PUSH3 0xAE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x34F JUMPI PUSH3 0x34E PUSH3 0xB9 JUMP JUMPDEST JUMPDEST PUSH3 0x35B DUP3 SLOAD PUSH3 0x117 JUMP JUMPDEST PUSH3 0x368 DUP3 DUP3 DUP6 PUSH3 0x28D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3A0 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x38B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x397 DUP6 DUP3 PUSH3 0x30A JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x407 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3B0 DUP7 PUSH3 0x14C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3DA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3FA JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3F6 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2EA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1378 DUP1 PUSH3 0x41F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xA50348DC EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xD7809252 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xEFEECB51 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xF32B5124 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xFEBE4909 EQ PUSH2 0x208 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x263C7868 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x3BB3A24D EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x8894C446 EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xDA9 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xE94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0xE94 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x449 DUP5 DUP7 PUSH2 0x7AB JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x478 SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A4 SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x51B DUP3 PUSH2 0x618 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x5A1 DUP3 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x612 DUP2 DUP5 DUP5 PUSH2 0x2DE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x66E DUP2 DUP5 PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x678 DUP4 DUP4 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x68B SWAP1 PUSH2 0xFDC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x917 PUSH1 0x8 SLOAD DUP3 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 PUSH1 0x0 PUSH32 0xB12D87E4EE7F2FB6D2B85A4B7875BC64A51A45E85C452F968CE17E9EF133B938 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x96D SWAP2 SWAP1 PUSH2 0x1270 JUMP JUMPDEST POP DUP2 PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA01 DUP3 PUSH2 0x99F JUMP JUMPDEST PUSH2 0xA0B DUP2 DUP6 PUSH2 0x9AA JUMP JUMPDEST SWAP4 POP PUSH2 0xA1B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9BB JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA49 DUP2 DUP5 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA78 DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP2 EQ PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA95 DUP2 PUSH2 0xA6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC6 DUP3 PUSH2 0xA9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD6 DUP2 PUSH2 0xABB JUMP JUMPDEST DUP2 EQ PUSH2 0xAE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF3 DUP2 PUSH2 0xACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0F PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP6 DUP3 DUP7 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB2F DUP6 DUP3 DUP7 ADD PUSH2 0xAE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB5D DUP5 DUP3 DUP6 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB7 DUP7 DUP3 DUP8 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBC8 DUP7 DUP3 DUP8 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBD9 DUP7 DUP3 DUP8 ADD PUSH2 0xAE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC0B DUP8 DUP3 DUP9 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xC1C DUP8 DUP3 DUP9 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xC2D DUP8 DUP3 DUP9 ADD PUSH2 0xAE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xC3E DUP8 DUP3 DUP9 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xABB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCB6 DUP3 PUSH2 0x9E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0xC7E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 PUSH2 0xA51 JUMP JUMPDEST SWAP1 POP PUSH2 0xCF4 DUP3 DUP3 PUSH2 0xCAD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xC7E JUMP JUMPDEST JUMPDEST PUSH2 0xD1D DUP3 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4C PUSH2 0xD47 DUP5 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0xC79 JUMP JUMPDEST JUMPDEST PUSH2 0xD73 DUP5 DUP3 DUP6 PUSH2 0xD2A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD90 JUMPI PUSH2 0xD8F PUSH2 0xC74 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDA0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP6 DUP3 DUP7 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH2 0xDFB DUP6 DUP3 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE4C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE5F JUMPI PUSH2 0xE5E PUSH2 0xE05 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE9F DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAA DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEC2 JUMPI PUSH2 0xEC1 PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20617070726F76656420746F206D616B6520746869732063616C6C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFE PUSH1 0x1D DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xF09 DUP3 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF2D DUP2 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xF4A DUP3 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF61 DUP3 DUP5 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6D696669657220686173680000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 PUSH1 0x15 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xFB1 DUP3 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD5 DUP2 PUSH2 0xF99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE7 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0xE65 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105A PUSH1 0x18 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0x1065 DUP3 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1089 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109B DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A6 DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x10BD PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1126 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x1130 DUP7 DUP4 PUSH2 0x10E9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116D PUSH2 0x1168 PUSH2 0x1163 DUP5 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1187 DUP4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1193 DUP3 PUSH2 0x1174 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x10F6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x11B0 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x11BB DUP2 DUP5 DUP5 PUSH2 0x117E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11DF JUMPI PUSH2 0x11D4 PUSH1 0x0 DUP3 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x11C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1224 JUMPI PUSH2 0x11F5 DUP2 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x11FE DUP5 PUSH2 0x10D9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x120D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1221 PUSH2 0x1219 DUP6 PUSH2 0x10D9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x11C0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1247 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1229 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1260 DUP4 DUP4 PUSH2 0x1236 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1279 DUP3 PUSH2 0x99F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0xC7E JUMP JUMPDEST JUMPDEST PUSH2 0x129C DUP3 SLOAD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x12A7 DUP3 DUP3 DUP6 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x12C8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x12D2 DUP6 DUP3 PUSH2 0x1254 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x133A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x12E8 DUP7 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1310 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12EB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x132D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1329 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1236 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xCA 0x25 LOG0 SAR 0xDF 0x4D PUSH30 0x723F410420B17B1C8E18EA1BB34D57BD3F5F98B77ED7430664736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"786:3371:21:-:0;;;1278:21;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1305:20;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1365:41;;;;;;;;;;1398:1;1388:7;:11;;;;786:3371;;7:99:22;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;786:3371:21:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@approve_4451":{"entryPoint":1685,"id":4451,"parameterSlots":2,"returnSlots":0},"@createNFT_4185":{"entryPoint":1631,"id":4185,"parameterSlots":2,"returnSlots":0},"@deleteZkNft_4194":{"entryPoint":694,"id":4194,"parameterSlots":2,"returnSlots":0},"@getApprovedAdd_4464":{"entryPoint":1560,"id":4464,"parameterSlots":1,"returnSlots":1},"@getNumberOfTokens_4472":{"entryPoint":1621,"id":4472,"parameterSlots":0,"returnSlots":1},"@getTokenURI_4203":{"entryPoint":698,"id":4203,"parameterSlots":1,"returnSlots":1},"@mintNFT_4228":{"entryPoint":2289,"id":4228,"parameterSlots":2,"returnSlots":0},"@name_4481":{"entryPoint":548,"id":4481,"parameterSlots":0,"returnSlots":1},"@ownerOf_4367":{"entryPoint":705,"id":4367,"parameterSlots":1,"returnSlots":1},"@setAddAndCom_4417":{"entryPoint":1963,"id":4417,"parameterSlots":2,"returnSlots":0},"@setTokenURI_4246":{"entryPoint":2381,"id":4246,"parameterSlots":2,"returnSlots":0},"@symbol_4490":{"entryPoint":1129,"id":4490,"parameterSlots":0,"returnSlots":1},"@transferFrom_4294":{"entryPoint":1275,"id":4294,"parameterSlots":4,"returnSlots":0},"@transferNFT_4354":{"entryPoint":734,"id":4354,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":3385,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":2809,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":3497,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":2960,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256":{"entryPoint":3043,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75_to_t_string_memory_ptr_fromStack":{"entryPoint":4173,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3_to_t_string_memory_ptr_fromStack":{"entryPoint":3993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621_to_t_string_memory_ptr_fromStack":{"entryPoint":3825,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2918,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":3902,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":3925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4208,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2933,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3294,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2641,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3321,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":4292,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2463,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2474,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4240,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3732,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":4579,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2747,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2715,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2661,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4544,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":4434,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4720,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3370,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2491,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":4313,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3636,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4692,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3245,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4424,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4060,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":3892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4662,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3685,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3589,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3198,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4468,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3188,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3193,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2656,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2651,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2533,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4649,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4520,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75":{"entryPoint":4132,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3":{"entryPoint":3952,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621":{"entryPoint":3784,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4342,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4478,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2765,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2671,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4515,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17340:22","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:22","statements":[{"nodeType":"YulAssignment","src":"77:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:22"},"nodeType":"YulFunctionCall","src":"87:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:22","type":""}],"src":"7:99:22"},{"body":{"nodeType":"YulBlock","src":"208:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:22"},"nodeType":"YulFunctionCall","src":"218:19:22"},"nodeType":"YulExpressionStatement","src":"218:19:22"},{"nodeType":"YulAssignment","src":"246:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:22"},"nodeType":"YulFunctionCall","src":"261:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:22","type":""}],"src":"112:169:22"},{"body":{"nodeType":"YulBlock","src":"349:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:22"},"nodeType":"YulFunctionCall","src":"449:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:22"},"nodeType":"YulFunctionCall","src":"468:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:22"},"nodeType":"YulFunctionCall","src":"462:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:22"},"nodeType":"YulFunctionCall","src":"442:39:22"},"nodeType":"YulExpressionStatement","src":"442:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:22"},"nodeType":"YulFunctionCall","src":"386:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:22","statements":[{"nodeType":"YulAssignment","src":"402:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:22"},"nodeType":"YulFunctionCall","src":"407:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:22","statements":[]},"src":"378:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:22"},"nodeType":"YulFunctionCall","src":"507:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:22"},"nodeType":"YulFunctionCall","src":"500:27:22"},"nodeType":"YulExpressionStatement","src":"500:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:22","type":""}],"src":"287:246:22"},{"body":{"nodeType":"YulBlock","src":"587:54:22","statements":[{"nodeType":"YulAssignment","src":"597:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:22"},"nodeType":"YulFunctionCall","src":"611:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:22"},"nodeType":"YulFunctionCall","src":"627:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:22"},"nodeType":"YulFunctionCall","src":"607:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:22","type":""}],"src":"539:102:22"},{"body":{"nodeType":"YulBlock","src":"739:285:22","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:22"},"nodeType":"YulFunctionCall","src":"763:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:22","type":""}]},{"nodeType":"YulAssignment","src":"811:78:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:22"},"nodeType":"YulFunctionCall","src":"818:71:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:22"},"nodeType":"YulFunctionCall","src":"933:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:22"},"nodeType":"YulFunctionCall","src":"898:65:22"},"nodeType":"YulExpressionStatement","src":"898:65:22"},{"nodeType":"YulAssignment","src":"972:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:22"},"nodeType":"YulFunctionCall","src":"988:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:22"},"nodeType":"YulFunctionCall","src":"979:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:22","type":""}],"src":"647:377:22"},{"body":{"nodeType":"YulBlock","src":"1148:195:22","statements":[{"nodeType":"YulAssignment","src":"1158:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:22"},"nodeType":"YulFunctionCall","src":"1166:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:22"},"nodeType":"YulFunctionCall","src":"1201:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:22"},"nodeType":"YulFunctionCall","src":"1220:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:22"},"nodeType":"YulFunctionCall","src":"1194:47:22"},"nodeType":"YulExpressionStatement","src":"1194:47:22"},{"nodeType":"YulAssignment","src":"1250:86:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:22"},"nodeType":"YulFunctionCall","src":"1258:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:22","type":""}],"src":"1030:313:22"},{"body":{"nodeType":"YulBlock","src":"1389:35:22","statements":[{"nodeType":"YulAssignment","src":"1399:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:22"},"nodeType":"YulFunctionCall","src":"1409:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:22","type":""}],"src":"1349:75:22"},{"body":{"nodeType":"YulBlock","src":"1519:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:22"},"nodeType":"YulFunctionCall","src":"1529:12:22"},"nodeType":"YulExpressionStatement","src":"1529:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:22"},{"body":{"nodeType":"YulBlock","src":"1642:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:22"},"nodeType":"YulFunctionCall","src":"1652:12:22"},"nodeType":"YulExpressionStatement","src":"1652:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:22"},{"body":{"nodeType":"YulBlock","src":"1721:32:22","statements":[{"nodeType":"YulAssignment","src":"1731:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1742:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:22","type":""}],"src":"1676:77:22"},{"body":{"nodeType":"YulBlock","src":"1802:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"1859:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1868:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1871:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1861:6:22"},"nodeType":"YulFunctionCall","src":"1861:12:22"},"nodeType":"YulExpressionStatement","src":"1861:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1825:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1850:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1832:17:22"},"nodeType":"YulFunctionCall","src":"1832:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1822:2:22"},"nodeType":"YulFunctionCall","src":"1822:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1815:6:22"},"nodeType":"YulFunctionCall","src":"1815:43:22"},"nodeType":"YulIf","src":"1812:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1795:5:22","type":""}],"src":"1759:122:22"},{"body":{"nodeType":"YulBlock","src":"1939:87:22","statements":[{"nodeType":"YulAssignment","src":"1949:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1971:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1958:12:22"},"nodeType":"YulFunctionCall","src":"1958:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1949:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2014:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1987:26:22"},"nodeType":"YulFunctionCall","src":"1987:33:22"},"nodeType":"YulExpressionStatement","src":"1987:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1917:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1925:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1933:5:22","type":""}],"src":"1887:139:22"},{"body":{"nodeType":"YulBlock","src":"2077:81:22","statements":[{"nodeType":"YulAssignment","src":"2087:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2102:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2109:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2098:3:22"},"nodeType":"YulFunctionCall","src":"2098:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2087:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2059:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2069:7:22","type":""}],"src":"2032:126:22"},{"body":{"nodeType":"YulBlock","src":"2209:51:22","statements":[{"nodeType":"YulAssignment","src":"2219:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2248:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2230:17:22"},"nodeType":"YulFunctionCall","src":"2230:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2219:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2191:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2201:7:22","type":""}],"src":"2164:96:22"},{"body":{"nodeType":"YulBlock","src":"2309:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:22"},"nodeType":"YulFunctionCall","src":"2368:12:22"},"nodeType":"YulExpressionStatement","src":"2368:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2339:17:22"},"nodeType":"YulFunctionCall","src":"2339:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:22"},"nodeType":"YulFunctionCall","src":"2329:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:22"},"nodeType":"YulFunctionCall","src":"2322:43:22"},"nodeType":"YulIf","src":"2319:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:22","type":""}],"src":"2266:122:22"},{"body":{"nodeType":"YulBlock","src":"2446:87:22","statements":[{"nodeType":"YulAssignment","src":"2456:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:22"},"nodeType":"YulFunctionCall","src":"2465:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2494:26:22"},"nodeType":"YulFunctionCall","src":"2494:33:22"},"nodeType":"YulExpressionStatement","src":"2494:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:22","type":""}],"src":"2394:139:22"},{"body":{"nodeType":"YulBlock","src":"2622:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:22"},"nodeType":"YulFunctionCall","src":"2670:79:22"},"nodeType":"YulExpressionStatement","src":"2670:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:22"},"nodeType":"YulFunctionCall","src":"2639:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:22"},"nodeType":"YulFunctionCall","src":"2635:32:22"},"nodeType":"YulIf","src":"2632:119:22"},{"nodeType":"YulBlock","src":"2761:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:22"},"nodeType":"YulFunctionCall","src":"2836:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2815:20:22"},"nodeType":"YulFunctionCall","src":"2815:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:22"}]}]},{"nodeType":"YulBlock","src":"2888:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:22"},"nodeType":"YulFunctionCall","src":"2964:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2943:20:22"},"nodeType":"YulFunctionCall","src":"2943:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:22","type":""}],"src":"2539:474:22"},{"body":{"nodeType":"YulBlock","src":"3085:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"3131:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3133:77:22"},"nodeType":"YulFunctionCall","src":"3133:79:22"},"nodeType":"YulExpressionStatement","src":"3133:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3106:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3115:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3102:3:22"},"nodeType":"YulFunctionCall","src":"3102:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3127:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3098:3:22"},"nodeType":"YulFunctionCall","src":"3098:32:22"},"nodeType":"YulIf","src":"3095:119:22"},{"nodeType":"YulBlock","src":"3224:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3239:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3253:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3243:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3268:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3314:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:22"},"nodeType":"YulFunctionCall","src":"3299:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3323:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3278:20:22"},"nodeType":"YulFunctionCall","src":"3278:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3268:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3055:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3066:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3078:6:22","type":""}],"src":"3019:329:22"},{"body":{"nodeType":"YulBlock","src":"3419:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3436:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3459:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3441:17:22"},"nodeType":"YulFunctionCall","src":"3441:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3429:6:22"},"nodeType":"YulFunctionCall","src":"3429:37:22"},"nodeType":"YulExpressionStatement","src":"3429:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3407:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3414:3:22","type":""}],"src":"3354:118:22"},{"body":{"nodeType":"YulBlock","src":"3576:124:22","statements":[{"nodeType":"YulAssignment","src":"3586:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3598:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3609:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3594:3:22"},"nodeType":"YulFunctionCall","src":"3594:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3586:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3666:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3679:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3690:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3675:3:22"},"nodeType":"YulFunctionCall","src":"3675:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3622:43:22"},"nodeType":"YulFunctionCall","src":"3622:71:22"},"nodeType":"YulExpressionStatement","src":"3622:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3548:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3560:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3571:4:22","type":""}],"src":"3478:222:22"},{"body":{"nodeType":"YulBlock","src":"3806:519:22","statements":[{"body":{"nodeType":"YulBlock","src":"3852:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3854:77:22"},"nodeType":"YulFunctionCall","src":"3854:79:22"},"nodeType":"YulExpressionStatement","src":"3854:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3827:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3823:3:22"},"nodeType":"YulFunctionCall","src":"3823:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3848:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3819:3:22"},"nodeType":"YulFunctionCall","src":"3819:32:22"},"nodeType":"YulIf","src":"3816:119:22"},{"nodeType":"YulBlock","src":"3945:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3960:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3974:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3964:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3989:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4024:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4035:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:22"},"nodeType":"YulFunctionCall","src":"4020:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4044:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3999:20:22"},"nodeType":"YulFunctionCall","src":"3999:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3989:6:22"}]}]},{"nodeType":"YulBlock","src":"4072:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4087:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4101:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4091:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4117:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4152:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4163:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:22"},"nodeType":"YulFunctionCall","src":"4148:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4172:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4127:20:22"},"nodeType":"YulFunctionCall","src":"4127:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4117:6:22"}]}]},{"nodeType":"YulBlock","src":"4200:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4215:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4229:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4219:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4245:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4280:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4291:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4276:3:22"},"nodeType":"YulFunctionCall","src":"4276:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4300:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4255:20:22"},"nodeType":"YulFunctionCall","src":"4255:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4245:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3760:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3771:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3783:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3791:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3799:6:22","type":""}],"src":"3706:619:22"},{"body":{"nodeType":"YulBlock","src":"4448:648:22","statements":[{"body":{"nodeType":"YulBlock","src":"4495:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4497:77:22"},"nodeType":"YulFunctionCall","src":"4497:79:22"},"nodeType":"YulExpressionStatement","src":"4497:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4469:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4478:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4465:3:22"},"nodeType":"YulFunctionCall","src":"4465:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4490:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4461:3:22"},"nodeType":"YulFunctionCall","src":"4461:33:22"},"nodeType":"YulIf","src":"4458:120:22"},{"nodeType":"YulBlock","src":"4588:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4603:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4617:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4607:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4632:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4667:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4678:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4663:3:22"},"nodeType":"YulFunctionCall","src":"4663:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4687:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4642:20:22"},"nodeType":"YulFunctionCall","src":"4642:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4632:6:22"}]}]},{"nodeType":"YulBlock","src":"4715:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4730:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4744:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4734:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4760:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4795:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4806:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4791:3:22"},"nodeType":"YulFunctionCall","src":"4791:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4815:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4770:20:22"},"nodeType":"YulFunctionCall","src":"4770:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4760:6:22"}]}]},{"nodeType":"YulBlock","src":"4843:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4858:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4872:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4862:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4888:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4923:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4934:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4919:3:22"},"nodeType":"YulFunctionCall","src":"4919:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4943:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4898:20:22"},"nodeType":"YulFunctionCall","src":"4898:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4888:6:22"}]}]},{"nodeType":"YulBlock","src":"4971:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4986:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5000:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4990:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5016:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5051:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5062:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5047:3:22"},"nodeType":"YulFunctionCall","src":"5047:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5071:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5026:20:22"},"nodeType":"YulFunctionCall","src":"5026:53:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5016:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4394:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4405:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4417:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4425:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4433:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4441:6:22","type":""}],"src":"4331:765:22"},{"body":{"nodeType":"YulBlock","src":"5167:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5184:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5207:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5189:17:22"},"nodeType":"YulFunctionCall","src":"5189:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5177:6:22"},"nodeType":"YulFunctionCall","src":"5177:37:22"},"nodeType":"YulExpressionStatement","src":"5177:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5155:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5162:3:22","type":""}],"src":"5102:118:22"},{"body":{"nodeType":"YulBlock","src":"5324:124:22","statements":[{"nodeType":"YulAssignment","src":"5334:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5346:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5357:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5342:3:22"},"nodeType":"YulFunctionCall","src":"5342:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5334:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5414:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5427:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5438:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5423:3:22"},"nodeType":"YulFunctionCall","src":"5423:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5370:43:22"},"nodeType":"YulFunctionCall","src":"5370:71:22"},"nodeType":"YulExpressionStatement","src":"5370:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5296:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5308:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5319:4:22","type":""}],"src":"5226:222:22"},{"body":{"nodeType":"YulBlock","src":"5543:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5560:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5563:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5553:6:22"},"nodeType":"YulFunctionCall","src":"5553:12:22"},"nodeType":"YulExpressionStatement","src":"5553:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5454:117:22"},{"body":{"nodeType":"YulBlock","src":"5666:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5683:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5686:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5676:6:22"},"nodeType":"YulFunctionCall","src":"5676:12:22"},"nodeType":"YulExpressionStatement","src":"5676:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5577:117:22"},{"body":{"nodeType":"YulBlock","src":"5728:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5745:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5748:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5738:6:22"},"nodeType":"YulFunctionCall","src":"5738:88:22"},"nodeType":"YulExpressionStatement","src":"5738:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5842:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5845:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5835:6:22"},"nodeType":"YulFunctionCall","src":"5835:15:22"},"nodeType":"YulExpressionStatement","src":"5835:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5866:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5869:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5859:6:22"},"nodeType":"YulFunctionCall","src":"5859:15:22"},"nodeType":"YulExpressionStatement","src":"5859:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5700:180:22"},{"body":{"nodeType":"YulBlock","src":"5929:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5939:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5961:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5991:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5969:21:22"},"nodeType":"YulFunctionCall","src":"5969:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5957:3:22"},"nodeType":"YulFunctionCall","src":"5957:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5943:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6108:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6110:16:22"},"nodeType":"YulFunctionCall","src":"6110:18:22"},"nodeType":"YulExpressionStatement","src":"6110:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6051:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"6063:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6048:2:22"},"nodeType":"YulFunctionCall","src":"6048:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6087:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6099:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6084:2:22"},"nodeType":"YulFunctionCall","src":"6084:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6045:2:22"},"nodeType":"YulFunctionCall","src":"6045:62:22"},"nodeType":"YulIf","src":"6042:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6146:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6150:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6139:6:22"},"nodeType":"YulFunctionCall","src":"6139:22:22"},"nodeType":"YulExpressionStatement","src":"6139:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5915:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"5923:4:22","type":""}],"src":"5886:281:22"},{"body":{"nodeType":"YulBlock","src":"6214:88:22","statements":[{"nodeType":"YulAssignment","src":"6224:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6234:18:22"},"nodeType":"YulFunctionCall","src":"6234:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6224:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6283:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"6291:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6263:19:22"},"nodeType":"YulFunctionCall","src":"6263:33:22"},"nodeType":"YulExpressionStatement","src":"6263:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6198:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6207:6:22","type":""}],"src":"6173:129:22"},{"body":{"nodeType":"YulBlock","src":"6375:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"6480:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6482:16:22"},"nodeType":"YulFunctionCall","src":"6482:18:22"},"nodeType":"YulExpressionStatement","src":"6482:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6452:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6460:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6449:2:22"},"nodeType":"YulFunctionCall","src":"6449:30:22"},"nodeType":"YulIf","src":"6446:56:22"},{"nodeType":"YulAssignment","src":"6512:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6542:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6520:21:22"},"nodeType":"YulFunctionCall","src":"6520:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6512:4:22"}]},{"nodeType":"YulAssignment","src":"6586:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6598:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"6604:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6594:3:22"},"nodeType":"YulFunctionCall","src":"6594:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6586:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6359:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6370:4:22","type":""}],"src":"6308:308:22"},{"body":{"nodeType":"YulBlock","src":"6686:82:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6709:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"6714:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6719:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6696:12:22"},"nodeType":"YulFunctionCall","src":"6696:30:22"},"nodeType":"YulExpressionStatement","src":"6696:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6746:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6751:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:22"},"nodeType":"YulFunctionCall","src":"6742:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"6760:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6735:6:22"},"nodeType":"YulFunctionCall","src":"6735:27:22"},"nodeType":"YulExpressionStatement","src":"6735:27:22"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6668:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6673:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6678:6:22","type":""}],"src":"6622:146:22"},{"body":{"nodeType":"YulBlock","src":"6858:341:22","statements":[{"nodeType":"YulAssignment","src":"6868:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6935:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6893:41:22"},"nodeType":"YulFunctionCall","src":"6893:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6877:15:22"},"nodeType":"YulFunctionCall","src":"6877:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6868:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6959:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"6966:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6952:6:22"},"nodeType":"YulFunctionCall","src":"6952:21:22"},"nodeType":"YulExpressionStatement","src":"6952:21:22"},{"nodeType":"YulVariableDeclaration","src":"6982:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6997:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7004:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6993:3:22"},"nodeType":"YulFunctionCall","src":"6993:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6986:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7047:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7049:77:22"},"nodeType":"YulFunctionCall","src":"7049:79:22"},"nodeType":"YulExpressionStatement","src":"7049:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7028:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7033:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7024:3:22"},"nodeType":"YulFunctionCall","src":"7024:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"7042:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7021:2:22"},"nodeType":"YulFunctionCall","src":"7021:25:22"},"nodeType":"YulIf","src":"7018:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7176:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"7181:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7186:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7139:36:22"},"nodeType":"YulFunctionCall","src":"7139:54:22"},"nodeType":"YulExpressionStatement","src":"7139:54:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6831:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"6836:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6844:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6852:5:22","type":""}],"src":"6774:425:22"},{"body":{"nodeType":"YulBlock","src":"7281:278:22","statements":[{"body":{"nodeType":"YulBlock","src":"7330:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7332:77:22"},"nodeType":"YulFunctionCall","src":"7332:79:22"},"nodeType":"YulExpressionStatement","src":"7332:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7309:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7317:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7305:3:22"},"nodeType":"YulFunctionCall","src":"7305:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"7324:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7301:3:22"},"nodeType":"YulFunctionCall","src":"7301:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7294:6:22"},"nodeType":"YulFunctionCall","src":"7294:35:22"},"nodeType":"YulIf","src":"7291:122:22"},{"nodeType":"YulVariableDeclaration","src":"7422:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7449:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7436:12:22"},"nodeType":"YulFunctionCall","src":"7436:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7426:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7465:88:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7526:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7534:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7522:3:22"},"nodeType":"YulFunctionCall","src":"7522:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"7541:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"7549:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7474:47:22"},"nodeType":"YulFunctionCall","src":"7474:79:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7465:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7259:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"7267:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7275:5:22","type":""}],"src":"7219:340:22"},{"body":{"nodeType":"YulBlock","src":"7658:561:22","statements":[{"body":{"nodeType":"YulBlock","src":"7704:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7706:77:22"},"nodeType":"YulFunctionCall","src":"7706:79:22"},"nodeType":"YulExpressionStatement","src":"7706:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7679:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"7688:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7675:3:22"},"nodeType":"YulFunctionCall","src":"7675:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"7700:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7671:3:22"},"nodeType":"YulFunctionCall","src":"7671:32:22"},"nodeType":"YulIf","src":"7668:119:22"},{"nodeType":"YulBlock","src":"7797:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7812:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7826:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7816:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7841:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7876:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7887:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7872:3:22"},"nodeType":"YulFunctionCall","src":"7872:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7896:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7851:20:22"},"nodeType":"YulFunctionCall","src":"7851:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7841:6:22"}]}]},{"nodeType":"YulBlock","src":"7924:288:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7939:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7970:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7981:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7966:3:22"},"nodeType":"YulFunctionCall","src":"7966:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7953:12:22"},"nodeType":"YulFunctionCall","src":"7953:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7943:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8032:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8034:77:22"},"nodeType":"YulFunctionCall","src":"8034:79:22"},"nodeType":"YulExpressionStatement","src":"8034:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8004:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8012:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8001:2:22"},"nodeType":"YulFunctionCall","src":"8001:30:22"},"nodeType":"YulIf","src":"7998:117:22"},{"nodeType":"YulAssignment","src":"8129:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8174:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"8185:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8170:3:22"},"nodeType":"YulFunctionCall","src":"8170:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8194:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8139:30:22"},"nodeType":"YulFunctionCall","src":"8139:63:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8129:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7620:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7631:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7643:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7651:6:22","type":""}],"src":"7565:654:22"},{"body":{"nodeType":"YulBlock","src":"8253:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8270:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8273:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8263:6:22"},"nodeType":"YulFunctionCall","src":"8263:88:22"},"nodeType":"YulExpressionStatement","src":"8263:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8367:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8370:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8360:6:22"},"nodeType":"YulFunctionCall","src":"8360:15:22"},"nodeType":"YulExpressionStatement","src":"8360:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8391:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8394:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8384:6:22"},"nodeType":"YulFunctionCall","src":"8384:15:22"},"nodeType":"YulExpressionStatement","src":"8384:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8225:180:22"},{"body":{"nodeType":"YulBlock","src":"8462:269:22","statements":[{"nodeType":"YulAssignment","src":"8472:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8486:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"8492:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8482:3:22"},"nodeType":"YulFunctionCall","src":"8482:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8472:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"8503:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8533:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"8539:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8529:3:22"},"nodeType":"YulFunctionCall","src":"8529:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8507:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8580:51:22","statements":[{"nodeType":"YulAssignment","src":"8594:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8608:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8604:3:22"},"nodeType":"YulFunctionCall","src":"8604:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8594:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8560:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8553:6:22"},"nodeType":"YulFunctionCall","src":"8553:26:22"},"nodeType":"YulIf","src":"8550:81:22"},{"body":{"nodeType":"YulBlock","src":"8683:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8697:16:22"},"nodeType":"YulFunctionCall","src":"8697:18:22"},"nodeType":"YulExpressionStatement","src":"8697:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8647:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8670:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8678:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8667:2:22"},"nodeType":"YulFunctionCall","src":"8667:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8644:2:22"},"nodeType":"YulFunctionCall","src":"8644:38:22"},"nodeType":"YulIf","src":"8641:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8446:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8455:6:22","type":""}],"src":"8411:320:22"},{"body":{"nodeType":"YulBlock","src":"8765:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8782:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8785:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8775:6:22"},"nodeType":"YulFunctionCall","src":"8775:88:22"},"nodeType":"YulExpressionStatement","src":"8775:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8879:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8882:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8872:6:22"},"nodeType":"YulFunctionCall","src":"8872:15:22"},"nodeType":"YulExpressionStatement","src":"8872:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8903:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8906:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8896:6:22"},"nodeType":"YulFunctionCall","src":"8896:15:22"},"nodeType":"YulExpressionStatement","src":"8896:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8737:180:22"},{"body":{"nodeType":"YulBlock","src":"8968:149:22","statements":[{"nodeType":"YulAssignment","src":"8978:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9001:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8983:17:22"},"nodeType":"YulFunctionCall","src":"8983:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8978:1:22"}]},{"nodeType":"YulAssignment","src":"9012:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9035:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9017:17:22"},"nodeType":"YulFunctionCall","src":"9017:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9012:1:22"}]},{"nodeType":"YulAssignment","src":"9046:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9058:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"9061:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9054:3:22"},"nodeType":"YulFunctionCall","src":"9054:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9046:4:22"}]},{"body":{"nodeType":"YulBlock","src":"9088:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9090:16:22"},"nodeType":"YulFunctionCall","src":"9090:18:22"},"nodeType":"YulExpressionStatement","src":"9090:18:22"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9079:4:22"},{"name":"x","nodeType":"YulIdentifier","src":"9085:1:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9076:2:22"},"nodeType":"YulFunctionCall","src":"9076:11:22"},"nodeType":"YulIf","src":"9073:37:22"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8954:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"8957:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8963:4:22","type":""}],"src":"8923:194:22"},{"body":{"nodeType":"YulBlock","src":"9229:73:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9251:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9259:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9247:3:22"},"nodeType":"YulFunctionCall","src":"9247:14:22"},{"hexValue":"4e6f20617070726f76656420746f206d616b6520746869732063616c6c","kind":"string","nodeType":"YulLiteral","src":"9263:31:22","type":"","value":"No approved to make this call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9240:6:22"},"nodeType":"YulFunctionCall","src":"9240:55:22"},"nodeType":"YulExpressionStatement","src":"9240:55:22"}]},"name":"store_literal_in_memory_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9221:6:22","type":""}],"src":"9123:179:22"},{"body":{"nodeType":"YulBlock","src":"9454:220:22","statements":[{"nodeType":"YulAssignment","src":"9464:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9530:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9535:2:22","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9471:58:22"},"nodeType":"YulFunctionCall","src":"9471:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9464:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9636:3:22"}],"functionName":{"name":"store_literal_in_memory_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621","nodeType":"YulIdentifier","src":"9547:88:22"},"nodeType":"YulFunctionCall","src":"9547:93:22"},"nodeType":"YulExpressionStatement","src":"9547:93:22"},{"nodeType":"YulAssignment","src":"9649:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9660:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9665:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9656:3:22"},"nodeType":"YulFunctionCall","src":"9656:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9649:3:22"}]}]},"name":"abi_encode_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9442:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9450:3:22","type":""}],"src":"9308:366:22"},{"body":{"nodeType":"YulBlock","src":"9851:248:22","statements":[{"nodeType":"YulAssignment","src":"9861:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9873:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9884:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9869:3:22"},"nodeType":"YulFunctionCall","src":"9869:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9861:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9908:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9919:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9904:3:22"},"nodeType":"YulFunctionCall","src":"9904:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9927:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9933:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9923:3:22"},"nodeType":"YulFunctionCall","src":"9923:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9897:6:22"},"nodeType":"YulFunctionCall","src":"9897:47:22"},"nodeType":"YulExpressionStatement","src":"9897:47:22"},{"nodeType":"YulAssignment","src":"9953:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10087:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9961:124:22"},"nodeType":"YulFunctionCall","src":"9961:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9953:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9831:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9846:4:22","type":""}],"src":"9680:419:22"},{"body":{"nodeType":"YulBlock","src":"10152:32:22","statements":[{"nodeType":"YulAssignment","src":"10162:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"10173:5:22"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"10162:7:22"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10134:5:22","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"10144:7:22","type":""}],"src":"10105:79:22"},{"body":{"nodeType":"YulBlock","src":"10273:74:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10290:3:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10333:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10315:17:22"},"nodeType":"YulFunctionCall","src":"10315:24:22"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"10295:19:22"},"nodeType":"YulFunctionCall","src":"10295:45:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10283:6:22"},"nodeType":"YulFunctionCall","src":"10283:58:22"},"nodeType":"YulExpressionStatement","src":"10283:58:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10261:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10268:3:22","type":""}],"src":"10190:157:22"},{"body":{"nodeType":"YulBlock","src":"10469:140:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10542:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"10551:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10480:61:22"},"nodeType":"YulFunctionCall","src":"10480:75:22"},"nodeType":"YulExpressionStatement","src":"10480:75:22"},{"nodeType":"YulAssignment","src":"10564:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10575:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10580:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10571:3:22"},"nodeType":"YulFunctionCall","src":"10571:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10564:3:22"}]},{"nodeType":"YulAssignment","src":"10593:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"10600:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10593:3:22"}]}]},"name":"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10448:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10454:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10465:3:22","type":""}],"src":"10353:256:22"},{"body":{"nodeType":"YulBlock","src":"10721:65:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10743:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10751:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10739:3:22"},"nodeType":"YulFunctionCall","src":"10739:14:22"},{"hexValue":"496e76616c696420636f6d69666965722068617368","kind":"string","nodeType":"YulLiteral","src":"10755:23:22","type":"","value":"Invalid comifier hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10732:6:22"},"nodeType":"YulFunctionCall","src":"10732:47:22"},"nodeType":"YulExpressionStatement","src":"10732:47:22"}]},"name":"store_literal_in_memory_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10713:6:22","type":""}],"src":"10615:171:22"},{"body":{"nodeType":"YulBlock","src":"10938:220:22","statements":[{"nodeType":"YulAssignment","src":"10948:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11014:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11019:2:22","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10955:58:22"},"nodeType":"YulFunctionCall","src":"10955:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10948:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11120:3:22"}],"functionName":{"name":"store_literal_in_memory_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3","nodeType":"YulIdentifier","src":"11031:88:22"},"nodeType":"YulFunctionCall","src":"11031:93:22"},"nodeType":"YulExpressionStatement","src":"11031:93:22"},{"nodeType":"YulAssignment","src":"11133:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11144:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11149:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11140:3:22"},"nodeType":"YulFunctionCall","src":"11140:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11133:3:22"}]}]},"name":"abi_encode_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10926:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10934:3:22","type":""}],"src":"10792:366:22"},{"body":{"nodeType":"YulBlock","src":"11335:248:22","statements":[{"nodeType":"YulAssignment","src":"11345:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11357:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11368:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11353:3:22"},"nodeType":"YulFunctionCall","src":"11353:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11345:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11392:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11403:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11388:3:22"},"nodeType":"YulFunctionCall","src":"11388:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11411:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11407:3:22"},"nodeType":"YulFunctionCall","src":"11407:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11381:6:22"},"nodeType":"YulFunctionCall","src":"11381:47:22"},"nodeType":"YulExpressionStatement","src":"11381:47:22"},{"nodeType":"YulAssignment","src":"11437:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11571:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11445:124:22"},"nodeType":"YulFunctionCall","src":"11445:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11437:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11315:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11330:4:22","type":""}],"src":"11164:419:22"},{"body":{"nodeType":"YulBlock","src":"11632:190:22","statements":[{"nodeType":"YulAssignment","src":"11642:33:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11669:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11651:17:22"},"nodeType":"YulFunctionCall","src":"11651:24:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11642:5:22"}]},{"body":{"nodeType":"YulBlock","src":"11765:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11767:16:22"},"nodeType":"YulFunctionCall","src":"11767:18:22"},"nodeType":"YulExpressionStatement","src":"11767:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11690:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11697:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11687:2:22"},"nodeType":"YulFunctionCall","src":"11687:77:22"},"nodeType":"YulIf","src":"11684:103:22"},{"nodeType":"YulAssignment","src":"11796:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11807:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11814:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11803:3:22"},"nodeType":"YulFunctionCall","src":"11803:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11796:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11618:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11628:3:22","type":""}],"src":"11589:233:22"},{"body":{"nodeType":"YulBlock","src":"11934:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11956:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11964:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11952:3:22"},"nodeType":"YulFunctionCall","src":"11952:14:22"},{"hexValue":"496e76616c6964206f70657261746f722061646472657373","kind":"string","nodeType":"YulLiteral","src":"11968:26:22","type":"","value":"Invalid operator address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11945:6:22"},"nodeType":"YulFunctionCall","src":"11945:50:22"},"nodeType":"YulExpressionStatement","src":"11945:50:22"}]},"name":"store_literal_in_memory_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11926:6:22","type":""}],"src":"11828:174:22"},{"body":{"nodeType":"YulBlock","src":"12154:220:22","statements":[{"nodeType":"YulAssignment","src":"12164:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12230:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12235:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12171:58:22"},"nodeType":"YulFunctionCall","src":"12171:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12164:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12336:3:22"}],"functionName":{"name":"store_literal_in_memory_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75","nodeType":"YulIdentifier","src":"12247:88:22"},"nodeType":"YulFunctionCall","src":"12247:93:22"},"nodeType":"YulExpressionStatement","src":"12247:93:22"},{"nodeType":"YulAssignment","src":"12349:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12360:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12365:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12356:3:22"},"nodeType":"YulFunctionCall","src":"12356:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12349:3:22"}]}]},"name":"abi_encode_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12142:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12150:3:22","type":""}],"src":"12008:366:22"},{"body":{"nodeType":"YulBlock","src":"12551:248:22","statements":[{"nodeType":"YulAssignment","src":"12561:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12573:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12584:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12569:3:22"},"nodeType":"YulFunctionCall","src":"12569:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12561:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12608:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12619:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12604:3:22"},"nodeType":"YulFunctionCall","src":"12604:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12627:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"12633:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12623:3:22"},"nodeType":"YulFunctionCall","src":"12623:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12597:6:22"},"nodeType":"YulFunctionCall","src":"12597:47:22"},"nodeType":"YulExpressionStatement","src":"12597:47:22"},{"nodeType":"YulAssignment","src":"12653:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12787:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12661:124:22"},"nodeType":"YulFunctionCall","src":"12661:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12653:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12531:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12546:4:22","type":""}],"src":"12380:419:22"},{"body":{"nodeType":"YulBlock","src":"12849:147:22","statements":[{"nodeType":"YulAssignment","src":"12859:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12882:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12864:17:22"},"nodeType":"YulFunctionCall","src":"12864:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12859:1:22"}]},{"nodeType":"YulAssignment","src":"12893:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12916:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12898:17:22"},"nodeType":"YulFunctionCall","src":"12898:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12893:1:22"}]},{"nodeType":"YulAssignment","src":"12927:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12938:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"12941:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12934:3:22"},"nodeType":"YulFunctionCall","src":"12934:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12927:3:22"}]},{"body":{"nodeType":"YulBlock","src":"12967:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12969:16:22"},"nodeType":"YulFunctionCall","src":"12969:18:22"},"nodeType":"YulExpressionStatement","src":"12969:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12959:1:22"},{"name":"sum","nodeType":"YulIdentifier","src":"12962:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12956:2:22"},"nodeType":"YulFunctionCall","src":"12956:10:22"},"nodeType":"YulIf","src":"12953:36:22"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12836:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"12839:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12845:3:22","type":""}],"src":"12805:191:22"},{"body":{"nodeType":"YulBlock","src":"13056:87:22","statements":[{"nodeType":"YulAssignment","src":"13066:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13074:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13066:4:22"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13094:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"13097:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13087:6:22"},"nodeType":"YulFunctionCall","src":"13087:14:22"},"nodeType":"YulExpressionStatement","src":"13087:14:22"},{"nodeType":"YulAssignment","src":"13110:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13128:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13131:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13118:9:22"},"nodeType":"YulFunctionCall","src":"13118:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13110:4:22"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13043:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13051:4:22","type":""}],"src":"13002:141:22"},{"body":{"nodeType":"YulBlock","src":"13193:49:22","statements":[{"nodeType":"YulAssignment","src":"13203:33:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13221:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"13228:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13217:3:22"},"nodeType":"YulFunctionCall","src":"13217:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"13233:2:22","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13213:3:22"},"nodeType":"YulFunctionCall","src":"13213:23:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13203:6:22"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13176:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13186:6:22","type":""}],"src":"13149:93:22"},{"body":{"nodeType":"YulBlock","src":"13301:54:22","statements":[{"nodeType":"YulAssignment","src":"13311:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"13336:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"13342:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13332:3:22"},"nodeType":"YulFunctionCall","src":"13332:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13311:8:22"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"13276:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"13282:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13292:8:22","type":""}],"src":"13248:107:22"},{"body":{"nodeType":"YulBlock","src":"13437:317:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13447:35:22","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"13468:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"13480:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13464:3:22"},"nodeType":"YulFunctionCall","src":"13464:18:22"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"13451:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13491:109:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"13522:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13533:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"13503:18:22"},"nodeType":"YulFunctionCall","src":"13503:97:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"13495:4:22","type":""}]},{"nodeType":"YulAssignment","src":"13609:51:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"13640:9:22"},{"name":"toInsert","nodeType":"YulIdentifier","src":"13651:8:22"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"13621:18:22"},"nodeType":"YulFunctionCall","src":"13621:39:22"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"13609:8:22"}]},{"nodeType":"YulAssignment","src":"13669:30:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13682:5:22"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"13693:4:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13689:3:22"},"nodeType":"YulFunctionCall","src":"13689:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13678:3:22"},"nodeType":"YulFunctionCall","src":"13678:21:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13669:5:22"}]},{"nodeType":"YulAssignment","src":"13708:40:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13721:5:22"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"13732:8:22"},{"name":"mask","nodeType":"YulIdentifier","src":"13742:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13728:3:22"},"nodeType":"YulFunctionCall","src":"13728:19:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13718:2:22"},"nodeType":"YulFunctionCall","src":"13718:30:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13708:6:22"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13398:5:22","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"13405:10:22","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"13417:8:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13430:6:22","type":""}],"src":"13361:393:22"},{"body":{"nodeType":"YulBlock","src":"13792:28:22","statements":[{"nodeType":"YulAssignment","src":"13802:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"13809:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13802:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13778:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13788:3:22","type":""}],"src":"13760:60:22"},{"body":{"nodeType":"YulBlock","src":"13886:82:22","statements":[{"nodeType":"YulAssignment","src":"13896:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13954:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13936:17:22"},"nodeType":"YulFunctionCall","src":"13936:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"13927:8:22"},"nodeType":"YulFunctionCall","src":"13927:34:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13909:17:22"},"nodeType":"YulFunctionCall","src":"13909:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13896:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13866:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13876:9:22","type":""}],"src":"13826:142:22"},{"body":{"nodeType":"YulBlock","src":"14021:28:22","statements":[{"nodeType":"YulAssignment","src":"14031:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"14038:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14031:3:22"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14007:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14017:3:22","type":""}],"src":"13974:75:22"},{"body":{"nodeType":"YulBlock","src":"14131:193:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14141:63:22","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"14196:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14165:30:22"},"nodeType":"YulFunctionCall","src":"14165:39:22"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"14145:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14220:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14260:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14254:5:22"},"nodeType":"YulFunctionCall","src":"14254:11:22"},{"name":"offset","nodeType":"YulIdentifier","src":"14267:6:22"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"14299:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"14275:23:22"},"nodeType":"YulFunctionCall","src":"14275:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"14226:27:22"},"nodeType":"YulFunctionCall","src":"14226:91:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14213:6:22"},"nodeType":"YulFunctionCall","src":"14213:105:22"},"nodeType":"YulExpressionStatement","src":"14213:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14108:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"14114:6:22","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"14122:7:22","type":""}],"src":"14055:269:22"},{"body":{"nodeType":"YulBlock","src":"14379:24:22","statements":[{"nodeType":"YulAssignment","src":"14389:8:22","value":{"kind":"number","nodeType":"YulLiteral","src":"14396:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14389:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14375:3:22","type":""}],"src":"14330:73:22"},{"body":{"nodeType":"YulBlock","src":"14462:136:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14472:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"14486:30:22"},"nodeType":"YulFunctionCall","src":"14486:32:22"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"14476:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14571:4:22"},{"name":"offset","nodeType":"YulIdentifier","src":"14577:6:22"},{"name":"zero_0","nodeType":"YulIdentifier","src":"14585:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14527:43:22"},"nodeType":"YulFunctionCall","src":"14527:65:22"},"nodeType":"YulExpressionStatement","src":"14527:65:22"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14448:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"14454:6:22","type":""}],"src":"14409:189:22"},{"body":{"nodeType":"YulBlock","src":"14654:136:22","statements":[{"body":{"nodeType":"YulBlock","src":"14721:63:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14765:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"14772:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"14735:29:22"},"nodeType":"YulFunctionCall","src":"14735:39:22"},"nodeType":"YulExpressionStatement","src":"14735:39:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14674:5:22"},{"name":"end","nodeType":"YulIdentifier","src":"14681:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14671:2:22"},"nodeType":"YulFunctionCall","src":"14671:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14686:26:22","statements":[{"nodeType":"YulAssignment","src":"14688:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14701:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"14708:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14697:3:22"},"nodeType":"YulFunctionCall","src":"14697:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"14688:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"14668:2:22","statements":[]},"src":"14664:120:22"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"14642:5:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"14649:3:22","type":""}],"src":"14604:186:22"},{"body":{"nodeType":"YulBlock","src":"14875:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"14901:431:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14915:54:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14963:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"14931:31:22"},"nodeType":"YulFunctionCall","src":"14931:38:22"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"14919:8:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14982:63:22","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"15005:8:22"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15033:10:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"15015:17:22"},"nodeType":"YulFunctionCall","src":"15015:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15001:3:22"},"nodeType":"YulFunctionCall","src":"15001:44:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"14986:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"15202:27:22","statements":[{"nodeType":"YulAssignment","src":"15204:23:22","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"15219:8:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"15204:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15186:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"15198:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15183:2:22"},"nodeType":"YulFunctionCall","src":"15183:18:22"},"nodeType":"YulIf","src":"15180:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"15271:11:22"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"15288:8:22"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15316:3:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"15298:17:22"},"nodeType":"YulFunctionCall","src":"15298:22:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:22"},"nodeType":"YulFunctionCall","src":"15284:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"15242:28:22"},"nodeType":"YulFunctionCall","src":"15242:80:22"},"nodeType":"YulExpressionStatement","src":"15242:80:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14892:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14897:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14889:2:22"},"nodeType":"YulFunctionCall","src":"14889:11:22"},"nodeType":"YulIf","src":"14886:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"14851:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"14858:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"14863:10:22","type":""}],"src":"14796:543:22"},{"body":{"nodeType":"YulBlock","src":"15408:54:22","statements":[{"nodeType":"YulAssignment","src":"15418:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"15443:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"15449:5:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15439:3:22"},"nodeType":"YulFunctionCall","src":"15439:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"15418:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"15383:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"15389:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"15399:8:22","type":""}],"src":"15345:117:22"},{"body":{"nodeType":"YulBlock","src":"15519:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"15529:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15578:1:22","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"15581:5:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15574:3:22"},"nodeType":"YulFunctionCall","src":"15574:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15593:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15589:3:22"},"nodeType":"YulFunctionCall","src":"15589:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"15545:28:22"},"nodeType":"YulFunctionCall","src":"15545:51:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15541:3:22"},"nodeType":"YulFunctionCall","src":"15541:56:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"15533:4:22","type":""}]},{"nodeType":"YulAssignment","src":"15606:25:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15620:4:22"},{"name":"mask","nodeType":"YulIdentifier","src":"15626:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15616:3:22"},"nodeType":"YulFunctionCall","src":"15616:15:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15606:6:22"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15496:4:22","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"15502:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"15512:6:22","type":""}],"src":"15468:169:22"},{"body":{"nodeType":"YulBlock","src":"15723:214:22","statements":[{"nodeType":"YulAssignment","src":"15856:37:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15883:4:22"},{"name":"len","nodeType":"YulIdentifier","src":"15889:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"15864:18:22"},"nodeType":"YulFunctionCall","src":"15864:29:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15856:4:22"}]},{"nodeType":"YulAssignment","src":"15902:29:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15913:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15923:1:22","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"15926:3:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15919:3:22"},"nodeType":"YulFunctionCall","src":"15919:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15910:2:22"},"nodeType":"YulFunctionCall","src":"15910:21:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"15902:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15704:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"15710:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"15718:4:22","type":""}],"src":"15642:295:22"},{"body":{"nodeType":"YulBlock","src":"16034:1303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16045:51:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16092:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16059:32:22"},"nodeType":"YulFunctionCall","src":"16059:37:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"16049:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"16181:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16183:16:22"},"nodeType":"YulFunctionCall","src":"16183:18:22"},"nodeType":"YulExpressionStatement","src":"16183:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16153:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16161:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16150:2:22"},"nodeType":"YulFunctionCall","src":"16150:30:22"},"nodeType":"YulIf","src":"16147:56:22"},{"nodeType":"YulVariableDeclaration","src":"16213:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16259:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16253:5:22"},"nodeType":"YulFunctionCall","src":"16253:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"16227:25:22"},"nodeType":"YulFunctionCall","src":"16227:38:22"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"16217:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16358:4:22"},{"name":"oldLen","nodeType":"YulIdentifier","src":"16364:6:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"16372:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"16312:45:22"},"nodeType":"YulFunctionCall","src":"16312:67:22"},"nodeType":"YulExpressionStatement","src":"16312:67:22"},{"nodeType":"YulVariableDeclaration","src":"16389:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"16406:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"16393:9:22","type":""}]},{"nodeType":"YulAssignment","src":"16417:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"16430:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16417:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16481:611:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16495:37:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16514:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16526:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16522:3:22"},"nodeType":"YulFunctionCall","src":"16522:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16510:3:22"},"nodeType":"YulFunctionCall","src":"16510:22:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"16499:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16546:51:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16592:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"16560:31:22"},"nodeType":"YulFunctionCall","src":"16560:37:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"16550:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16610:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"16619:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16614:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"16678:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16703:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16721:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16726:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16717:3:22"},"nodeType":"YulFunctionCall","src":"16717:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16711:5:22"},"nodeType":"YulFunctionCall","src":"16711:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16696:6:22"},"nodeType":"YulFunctionCall","src":"16696:42:22"},"nodeType":"YulExpressionStatement","src":"16696:42:22"},{"nodeType":"YulAssignment","src":"16755:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16769:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16777:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16765:3:22"},"nodeType":"YulFunctionCall","src":"16765:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16755:6:22"}]},{"nodeType":"YulAssignment","src":"16796:31:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16813:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16824:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16809:3:22"},"nodeType":"YulFunctionCall","src":"16809:18:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16796:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16644:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"16647:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16641:2:22"},"nodeType":"YulFunctionCall","src":"16641:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16656:21:22","statements":[{"nodeType":"YulAssignment","src":"16658:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16667:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"16670:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16663:3:22"},"nodeType":"YulFunctionCall","src":"16663:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16658:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"16637:3:22","statements":[]},"src":"16633:208:22"},{"body":{"nodeType":"YulBlock","src":"16877:156:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16895:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16922:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16927:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16918:3:22"},"nodeType":"YulFunctionCall","src":"16918:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16912:5:22"},"nodeType":"YulFunctionCall","src":"16912:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"16899:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16962:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"16989:9:22"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17004:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"17012:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17000:3:22"},"nodeType":"YulFunctionCall","src":"17000:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"16970:18:22"},"nodeType":"YulFunctionCall","src":"16970:48:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16955:6:22"},"nodeType":"YulFunctionCall","src":"16955:64:22"},"nodeType":"YulExpressionStatement","src":"16955:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"16860:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"16869:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16857:2:22"},"nodeType":"YulFunctionCall","src":"16857:19:22"},"nodeType":"YulIf","src":"16854:179:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17053:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"17067:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"17075:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17063:3:22"},"nodeType":"YulFunctionCall","src":"17063:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"17079:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17059:3:22"},"nodeType":"YulFunctionCall","src":"17059:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17046:6:22"},"nodeType":"YulFunctionCall","src":"17046:36:22"},"nodeType":"YulExpressionStatement","src":"17046:36:22"}]},"nodeType":"YulCase","src":"16474:618:22","value":{"kind":"number","nodeType":"YulLiteral","src":"16479:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17109:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17123:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"17136:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17127:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"17160:67:22","statements":[{"nodeType":"YulAssignment","src":"17178:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17197:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"17202:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17193:3:22"},"nodeType":"YulFunctionCall","src":"17193:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17187:5:22"},"nodeType":"YulFunctionCall","src":"17187:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17178:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"17153:6:22"},"nodeType":"YulIf","src":"17150:77:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17247:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17306:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"17313:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"17253:52:22"},"nodeType":"YulFunctionCall","src":"17253:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17240:6:22"},"nodeType":"YulFunctionCall","src":"17240:81:22"},"nodeType":"YulExpressionStatement","src":"17240:81:22"}]},"nodeType":"YulCase","src":"17101:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16454:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16462:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16451:2:22"},"nodeType":"YulFunctionCall","src":"16451:14:22"},"nodeType":"YulSwitch","src":"16444:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"16023:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"16029:3:22","type":""}],"src":"15942:1395:22"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621(memPtr) {\n\n        mstore(add(memPtr, 0), \"No approved to make this call\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa4a65bf301dfc72861a0b8b4157b4d0a9bd3ee4f8e5fbb91badb803befde621_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid comifier hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6aee50cc1962f545b2b70848e33687da4fe706a44eeb1c01fbdf22be16159f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid operator address\")\n\n    }\n\n    function abi_encode_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806395d89b411161007157806395d89b4114610164578063a50348dc14610182578063d78092521461019e578063efeecb51146101ce578063f32b5124146101ec578063febe490914610208576100a9565b806306fdde03146100ae578063263c7868146100cc5780633bb3a24d146100e85780636352211e146101185780638894c44614610148575b600080fd5b6100b6610224565b6040516100c39190610a2f565b60405180910390f35b6100e660048036038101906100e19190610af9565b6102b6565b005b61010260048036038101906100fd9190610b39565b6102ba565b60405161010f9190610a2f565b60405180910390f35b610132600480360381019061012d9190610b39565b6102c1565b60405161013f9190610b75565b60405180910390f35b610162600480360381019061015d9190610b90565b6102de565b005b61016c610469565b6040516101799190610a2f565b60405180910390f35b61019c60048036038101906101979190610be3565b6104fb565b005b6101b860048036038101906101b39190610b39565b610618565b6040516101c59190610c59565b60405180910390f35b6101d6610655565b6040516101e39190610b75565b60405180910390f35b61020660048036038101906102019190610da9565b61065f565b005b610222600480360381019061021d9190610af9565b610695565b005b60606006805461023390610e34565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610e34565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050905090565b5050565b6060919050565b600060036000838152602001908152602001600020549050919050565b60006003600085815260200190815260200160002054905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360008681526020019081526020016000206000905560006001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103939190610e94565b90506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020600090556001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104389190610e94565b9250508190555061044984866107ab565b846003600088815260200190815260200160002081905550505050505050565b60606007805461047890610e34565b80601f01602080910402602001604051908101604052809291908181526020018280546104a490610e34565b80156104f15780601f106104c6576101008083540402835291602001916104f1565b820191906000526020600020905b8154815290600101906020018083116104d457829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff1661051b82610618565b73ffffffffffffffffffffffffffffffffffffffff1614610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610f14565b60405180910390fd5b836040516020016105829190610f55565b604051602081830303815290604052805190602001206105a1826102c1565b6040516020016105b19190610f55565b6040516020818303038152906040528051906020012014610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90610fbc565b60405180910390fd5b6106128184846102de565b50505050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600854905090565b600033905061066e81846107ab565b61067883836108f1565b6008600081548092919061068b90610fdc565b9190505550505050565b60006003600084815260200190815260200160002054905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90611070565b60405180910390fd5b826005600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020819055506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108e59190611090565b92505081905550505050565b81600360006008548152602001908152602001600020819055506109176008548261094d565b6008548260007fb12d87e4ee7f2fb6d2b85a4b7875bc64a51a45e85c452f968ce17e9ef133b93860405160405180910390a45050565b8060046000848152602001908152602001600020908161096d9190611270565b50817ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760405160405180910390a25050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109d95780820151818401526020810190506109be565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a018261099f565b610a0b81856109aa565b9350610a1b8185602086016109bb565b610a24816109e5565b840191505092915050565b60006020820190508181036000830152610a4981846109f6565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a7881610a65565b8114610a8357600080fd5b50565b600081359050610a9581610a6f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac682610a9b565b9050919050565b610ad681610abb565b8114610ae157600080fd5b50565b600081359050610af381610acd565b92915050565b60008060408385031215610b1057610b0f610a5b565b5b6000610b1e85828601610a86565b9250506020610b2f85828601610ae4565b9150509250929050565b600060208284031215610b4f57610b4e610a5b565b5b6000610b5d84828501610a86565b91505092915050565b610b6f81610a65565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b600080600060608486031215610ba957610ba8610a5b565b5b6000610bb786828701610a86565b9350506020610bc886828701610a86565b9250506040610bd986828701610ae4565b9150509250925092565b60008060008060808587031215610bfd57610bfc610a5b565b5b6000610c0b87828801610a86565b9450506020610c1c87828801610a86565b9350506040610c2d87828801610ae4565b9250506060610c3e87828801610a86565b91505092959194509250565b610c5381610abb565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cb6826109e5565b810181811067ffffffffffffffff82111715610cd557610cd4610c7e565b5b80604052505050565b6000610ce8610a51565b9050610cf48282610cad565b919050565b600067ffffffffffffffff821115610d1457610d13610c7e565b5b610d1d826109e5565b9050602081019050919050565b82818337600083830152505050565b6000610d4c610d4784610cf9565b610cde565b905082815260208101848484011115610d6857610d67610c79565b5b610d73848285610d2a565b509392505050565b600082601f830112610d9057610d8f610c74565b5b8135610da0848260208601610d39565b91505092915050565b60008060408385031215610dc057610dbf610a5b565b5b6000610dce85828601610a86565b925050602083013567ffffffffffffffff811115610def57610dee610a60565b5b610dfb85828601610d7b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e4c57607f821691505b602082108103610e5f57610e5e610e05565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9f82610a65565b9150610eaa83610a65565b9250828203905081811115610ec257610ec1610e65565b5b92915050565b7f4e6f20617070726f76656420746f206d616b6520746869732063616c6c000000600082015250565b6000610efe601d836109aa565b9150610f0982610ec8565b602082019050919050565b60006020820190508181036000830152610f2d81610ef1565b9050919050565b6000819050919050565b610f4f610f4a82610a65565b610f34565b82525050565b6000610f618284610f3e565b60208201915081905092915050565b7f496e76616c696420636f6d696669657220686173680000000000000000000000600082015250565b6000610fa66015836109aa565b9150610fb182610f70565b602082019050919050565b60006020820190508181036000830152610fd581610f99565b9050919050565b6000610fe782610a65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361101957611018610e65565b5b600182019050919050565b7f496e76616c6964206f70657261746f7220616464726573730000000000000000600082015250565b600061105a6018836109aa565b915061106582611024565b602082019050919050565b600060208201905081810360008301526110898161104d565b9050919050565b600061109b82610a65565b91506110a683610a65565b92508282019050808211156110be576110bd610e65565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110e9565b61113086836110e9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061116d61116861116384610a65565b611148565b610a65565b9050919050565b6000819050919050565b61118783611152565b61119b61119382611174565b8484546110f6565b825550505050565b600090565b6111b06111a3565b6111bb81848461117e565b505050565b5b818110156111df576111d46000826111a8565b6001810190506111c1565b5050565b601f821115611224576111f5816110c4565b6111fe846110d9565b8101602085101561120d578190505b611221611219856110d9565b8301826111c0565b50505b505050565b600082821c905092915050565b600061124760001984600802611229565b1980831691505092915050565b60006112608383611236565b9150826002028217905092915050565b6112798261099f565b67ffffffffffffffff81111561129257611291610c7e565b5b61129c8254610e34565b6112a78282856111e3565b600060209050601f8311600181146112da57600084156112c8578287015190505b6112d28582611254565b86555061133a565b601f1984166112e8866110c4565b60005b82811015611310578489015182556001820191506020850194506020810190506112eb565b8683101561132d5784890151611329601f891682611236565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220ffca25a01ddf4d7d723f410420b17b1c8e18ea1bb34d57bd3f5f98b77ed7430664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xA50348DC EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xD7809252 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xEFEECB51 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xF32B5124 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xFEBE4909 EQ PUSH2 0x208 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x263C7868 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x3BB3A24D EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x8894C446 EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFD SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x4FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xDA9 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xE94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0xE94 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x449 DUP5 DUP7 PUSH2 0x7AB JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x478 SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A4 SWAP1 PUSH2 0xE34 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x51B DUP3 PUSH2 0x618 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x5A1 DUP3 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x612 DUP2 DUP5 DUP5 PUSH2 0x2DE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x66E DUP2 DUP5 PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x678 DUP4 DUP4 PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x68B SWAP1 PUSH2 0xFDC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74A SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x917 PUSH1 0x8 SLOAD DUP3 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 PUSH1 0x0 PUSH32 0xB12D87E4EE7F2FB6D2B85A4B7875BC64A51A45E85C452F968CE17E9EF133B938 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x96D SWAP2 SWAP1 PUSH2 0x1270 JUMP JUMPDEST POP DUP2 PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA01 DUP3 PUSH2 0x99F JUMP JUMPDEST PUSH2 0xA0B DUP2 DUP6 PUSH2 0x9AA JUMP JUMPDEST SWAP4 POP PUSH2 0xA1B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9BB JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA49 DUP2 DUP5 PUSH2 0x9F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA78 DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP2 EQ PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA95 DUP2 PUSH2 0xA6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC6 DUP3 PUSH2 0xA9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAD6 DUP2 PUSH2 0xABB JUMP JUMPDEST DUP2 EQ PUSH2 0xAE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF3 DUP2 PUSH2 0xACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0F PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP6 DUP3 DUP7 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB2F DUP6 DUP3 DUP7 ADD PUSH2 0xAE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB5D DUP5 DUP3 DUP6 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB7 DUP7 DUP3 DUP8 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBC8 DUP7 DUP3 DUP8 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBD9 DUP7 DUP3 DUP8 ADD PUSH2 0xAE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC0B DUP8 DUP3 DUP9 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xC1C DUP8 DUP3 DUP9 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xC2D DUP8 DUP3 DUP9 ADD PUSH2 0xAE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xC3E DUP8 DUP3 DUP9 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xABB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCB6 DUP3 PUSH2 0x9E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0xC7E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 PUSH2 0xA51 JUMP JUMPDEST SWAP1 POP PUSH2 0xCF4 DUP3 DUP3 PUSH2 0xCAD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xC7E JUMP JUMPDEST JUMPDEST PUSH2 0xD1D DUP3 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4C PUSH2 0xD47 DUP5 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xCDE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0xC79 JUMP JUMPDEST JUMPDEST PUSH2 0xD73 DUP5 DUP3 DUP6 PUSH2 0xD2A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD90 JUMPI PUSH2 0xD8F PUSH2 0xC74 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDA0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC0 JUMPI PUSH2 0xDBF PUSH2 0xA5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP6 DUP3 DUP7 ADD PUSH2 0xA86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xA60 JUMP JUMPDEST JUMPDEST PUSH2 0xDFB DUP6 DUP3 DUP7 ADD PUSH2 0xD7B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xE4C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE5F JUMPI PUSH2 0xE5E PUSH2 0xE05 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE9F DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAA DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xEC2 JUMPI PUSH2 0xEC1 PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20617070726F76656420746F206D616B6520746869732063616C6C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFE PUSH1 0x1D DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xF09 DUP3 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF2D DUP2 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xF4A DUP3 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF61 DUP3 DUP5 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6D696669657220686173680000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 PUSH1 0x15 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0xFB1 DUP3 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD5 DUP2 PUSH2 0xF99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE7 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0xE65 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105A PUSH1 0x18 DUP4 PUSH2 0x9AA JUMP JUMPDEST SWAP2 POP PUSH2 0x1065 DUP3 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1089 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109B DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A6 DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x10BD PUSH2 0xE65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1126 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x1130 DUP7 DUP4 PUSH2 0x10E9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x116D PUSH2 0x1168 PUSH2 0x1163 DUP5 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1187 DUP4 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1193 DUP3 PUSH2 0x1174 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x10F6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x11B0 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x11BB DUP2 DUP5 DUP5 PUSH2 0x117E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11DF JUMPI PUSH2 0x11D4 PUSH1 0x0 DUP3 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x11C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1224 JUMPI PUSH2 0x11F5 DUP2 PUSH2 0x10C4 JUMP JUMPDEST PUSH2 0x11FE DUP5 PUSH2 0x10D9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x120D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1221 PUSH2 0x1219 DUP6 PUSH2 0x10D9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x11C0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1247 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1229 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1260 DUP4 DUP4 PUSH2 0x1236 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1279 DUP3 PUSH2 0x99F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1291 PUSH2 0xC7E JUMP JUMPDEST JUMPDEST PUSH2 0x129C DUP3 SLOAD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x12A7 DUP3 DUP3 DUP6 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x12DA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x12C8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x12D2 DUP6 DUP3 PUSH2 0x1254 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x133A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x12E8 DUP7 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1310 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12EB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x132D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1329 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1236 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xCA 0x25 LOG0 SAR 0xDF 0x4D PUSH30 0x723F410420B17B1C8E18EA1BB34D57BD3F5F98B77ED7430664736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"786:3371:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3965:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1633:76;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1715:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3050:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2579:462;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4061:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2189:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3739:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3870:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1412:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3479:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3965:90;4011:13;4043:5;4036:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3965:90;:::o;1633:76::-;;;:::o;1715:90::-;1783:13;1715:90;;;:::o;3050:113::-;3115:7;3140:6;:16;3147:8;3140:16;;;;;;;;;;;;3133:23;;3050:113;;;:::o;2579:462::-;2706:15;2724:6;:16;2731:8;2724:16;;;;;;;;;;;;2706:34;;2750:13;2766:8;:17;2775:7;2766:17;;;;;;;;;;;;;;;;;;;;;2750:33;;2801:6;:16;2808:8;2801:16;;;;;;;;;;;2794:23;;;2827:9;2857:1;2839:8;:15;2848:5;2839:15;;;;;;;;;;;;;;;;:19;;;;:::i;:::-;2827:31;;2875:8;:15;2884:5;2875:15;;;;;;;;;;;;;;;:18;2891:1;2875:18;;;;;;;;;;;2868:25;;;2922:1;2903:8;:15;2912:5;2903:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;2964:30;2977:5;2983:10;2964:12;:30::i;:::-;3023:10;3004:6;:16;3011:8;3004:16;;;;;;;;;;;:29;;;;2668:373;;;2579:462;;;:::o;4061:94::-;4109:13;4141:7;4134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4061:94;:::o;2189:384::-;2342:10;2314:38;;:24;2329:8;2314:14;:24::i;:::-;:38;;;2306:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2481:8;2464:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;2454:37;;;;;;2431:17;2439:8;2431:7;:17::i;:::-;2414:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;2404:46;;;;;;:87;2396:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2528:38;2540:8;2550;2560:5;2528:11;:38::i;:::-;2189:384;;;;:::o;3739:125::-;3810:7;3835:12;:22;3848:8;3835:22;;;;;;;;;;;;;;;;;;;;;3828:29;;3739:125;;;:::o;3870:89::-;3919:7;3945;;3938:14;;3870:89;:::o;1412:215::-;1492:15;1510:10;1492:28;;1531:32;1544:7;1552:10;1531:12;:32::i;:::-;1573:28;1581:10;1592:8;1573:7;:28::i;:::-;1611:7;;:9;;;;;;;;;:::i;:::-;;;;;;1482:145;1412:215;;:::o;3479:253::-;3551:16;3570:6;:16;3577:8;3570:16;;;;;;;;;;;;3551:35;;3596:13;3612:8;:18;3621:8;3612:18;;;;;;;;;;;;;;;;;;;;;3596:34;;3655:5;3649:11;;:2;:11;;;3641:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3723:2;3698:12;:22;3711:8;3698:22;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3541:191;;3479:253;;:::o;3285:187::-;3367:3;3351:8;:13;3360:3;3351:13;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;3380:9;3392:8;:13;3401:3;3392:13;;;;;;;;;;;;;;;;3380:25;;3434:3;3415:8;:13;3424:3;3415:13;;;;;;;;;;;;;;;:16;3429:1;3415:16;;;;;;;;;;;:22;;;;3464:1;3447:8;:13;3456:3;3447:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;3341:131;3285:187;;:::o;1811:208::-;1909:10;1891:6;:15;1898:7;;1891:15;;;;;;;;;;;:28;;;;1929:30;1941:7;;1949:9;1929:11;:30::i;:::-;2004:7;;1992:10;1989:1;1975:37;;;;;;;;;;1811:208;;:::o;2025:158::-;2128:9;2107;:18;2117:7;2107:18;;;;;;;;;;;:30;;;;;;:::i;:::-;;2168:7;2153:23;;;;;;;;;;2025:158;;:::o;7:99:22:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:77;1713:7;1742:5;1731:16;;1676:77;;;:::o;1759:122::-;1832:24;1850:5;1832:24;:::i;:::-;1825:5;1822:35;1812:63;;1871:1;1868;1861:12;1812:63;1759:122;:::o;1887:139::-;1933:5;1971:6;1958:20;1949:29;;1987:33;2014:5;1987:33;:::i;:::-;1887:139;;;;:::o;2032:126::-;2069:7;2109:42;2102:5;2098:54;2087:65;;2032:126;;;:::o;2164:96::-;2201:7;2230:24;2248:5;2230:24;:::i;:::-;2219:35;;2164:96;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:329::-;3078:6;3127:2;3115:9;3106:7;3102:23;3098:32;3095:119;;;3133:79;;:::i;:::-;3095:119;3253:1;3278:53;3323:7;3314:6;3303:9;3299:22;3278:53;:::i;:::-;3268:63;;3224:117;3019:329;;;;:::o;3354:118::-;3441:24;3459:5;3441:24;:::i;:::-;3436:3;3429:37;3354:118;;:::o;3478:222::-;3571:4;3609:2;3598:9;3594:18;3586:26;;3622:71;3690:1;3679:9;3675:17;3666:6;3622:71;:::i;:::-;3478:222;;;;:::o;3706:619::-;3783:6;3791;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;4229:2;4255:53;4300:7;4291:6;4280:9;4276:22;4255:53;:::i;:::-;4245:63;;4200:118;3706:619;;;;;:::o;4331:765::-;4417:6;4425;4433;4441;4490:3;4478:9;4469:7;4465:23;4461:33;4458:120;;;4497:79;;:::i;:::-;4458:120;4617:1;4642:53;4687:7;4678:6;4667:9;4663:22;4642:53;:::i;:::-;4632:63;;4588:117;4744:2;4770:53;4815:7;4806:6;4795:9;4791:22;4770:53;:::i;:::-;4760:63;;4715:118;4872:2;4898:53;4943:7;4934:6;4923:9;4919:22;4898:53;:::i;:::-;4888:63;;4843:118;5000:2;5026:53;5071:7;5062:6;5051:9;5047:22;5026:53;:::i;:::-;5016:63;;4971:118;4331:765;;;;;;;:::o;5102:118::-;5189:24;5207:5;5189:24;:::i;:::-;5184:3;5177:37;5102:118;;:::o;5226:222::-;5319:4;5357:2;5346:9;5342:18;5334:26;;5370:71;5438:1;5427:9;5423:17;5414:6;5370:71;:::i;:::-;5226:222;;;;:::o;5454:117::-;5563:1;5560;5553:12;5577:117;5686:1;5683;5676:12;5700:180;5748:77;5745:1;5738:88;5845:4;5842:1;5835:15;5869:4;5866:1;5859:15;5886:281;5969:27;5991:4;5969:27;:::i;:::-;5961:6;5957:40;6099:6;6087:10;6084:22;6063:18;6051:10;6048:34;6045:62;6042:88;;;6110:18;;:::i;:::-;6042:88;6150:10;6146:2;6139:22;5929:238;5886:281;;:::o;6173:129::-;6207:6;6234:20;;:::i;:::-;6224:30;;6263:33;6291:4;6283:6;6263:33;:::i;:::-;6173:129;;;:::o;6308:308::-;6370:4;6460:18;6452:6;6449:30;6446:56;;;6482:18;;:::i;:::-;6446:56;6520:29;6542:6;6520:29;:::i;:::-;6512:37;;6604:4;6598;6594:15;6586:23;;6308:308;;;:::o;6622:146::-;6719:6;6714:3;6709;6696:30;6760:1;6751:6;6746:3;6742:16;6735:27;6622:146;;;:::o;6774:425::-;6852:5;6877:66;6893:49;6935:6;6893:49;:::i;:::-;6877:66;:::i;:::-;6868:75;;6966:6;6959:5;6952:21;7004:4;6997:5;6993:16;7042:3;7033:6;7028:3;7024:16;7021:25;7018:112;;;7049:79;;:::i;:::-;7018:112;7139:54;7186:6;7181:3;7176;7139:54;:::i;:::-;6858:341;6774:425;;;;;:::o;7219:340::-;7275:5;7324:3;7317:4;7309:6;7305:17;7301:27;7291:122;;7332:79;;:::i;:::-;7291:122;7449:6;7436:20;7474:79;7549:3;7541:6;7534:4;7526:6;7522:17;7474:79;:::i;:::-;7465:88;;7281:278;7219:340;;;;:::o;7565:654::-;7643:6;7651;7700:2;7688:9;7679:7;7675:23;7671:32;7668:119;;;7706:79;;:::i;:::-;7668:119;7826:1;7851:53;7896:7;7887:6;7876:9;7872:22;7851:53;:::i;:::-;7841:63;;7797:117;7981:2;7970:9;7966:18;7953:32;8012:18;8004:6;8001:30;7998:117;;;8034:79;;:::i;:::-;7998:117;8139:63;8194:7;8185:6;8174:9;8170:22;8139:63;:::i;:::-;8129:73;;7924:288;7565:654;;;;;:::o;8225:180::-;8273:77;8270:1;8263:88;8370:4;8367:1;8360:15;8394:4;8391:1;8384:15;8411:320;8455:6;8492:1;8486:4;8482:12;8472:22;;8539:1;8533:4;8529:12;8560:18;8550:81;;8616:4;8608:6;8604:17;8594:27;;8550:81;8678:2;8670:6;8667:14;8647:18;8644:38;8641:84;;8697:18;;:::i;:::-;8641:84;8462:269;8411:320;;;:::o;8737:180::-;8785:77;8782:1;8775:88;8882:4;8879:1;8872:15;8906:4;8903:1;8896:15;8923:194;8963:4;8983:20;9001:1;8983:20;:::i;:::-;8978:25;;9017:20;9035:1;9017:20;:::i;:::-;9012:25;;9061:1;9058;9054:9;9046:17;;9085:1;9079:4;9076:11;9073:37;;;9090:18;;:::i;:::-;9073:37;8923:194;;;;:::o;9123:179::-;9263:31;9259:1;9251:6;9247:14;9240:55;9123:179;:::o;9308:366::-;9450:3;9471:67;9535:2;9530:3;9471:67;:::i;:::-;9464:74;;9547:93;9636:3;9547:93;:::i;:::-;9665:2;9660:3;9656:12;9649:19;;9308:366;;;:::o;9680:419::-;9846:4;9884:2;9873:9;9869:18;9861:26;;9933:9;9927:4;9923:20;9919:1;9908:9;9904:17;9897:47;9961:131;10087:4;9961:131;:::i;:::-;9953:139;;9680:419;;;:::o;10105:79::-;10144:7;10173:5;10162:16;;10105:79;;;:::o;10190:157::-;10295:45;10315:24;10333:5;10315:24;:::i;:::-;10295:45;:::i;:::-;10290:3;10283:58;10190:157;;:::o;10353:256::-;10465:3;10480:75;10551:3;10542:6;10480:75;:::i;:::-;10580:2;10575:3;10571:12;10564:19;;10600:3;10593:10;;10353:256;;;;:::o;10615:171::-;10755:23;10751:1;10743:6;10739:14;10732:47;10615:171;:::o;10792:366::-;10934:3;10955:67;11019:2;11014:3;10955:67;:::i;:::-;10948:74;;11031:93;11120:3;11031:93;:::i;:::-;11149:2;11144:3;11140:12;11133:19;;10792:366;;;:::o;11164:419::-;11330:4;11368:2;11357:9;11353:18;11345:26;;11417:9;11411:4;11407:20;11403:1;11392:9;11388:17;11381:47;11445:131;11571:4;11445:131;:::i;:::-;11437:139;;11164:419;;;:::o;11589:233::-;11628:3;11651:24;11669:5;11651:24;:::i;:::-;11642:33;;11697:66;11690:5;11687:77;11684:103;;11767:18;;:::i;:::-;11684:103;11814:1;11807:5;11803:13;11796:20;;11589:233;;;:::o;11828:174::-;11968:26;11964:1;11956:6;11952:14;11945:50;11828:174;:::o;12008:366::-;12150:3;12171:67;12235:2;12230:3;12171:67;:::i;:::-;12164:74;;12247:93;12336:3;12247:93;:::i;:::-;12365:2;12360:3;12356:12;12349:19;;12008:366;;;:::o;12380:419::-;12546:4;12584:2;12573:9;12569:18;12561:26;;12633:9;12627:4;12623:20;12619:1;12608:9;12604:17;12597:47;12661:131;12787:4;12661:131;:::i;:::-;12653:139;;12380:419;;;:::o;12805:191::-;12845:3;12864:20;12882:1;12864:20;:::i;:::-;12859:25;;12898:20;12916:1;12898:20;:::i;:::-;12893:25;;12941:1;12938;12934:9;12927:16;;12962:3;12959:1;12956:10;12953:36;;;12969:18;;:::i;:::-;12953:36;12805:191;;;;:::o;13002:141::-;13051:4;13074:3;13066:11;;13097:3;13094:1;13087:14;13131:4;13128:1;13118:18;13110:26;;13002:141;;;:::o;13149:93::-;13186:6;13233:2;13228;13221:5;13217:14;13213:23;13203:33;;13149:93;;;:::o;13248:107::-;13292:8;13342:5;13336:4;13332:16;13311:37;;13248:107;;;;:::o;13361:393::-;13430:6;13480:1;13468:10;13464:18;13503:97;13533:66;13522:9;13503:97;:::i;:::-;13621:39;13651:8;13640:9;13621:39;:::i;:::-;13609:51;;13693:4;13689:9;13682:5;13678:21;13669:30;;13742:4;13732:8;13728:19;13721:5;13718:30;13708:40;;13437:317;;13361:393;;;;;:::o;13760:60::-;13788:3;13809:5;13802:12;;13760:60;;;:::o;13826:142::-;13876:9;13909:53;13927:34;13936:24;13954:5;13936:24;:::i;:::-;13927:34;:::i;:::-;13909:53;:::i;:::-;13896:66;;13826:142;;;:::o;13974:75::-;14017:3;14038:5;14031:12;;13974:75;;;:::o;14055:269::-;14165:39;14196:7;14165:39;:::i;:::-;14226:91;14275:41;14299:16;14275:41;:::i;:::-;14267:6;14260:4;14254:11;14226:91;:::i;:::-;14220:4;14213:105;14131:193;14055:269;;;:::o;14330:73::-;14375:3;14330:73;:::o;14409:189::-;14486:32;;:::i;:::-;14527:65;14585:6;14577;14571:4;14527:65;:::i;:::-;14462:136;14409:189;;:::o;14604:186::-;14664:120;14681:3;14674:5;14671:14;14664:120;;;14735:39;14772:1;14765:5;14735:39;:::i;:::-;14708:1;14701:5;14697:13;14688:22;;14664:120;;;14604:186;;:::o;14796:543::-;14897:2;14892:3;14889:11;14886:446;;;14931:38;14963:5;14931:38;:::i;:::-;15015:29;15033:10;15015:29;:::i;:::-;15005:8;15001:44;15198:2;15186:10;15183:18;15180:49;;;15219:8;15204:23;;15180:49;15242:80;15298:22;15316:3;15298:22;:::i;:::-;15288:8;15284:37;15271:11;15242:80;:::i;:::-;14901:431;;14886:446;14796:543;;;:::o;15345:117::-;15399:8;15449:5;15443:4;15439:16;15418:37;;15345:117;;;;:::o;15468:169::-;15512:6;15545:51;15593:1;15589:6;15581:5;15578:1;15574:13;15545:51;:::i;:::-;15541:56;15626:4;15620;15616:15;15606:25;;15519:118;15468:169;;;;:::o;15642:295::-;15718:4;15864:29;15889:3;15883:4;15864:29;:::i;:::-;15856:37;;15926:3;15923:1;15919:11;15913:4;15910:21;15902:29;;15642:295;;;;:::o;15942:1395::-;16059:37;16092:3;16059:37;:::i;:::-;16161:18;16153:6;16150:30;16147:56;;;16183:18;;:::i;:::-;16147:56;16227:38;16259:4;16253:11;16227:38;:::i;:::-;16312:67;16372:6;16364;16358:4;16312:67;:::i;:::-;16406:1;16430:4;16417:17;;16462:2;16454:6;16451:14;16479:1;16474:618;;;;17136:1;17153:6;17150:77;;;17202:9;17197:3;17193:19;17187:26;17178:35;;17150:77;17253:67;17313:6;17306:5;17253:67;:::i;:::-;17247:4;17240:81;17109:222;16444:887;;16474:618;16526:4;16522:9;16514:6;16510:22;16560:37;16592:4;16560:37;:::i;:::-;16619:1;16633:208;16647:7;16644:1;16641:14;16633:208;;;16726:9;16721:3;16717:19;16711:26;16703:6;16696:42;16777:1;16769:6;16765:14;16755:24;;16824:2;16813:9;16809:18;16796:31;;16670:4;16667:1;16663:12;16658:17;;16633:208;;;16869:6;16860:7;16857:19;16854:179;;;16927:9;16922:3;16918:19;16912:26;16970:48;17012:4;17004:6;17000:17;16989:9;16970:48;:::i;:::-;16962:6;16955:64;16877:156;16854:179;17079:1;17075;17067:6;17063:14;17059:22;17053:4;17046:36;16481:611;;;16444:887;;16034:1303;;;15942:1395;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"996800","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(uint256,address)":"29536","createNFT(uint256,string)":"infinite","deleteZkNft(uint256,address)":"651","getApprovedAdd(uint256)":"2909","getNumberOfTokens()":"2503","getTokenURI(uint256)":"infinite","name()":"infinite","ownerOf(uint256)":"infinite","symbol()":"infinite","transferFrom(uint256,uint256,address,uint256)":"infinite","transferNFT(uint256,uint256,address)":"infinite"},"internal":{"exists(uint256)":"infinite","mintNFT(uint256,string memory)":"infinite","setAddAndCom(address,uint256)":"infinite","setTokenURI(uint256,string memory)":"infinite"}},"methodIdentifiers":{"approve(uint256,address)":"febe4909","createNFT(uint256,string)":"f32b5124","deleteZkNft(uint256,address)":"263c7868","getApprovedAdd(uint256)":"d7809252","getNumberOfTokens()":"efeecb51","getTokenURI(uint256)":"3bb3a24d","name()":"06fdde03","ownerOf(uint256)":"6352211e","symbol()":"95d89b41","transferFrom(uint256,uint256,address,uint256)":"a50348dc","transferNFT(uint256,uint256,address)":"8894c446"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"NFTTransfered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"op\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deleteZkNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getApprovedAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerCom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyerCom\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"transferNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zkNFT.sol\":\"zkNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Izknft.sol\":{\"content\":\"//SPDX-License-Indentifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface IZkNFT {\\n    \\n    function approve(uint256 _tokenID, address op) external;\\n    function getApprovedAdd(uint256 _tokenID) external view returns(address);    \\n    function ownerOf(uint256 _tokenID) external view returns (uint256);\\n    function transferNFT(uint256 _tokenID, uint256 nullifierHash, address buyer) external;\\n    function transferFrom(uint256 ownerNul, uint256 buyerNul, address buyer, uint256 _tokenID) external;\\n    function getTokenURI(uint256 _tokenID) external view returns(string memory);\\n    function name() external view  returns (string memory);\\n    function symbol() external view  returns (string memory);\\n    function deleteZkNft(uint256 tokenID, address owner) external;\\n}\",\"keccak256\":\"0x084b5a9fe01e11230cb9cfda5b7342a947dd854f62e84e3c697d7b8073d42b4a\"},\"contracts/zkNFT.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./Izknft.sol\\\";\\n\\n// function approve(uint256 _tokenID, address op) external;\\n//     function getApprovedAdd(uint256 _tokenID) external view returns(address);    \\n//     function ownerOf(uint256 _tokenID) external view returns (uint256);\\n//     function transferNFT(uint256 _tokenID, uint256 nullifierHash, address buyer) external;\\n//     function transferFrom(uint256 ownerNul, uint256 buyerNul, address buyer, uint256 _tokenID) external;\\n//     function getTokenURI(uint256 _tokenID) external view returns(string memory);\\n//     function name() external view  returns (string memory);\\n//     function symbol() external view  returns (string memory);\\n//     function deleteZkNft(uint256 tokenID, address owner) external;\\n\\n\\ncontract zkNFT is IZkNFT{\\n\\n    event NFTTransfered(uint256 indexed from ,uint256 indexed to ,uint256 indexed tokenID);\\n    event MetadataUpdate(uint256 indexed tokenID);\\n\\n    mapping(address => mapping (uint256=> uint256)) private addToCom;\\n    mapping(uint256 => address) private comToAdd;\\n    mapping(address => uint256) private noOfComs; \\n    mapping(uint256 => uint256) private owners;\\n    mapping(uint256 => string) private tokenURIs;\\n    mapping (uint256 => address) tokenIDToAdd;\\n\\n    string _name = \\\"zkMP\\\";\\n    string _symbol = \\\"Z\\\";\\n    uint256 private tokenID;\\n    \\n    constructor(){\\n        tokenID = 0;\\n    }\\n\\n    function createNFT(uint256 commitment, string memory tokenURI) public {\\n        address creator = msg.sender;\\n\\n        setAddAndCom(creator,commitment);\\n        mintNFT(commitment,tokenURI);\\n        tokenID++;\\n    }\\n\\n    function deleteZkNft(uint256 tokenID, address owner) override public{\\n\\n    }\\n\\n    function getTokenURI(uint256 _tokenID) override public view returns(string memory){\\n\\n    }\\n\\n    function mintNFT(uint256 commitment,string memory _tokenURI) internal {\\n        owners[tokenID] = commitment;\\n        setTokenURI(tokenID,_tokenURI);\\n\\n        emit NFTTransfered(0, commitment, tokenID);\\n    }\\n\\n    function setTokenURI(uint256 tokenId, string memory _tokenURI) internal {\\n        tokenURIs[tokenId] = _tokenURI;\\n\\n        emit MetadataUpdate(tokenId);\\n    }\\n\\n    function transferFrom(uint256 ownerCom, uint256 buyerCom, address buyer, uint256 _tokenID) public override{\\n\\n        require(getApprovedAdd(_tokenID) == msg.sender, \\\"No approved to make this call\\\");\\n        require(keccak256(abi.encodePacked(ownerOf(_tokenID))) == keccak256(abi.encodePacked(ownerCom)), \\\"Invalid comifier hash\\\");\\n\\n        transferNFT(_tokenID, buyerCom, buyer);\\n    }\\n\\n    function transferNFT(uint256 _tokenID, uint256 commitment, address buyer) public override{\\n        // owner losing nft\\n        uint256 crtrCom = owners[_tokenID];\\n        address owner = comToAdd[crtrCom]; \\n        delete owners[_tokenID];\\n        uint256 n = noOfComs[owner] - 1;\\n        delete addToCom[owner][n];\\n        noOfComs[owner] -= 1 ;\\n\\n        // Buyer getting nft\\n        setAddAndCom(buyer,commitment);\\n        owners[_tokenID] = commitment; \\n    }   \\n\\n    function ownerOf(uint256 _tokenID) public override view returns (uint256){\\n        return owners[_tokenID];\\n    }\\n\\n    function exists(uint256 _tokenID) internal view returns (bool) {\\n       return !(owners[_tokenID] == 0);\\n    }\\n\\n    function setAddAndCom(address add, uint256 com) internal{\\n        comToAdd[com] = add;\\n        uint256 n = noOfComs[add];\\n        addToCom[add][n] = com;\\n        noOfComs[add] += 1;\\n    }\\n\\n\\n    function approve(uint256 _tokenID, address op) public override{\\n        uint256 ownerCom = owners[_tokenID];\\n        address owner = comToAdd[ownerCom];\\n\\n        require(op != owner,\\\"Invalid operator address\\\");\\n        tokenIDToAdd[_tokenID] = op;\\n    }\\n\\n\\n    function getApprovedAdd(uint256 _tokenID) public override view returns(address){\\n        return tokenIDToAdd[_tokenID];\\n    }\\n\\n    function getNumberOfTokens() public view returns(uint256) {\\n        return tokenID;\\n    }\\n\\n    function name() public override view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public override view returns (string memory) {\\n        return _symbol;\\n    }\\n} \",\"keccak256\":\"0x763eb8b52df3a577169ac8167d4f95be466cc7ef4c94f2b9afea4a7acb7e3d29\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4123,"contract":"contracts/zkNFT.sol:zkNFT","label":"addToCom","offset":0,"slot":"0","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":4127,"contract":"contracts/zkNFT.sol:zkNFT","label":"comToAdd","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_address)"},{"astId":4131,"contract":"contracts/zkNFT.sol:zkNFT","label":"noOfComs","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":4135,"contract":"contracts/zkNFT.sol:zkNFT","label":"owners","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_uint256)"},{"astId":4139,"contract":"contracts/zkNFT.sol:zkNFT","label":"tokenURIs","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":4143,"contract":"contracts/zkNFT.sol:zkNFT","label":"tokenIDToAdd","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_address)"},{"astId":4146,"contract":"contracts/zkNFT.sol:zkNFT","label":"_name","offset":0,"slot":"6","type":"t_string_storage"},{"astId":4149,"contract":"contracts/zkNFT.sol:zkNFT","label":"_symbol","offset":0,"slot":"7","type":"t_string_storage"},{"astId":4151,"contract":"contracts/zkNFT.sol:zkNFT","label":"tokenID","offset":0,"slot":"8","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}